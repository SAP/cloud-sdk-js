name: build

on:
  pull_request:
    branches-ignore: [documentation, gh-pages]
  push:
    branches: [master]
    tags: ['v*']
    paths-ignore:
    - 'docs/**'

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        node-version: [10.x, 12.x]
    steps:
      - uses: actions/checkout@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --frozen-lockfile
      - run: yarn test:unit
      - run: yarn test:integration
      - run: yarn test:type
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --frozen-lockfile
      - run: yarn lint
        name: Static Code Check
      - run: yarn check:test-service
        name: Test Service Version Check
      - run: yarn check:dependencies
        name: Undeclared dependency check
      - run: yarn check:vulnerability
        name: Dependency Vulnerability Check
      - run: yarn check:license
        name: License Check
      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v1.1
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --frozen-lockfile
      - name: Build odata v4 service
        run: yarn e2e-test:build
      - name: Start odata v4 service
        run: yarn e2e-test:start-server:deamon
      - run: yarn test:e2e
  canary-release:
    if: github.event_name != 'pull_request' && !startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [tests, checks]
    steps:
      - uses: actions/checkout@v1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --frozen-lockfile
      - name: Canary Release
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' >> .npmrc
          yarn lerna publish --canary --no-push --no-git-tag-version --dist-tag canary --force-publish --preid `git rev-parse --short HEAD` -y
        env:
          NPM_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}
  draft-github-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [tests, checks]
    steps:
      - uses: actions/checkout@v1
      - run: yarn install --frozen-lockfile
      - uses: ./.github/actions/get-changelog
        name: Get Changelog
        id: get-changelog
      - uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          body: ${{ steps.get-changelog.outputs.changelog }}
