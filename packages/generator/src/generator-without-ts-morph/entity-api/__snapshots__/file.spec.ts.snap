// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`entity api file gets proper file 1`] = `
"import { Breakfast } from './Breakfast';
import { BreakfastRequestBuilder } from './BreakfastRequestBuilder';
import { BrunchApi } from './BrunchApi';
import { CustomField, defaultDeSerializers, DefaultDeSerializers, DeSerializers, AllFields, entityBuilder, EntityBuilderType, EntityApi, FieldBuilder, Time, OrderableEdmTypeField, OneToOneLink } from '@sap-cloud-sdk/odata-v2';
export class BreakfastApi<DeSerializersT extends DeSerializers = DefaultDeSerializers> implements 
    EntityApi<
      Breakfast<
        DeSerializersT
      >, 
      DeSerializersT
    > {
  public deSerializers: DeSerializersT;

  constructor(
    deSerializers: DeSerializersT = defaultDeSerializers as any) {
    this.deSerializers = deSerializers;
  }

  private navigationPropertyFields!: {
      /**
       * Static representation of the one-to-one navigation property {@link toBrunch} for query construction.
       * Use to reference this property in query operations such as 'select' in the fluent request API.
       */
      TO_BRUNCH: OneToOneLink<
            Breakfast<DeSerializersT>,
            DeSerializersT,
            BrunchApi<DeSerializersT>
          >
    };

  _addNavigationProperties(
      linkedApis: [
        BrunchApi<DeSerializersT>
      ]): this {
        this.navigationPropertyFields = {
          TO_BRUNCH: new OneToOneLink(
              'TO_BRUNCH',
              this,
              linkedApis[0]
            )
        };
        return this;
      }
  
  entityConstructor = Breakfast;
  
  requestBuilder(): BreakfastRequestBuilder<
    DeSerializersT
  > {
    return new BreakfastRequestBuilder<DeSerializersT>(this);
  }
  
  entityBuilder(): EntityBuilderType<
    Breakfast<
      DeSerializersT
    >,
    DeSerializersT
  > {
    return entityBuilder<Breakfast<DeSerializersT>, DeSerializersT>(this);
  }

  customField<NullableT extends boolean = false>(
    fieldName: string,
    isNullable: NullableT = false as NullableT
  ): CustomField<
  Breakfast<
      DeSerializersT>,
    DeSerializersT,
    NullableT
  > {
    return new CustomField(
      fieldName,
      this.entityConstructor,
      this.deSerializers,
      isNullable
    ) as any;
  }

  private _fieldBuilder?: FieldBuilder<typeof Breakfast, DeSerializersT>;
  get fieldBuilder() {
    if(!this._fieldBuilder){
      this._fieldBuilder = new FieldBuilder(Breakfast, this.deSerializers);
    }
    return this._fieldBuilder;
  }

  private _schema?: {
    ENTITY_NAME: OrderableEdmTypeField<Breakfast<DeSerializers>, DeSerializersT, 'Edm.String', false, true>,
NUMBER_OF_EGGS: OrderableEdmTypeField<Breakfast<DeSerializers>, DeSerializersT, 'Edm.Decimal', true, true>,
BREAKFAST_TIME: OrderableEdmTypeField<Breakfast<DeSerializers>, DeSerializersT, 'Edm.DateTime', false, true>,
/**
 * Static representation of the one-to-one navigation property {@link toBrunch} for query construction.
 * Use to reference this property in query operations such as 'select' in the fluent request API.
 */
TO_BRUNCH: OneToOneLink<
      Breakfast<DeSerializersT>,
      DeSerializersT,
      BrunchApi<DeSerializersT>
    >,
ALL_FIELDS: AllFields<Breakfast<DeSerializers>>
  };

  get schema() {
    if (!this._schema) {
      const fieldBuilder = this.fieldBuilder;
      this._schema = { 
    /**
 * Static representation of the {@link entityName} property for query construction.
 * Use to reference this property in query operations such as 'select' in the fluent request API.
 */
ENTITY_NAME: fieldBuilder.buildEdmTypeField('EntityName', 'Edm.String', false),
/**
 * Static representation of the {@link numberOfEggs} property for query construction.
 * Use to reference this property in query operations such as 'select' in the fluent request API.
 */
NUMBER_OF_EGGS: fieldBuilder.buildEdmTypeField('A_noEggs', 'Edm.Decimal', true),
/**
 * Static representation of the {@link breakfastTime} property for query construction.
 * Use to reference this property in query operations such as 'select' in the fluent request API.
 */
BREAKFAST_TIME: fieldBuilder.buildEdmTypeField('BreakfastTime', 'Edm.DateTime', false),
...this.navigationPropertyFields,
/**
 * 
 * All fields selector.
 */
ALL_FIELDS: new AllFields('*', Breakfast) 
  };
    }
  
    return this._schema;
  }
}"
`;
