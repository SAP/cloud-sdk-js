// tslint:disable
/**
 * Calculation
 * You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { BusinessUnitCommonData } from './business-unit-common-data';
import { HeaderDateTime } from './header-date-time';
import { MessageID } from './message-id';
import { Response } from './response';
import { WorkstationIDCommonData } from './workstation-idcommon-data';

/**
 * Contains basic information for the request or the response.
 * @export
 * @interface ARTSCommonHeaderType
 */
export interface ARTSCommonHeaderType {
    /**
     * 
     * @type {MessageID}
     * @memberof ARTSCommonHeaderType
     */
    MessageID: MessageID;
    /**
     * The date and time when the request was created. Although this is an array, only 1 entry is allowed.
     * @type {Array<HeaderDateTime>}
     * @memberof ARTSCommonHeaderType
     */
    DateTime?: Array<HeaderDateTime>;
    /**
     * 
     * @type {Response}
     * @memberof ARTSCommonHeaderType
     */
    Response?: Response;
    /**
     * Identifies the agent which sent this message.
     * @type {string}
     * @memberof ARTSCommonHeaderType
     */
    Requestor?: string;
    /**
     * Business unit for which prices and promotions should be determined. Although this is an array, only 1 entry is allowed.
     * @type {Array<BusinessUnitCommonData>}
     * @memberof ARTSCommonHeaderType
     */
    BusinessUnit: Array<BusinessUnitCommonData>;
    /**
     * 
     * @type {WorkstationIDCommonData}
     * @memberof ARTSCommonHeaderType
     */
    WorkstationID?: WorkstationIDCommonData;
    /**
     * Uppercase ISO code of the language in which language-dependent texts like a promotion description should be returned. Uppercase representation. RequestedLanguage is not applied in conjunction with RequestedMultiLanguage. If not set, any language found will be used with Client API version 1.0. As of Client API version 2.0, use RequestedMultiLanguage instead. 
     * @type {string}
     * @memberof ARTSCommonHeaderType
     */
    RequestedLanguage?: string;
    /**
     * Uppercase ISO codes of the languages in which language dependent-texts like a promotion description should be returned. Not to be used in conjunction with RequestedLanguage. Requires at least API version 2.0. If not set, all languages found will be used.
     * @type {Array<string>}
     * @memberof ARTSCommonHeaderType
     */
    RequestedMultiLanguage?: Array<string>;
    /**
     * This is currently not supported.
     * @type {Array<object>}
     * @memberof ARTSCommonHeaderType
     */
    any?: Array<object>;
    /**
     * Part of the compound key for items, item hierarchy nodes and business units. Each price record and each promotion refers to exactly one master data source system. Supported with Client API version 2.1 or higher. This field is required when using the cloud version of the price calculation. 
     * @type {string}
     * @memberof ARTSCommonHeaderType
     */
    MasterDataSourceSystemID: string;
    /**
     * Describes what to do with the provided data.
     * @type {string}
     * @memberof ARTSCommonHeaderType
     */
    ActionCode: ARTSCommonHeaderTypeActionCodeEnum;
    /**
     * Defines whether this is a calculation request or a calculation response if the consumer only sends type \"Request\".
     * @type {string}
     * @memberof ARTSCommonHeaderType
     */
    MessageType: ARTSCommonHeaderTypeMessageTypeEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum ARTSCommonHeaderTypeActionCodeEnum {
    Calculate = 'Calculate'
}
/**
    * @export
    * @enum {string}
    */
export enum ARTSCommonHeaderTypeMessageTypeEnum {
    Request = 'Request',
    Response = 'Response'
}



