// tslint:disable
/**
* Calculation
* You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
*
* The version of the OpenAPI document: 1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


import { AmountCommonData } from './amount-common-data';
import { ExtendedAmountType } from './extended-amount-type';
import { FrequentShopperPointsModifierType } from './frequent-shopper-points-modifier-type';
import { ItemID } from './item-id';
import { ItemLink } from './item-link';
import { MerchandiseHierarchyCommonData } from './merchandise-hierarchy-common-data';
import { PromotionManualTriggerType } from './promotion-manual-trigger-type';
import { PromotionPriceDerivationRuleReferenceType } from './promotion-price-derivation-rule-reference-type';
import { QuantityCommonData } from './quantity-common-data';
import { RetailPriceModifierDomainSpecific } from './retail-price-modifier-domain-specific';
import { UnitPriceCommonData } from './unit-price-common-data';

/**
 * A flavor of a line item whereby customers purchase an unavailable item. The store places a special order on behalf of this purchase, and the item is to be delivered as soon as available. The customer may, or may not pay for the item at the time of the order placement. 
 * @export
 * @interface CustomerOrderForDeliveryBase
 */
export interface CustomerOrderForDeliveryBase {
    /**
     * This is currently not supported.
     * @type {Array<object>}
     * @memberof CustomerOrderForDeliveryBase
     */
    any?: Array<object>;
    /**
     * Although this is an array, only 1 entry is supported.
     * @type {Array<ItemID>}
     * @memberof CustomerOrderForDeliveryBase
     */
    ItemID?: Array<ItemID>;
    /**
     * For information purposes only. The relevant list of hierarchy nodes is expected on the level of LineItemDomainSpecific.
     * @type {Array<MerchandiseHierarchyCommonData>}
     * @memberof CustomerOrderForDeliveryBase
     */
    MerchandiseHierarchy?: Array<MerchandiseHierarchyCommonData>;
    /**
     * 
     * @type {UnitPriceCommonData}
     * @memberof CustomerOrderForDeliveryBase
     */
    RegularSalesUnitPrice?: UnitPriceCommonData;
    /**
     * 
     * @type {ExtendedAmountType}
     * @memberof CustomerOrderForDeliveryBase
     */
    ExtendedAmount?: ExtendedAmountType;
    /**
     * 
     * @type {AmountCommonData}
     * @memberof CustomerOrderForDeliveryBase
     */
    ExtendedDiscountAmount?: AmountCommonData;
    /**
     * The quantity of this line item. Although this is an array, only 1 entry is allowed.
     * @type {Array<QuantityCommonData>}
     * @memberof CustomerOrderForDeliveryBase
     */
    Quantity?: Array<QuantityCommonData>;
    /**
     * The list of modifiers of the sales price triggered by applied price derivation rules.
     * @type {Array<RetailPriceModifierDomainSpecific>}
     * @memberof CustomerOrderForDeliveryBase
     */
    RetailPriceModifier?: Array<RetailPriceModifierDomainSpecific>;
    /**
     * Reserved for future use.
     * @type {Array<ItemLink>}
     * @memberof CustomerOrderForDeliveryBase
     */
    ItemLink?: Array<ItemLink>;
    /**
     * Reserved for future use.
     * @type {string}
     * @memberof CustomerOrderForDeliveryBase
     */
    ItemType?: CustomerOrderForDeliveryBaseItemTypeEnum;
    /**
     * Specifies whether this line item may be discounted or not. If set to true, the line item may still be used as an eligibility for promotions. However, such an item does not contribute to fulfill the amount or quantity threshold that is needed for a promotion to become effective. 
     * @type {boolean}
     * @memberof CustomerOrderForDeliveryBase
     */
    NonDiscountableFlag?: boolean;
    /**
     * If set to true, the price calculation uses the provided value of RegularSalesUnitPrice as regular price and does not perform a price lookup for this line item.
     * @type {boolean}
     * @memberof CustomerOrderForDeliveryBase
     */
    FixedPriceFlag?: boolean;
    /**
     * Reserved for future use.
     * @type {boolean}
     * @memberof CustomerOrderForDeliveryBase
     */
    TaxIncludedInPriceFlag?: boolean;
    /**
     * Set this flag to true, if the specified quantity has a different dimension than \"piece\", for example, if fractional quantities are possible.
     * @type {boolean}
     * @memberof CustomerOrderForDeliveryBase
     */
    NonPieceGoodFlag?: boolean;
    /**
     * Set this flag to true if the corresponding line item is eligible for receiving loyalty points.
     * @type {boolean}
     * @memberof CustomerOrderForDeliveryBase
     */
    FrequentShopperPointsEligibilityFlag?: boolean;
    /**
     * Reserved for future use.
     * @type {string}
     * @memberof CustomerOrderForDeliveryBase
     */
    DiscountTypeCode?: string;
    /**
     * Reserved for future use. Value 00 corresponds to \"regular price\".
     * @type {string}
     * @memberof CustomerOrderForDeliveryBase
     */
    PriceTypeCode?: CustomerOrderForDeliveryBasePriceTypeCodeEnum;
    /**
     * Determines if the price calculation should consider the line item as a trigger. This information is needed if another process (e.g. a return regarding to an existing transaction) applies rules for the line item that should not be applied. Assuming that the line item is discountable in general, the line item does not trigger a line-item-releated price derivation rule, get discount or get bonus points, if you set this flag to true. However, it can do so for a transaction-related price derivation rule. 
     * @type {boolean}
     * @memberof CustomerOrderForDeliveryBase
     */
    NotConsideredByPriceEngineFlag?: boolean;
    /**
     * The list of modifiers for loyalty points determined by applied price rules.
     * @type {Array<FrequentShopperPointsModifierType>}
     * @memberof CustomerOrderForDeliveryBase
     */
    FrequentShopperPointsModifier?: Array<FrequentShopperPointsModifierType>;
    /**
     * The list of promotions for which the corresponding line item contributed as an eligibility.
     * @type {Array<PromotionPriceDerivationRuleReferenceType>}
     * @memberof CustomerOrderForDeliveryBase
     */
    PromotionPriceDerivationRuleReference?: Array<PromotionPriceDerivationRuleReferenceType>;
    /**
     * Manual triggers created by the client in order to make the transaction eligible for promotions that contain eligibilities of type manual trigger.
     * @type {Array<PromotionManualTriggerType>}
     * @memberof CustomerOrderForDeliveryBase
     */
    PromotionManualTrigger?: Array<PromotionManualTriggerType>;
}

/**
    * @export
    * @enum {string}
    */
export enum CustomerOrderForDeliveryBaseItemTypeEnum {
    Stock = 'Stock',
    GiftCertificate = 'GiftCertificate'
}
/**
    * @export
    * @enum {string}
    */
export enum CustomerOrderForDeliveryBasePriceTypeCodeEnum {
    _00 = '00',
    _01 = '01'
}



