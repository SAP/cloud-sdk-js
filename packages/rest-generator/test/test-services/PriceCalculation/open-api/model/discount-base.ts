// tslint:disable
/**
* Calculation
* You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
*
* The version of the OpenAPI document: 1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


import { Amount } from './amount';
import { AmountCommonData } from './amount-common-data';
import { NewPrice } from './new-price';
import { Percent } from './percent';
import { PreviousPrice } from './previous-price';
import { PriceDerivationRuleBase } from './price-derivation-rule-base';
import { PromotionID } from './promotion-id';
import { QuantityCommonData } from './quantity-common-data';
import { RoundingCommonData } from './rounding-common-data';

/**
 * Generated during the price calculation as a separate line item.
 * @export
 * @interface DiscountBase
 */
export interface DiscountBase {
    /**
     * Although this is an array, onyl exactly 1 entry is suppored
     * @type {Array<PriceDerivationRuleBase>}
     * @memberof DiscountBase
     */
    PriceDerivationRule: Array<PriceDerivationRuleBase>;
    /**
     * This is currently not supported.
     * @type {Array<object>}
     * @memberof DiscountBase
     */
    any?: Array<object>;
    /**
     * The sequence number for the trigger that allows more than one trigger to be assigned to a single RetailPriceModifier. It references the ManualTriggerSequenceNumber of PromotionManualTriggerType that triggered this price modifier. 
     * @type {number}
     * @memberof DiscountBase
     */
    ManualTriggerSequenceNumber?: number;
    /**
     * 
     * @type {AmountCommonData}
     * @memberof DiscountBase
     */
    ExtraAmount?: AmountCommonData;
    /**
     * Determines if this discount was created by an external system. If yes, it must not be changed, but its own modifications with higher sequence may be applied. Default value is false. 
     * @type {boolean}
     * @memberof DiscountBase
     */
    ExternalSystemOriginatorFlag?: boolean;
    /**
     * Identifies this retail price modifier in the corresponding line item.
     * @type {number}
     * @memberof DiscountBase
     */
    SequenceNumber: number;
    /**
     * 
     * @type {Amount}
     * @memberof DiscountBase
     */
    Amount?: Amount;
    /**
     * 
     * @type {Percent}
     * @memberof DiscountBase
     */
    Percent?: Percent;
    /**
     * 
     * @type {PreviousPrice}
     * @memberof DiscountBase
     */
    PreviousPrice?: PreviousPrice;
    /**
     * 
     * @type {NewPrice}
     * @memberof DiscountBase
     */
    NewPrice?: NewPrice;
    /**
     * 
     * @type {PromotionID}
     * @memberof DiscountBase
     */
    PromotionID?: PromotionID;
    /**
     * The link to the discount line item that triggered the creation of this RetailPriceModifier in order to keep the prorated transaction-related discount for the current line item. Is not used in the context of the modification of the price of a single line item (item-related discount). Although this is an array, it contains at most one entry. 
     * @type {Array<number>}
     * @memberof DiscountBase
     */
    ItemLink?: Array<number>;
    /**
     * 
     * @type {QuantityCommonData}
     * @memberof DiscountBase
     */
    Quantity?: QuantityCommonData;
    /**
     * 
     * @type {RoundingCommonData}
     * @memberof DiscountBase
     */
    Rounding?: RoundingCommonData;
    /**
     * 
     * @type {AmountCommonData}
     * @memberof DiscountBase
     */
    ComputationBaseAmount?: AmountCommonData;
    /**
     * Specifies whether the discount amount applies to the whole transaction or is prorated to the discountable line items of the transaction. Currently always true. 
     * @type {boolean}
     * @memberof DiscountBase
     */
    ProratedFlag?: boolean;
}


