// tslint:disable
/**
 * Calculation
 * You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { AmountCommonData } from './amount-common-data';
import { PointsAwarded } from './points-awarded';
import { PriceDerivationRuleBase } from './price-derivation-rule-base';

/**
 * Information about changes to loyalty points triggered by applied price rules.
 * @export
 * @interface FrequentShopperPointsModifierType
 */
export interface FrequentShopperPointsModifierType {
    /**
     * Identifies the promotion that triggered the loyalty reward. Decimal representation of a 64 bit integer value.
     * @type {string}
     * @memberof FrequentShopperPointsModifierType
     */
    PromotionID: string;
    /**
     * The number of points awarded by the line item.
     * @type {Array<PointsAwarded>}
     * @memberof FrequentShopperPointsModifierType
     */
    PointsAwarded?: Array<PointsAwarded>;
    /**
     * The sequence number for the trigger to be assigned to a single LoyaltyReward. It references the ManualTriggerSequenceNumber of PromotionManualTriggerType that triggered this reward. 
     * @type {number}
     * @memberof FrequentShopperPointsModifierType
     */
    ManualTriggerSequenceNumber?: number;
    /**
     * 
     * @type {AmountCommonData}
     * @memberof FrequentShopperPointsModifierType
     */
    PointsAwardedAmount?: AmountCommonData;
    /**
     * 
     * @type {AmountCommonData}
     * @memberof FrequentShopperPointsModifierType
     */
    ComputationBaseAmount?: AmountCommonData;
    /**
     * Determines if this LoyaltyReward was created by an external system. If yes, it must not be changed, but its own modifications with higher sequence may be applied. 
     * @type {boolean}
     * @memberof FrequentShopperPointsModifierType
     */
    ExternalSystemOriginatorFlag?: boolean;
    /**
     * 
     * @type {PriceDerivationRuleBase}
     * @memberof FrequentShopperPointsModifierType
     */
    PriceDerivationRule?: PriceDerivationRuleBase;
    /**
     * This is currently not supported.
     * @type {Array<object>}
     * @memberof FrequentShopperPointsModifierType
     */
    any?: Array<object>;
    /**
     * Type code of the loyalty reward
     * @type {string}
     * @memberof FrequentShopperPointsModifierType
     */
    TypeCode?: FrequentShopperPointsModifierTypeTypeCodeEnum;
    /**
     * Identifies this loyalty points modifier in the current line item.
     * @type {number}
     * @memberof FrequentShopperPointsModifierType
     */
    SequenceNumber: number;
    /**
     * The line item quantity contributing to this modifier.
     * @type {number}
     * @memberof FrequentShopperPointsModifierType
     */
    AppliedQuantity?: number;
    /**
     * Link to the LoyaltyReward line item that forced the creation of this FrequentShopperPointsPriceModifier in order to keep the share of the prorated transaction-related points for the current line item. It is not used in the context of modifying points for a dedicated line item. 
     * @type {number}
     * @memberof FrequentShopperPointsModifierType
     */
    ItemLink?: number;
}

/**
    * @export
    * @enum {string}
    */
export enum FrequentShopperPointsModifierTypeTypeCodeEnum {
    Award = 'Award'
}



