// tslint:disable
/**
 * Calculation
 * You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { AmountCommonData } from './amount-common-data';
import { PointsAwarded } from './points-awarded';
import { PriceDerivationRuleBase } from './price-derivation-rule-base';

/**
 * Loyalty reward on transaction level for the customercrediting. The crediting of a customer loyalty account with points is the only supported for reward type. 
 * @export
 * @interface LoyaltyRewardBase
 */
export interface LoyaltyRewardBase {
    /**
     * Identifies the promotion that triggered the loyalty reward. Decimal representation of a 64 bit integer value.
     * @type {string}
     * @memberof LoyaltyRewardBase
     */
    PromotionID: string;
    /**
     * The number of points awarded by the line item.
     * @type {Array<PointsAwarded>}
     * @memberof LoyaltyRewardBase
     */
    PointsAwarded?: Array<PointsAwarded>;
    /**
     * The sequence number for the trigger to be assigned to a single LoyaltyReward. It references the ManualTriggerSequenceNumber of PromotionManualTriggerType that triggered this reward. 
     * @type {number}
     * @memberof LoyaltyRewardBase
     */
    ManualTriggerSequenceNumber?: number;
    /**
     * 
     * @type {AmountCommonData}
     * @memberof LoyaltyRewardBase
     */
    PointsAwardedAmount?: AmountCommonData;
    /**
     * 
     * @type {AmountCommonData}
     * @memberof LoyaltyRewardBase
     */
    ComputationBaseAmount?: AmountCommonData;
    /**
     * Determines if this LoyaltyReward was created by an external system. If yes, it must not be changed, but its own modifications with higher sequence may be applied. 
     * @type {boolean}
     * @memberof LoyaltyRewardBase
     */
    ExternalSystemOriginatorFlag?: boolean;
    /**
     * 
     * @type {PriceDerivationRuleBase}
     * @memberof LoyaltyRewardBase
     */
    PriceDerivationRule?: PriceDerivationRuleBase;
    /**
     * This is currently not supported.
     * @type {Array<object>}
     * @memberof LoyaltyRewardBase
     */
    any?: Array<object>;
    /**
     * Type code of the loyalty reward
     * @type {string}
     * @memberof LoyaltyRewardBase
     */
    TypeCode?: LoyaltyRewardBaseTypeCodeEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum LoyaltyRewardBaseTypeCodeEnum {
    Award = 'Award'
}



