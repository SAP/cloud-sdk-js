// tslint:disable
/**
* Calculation
* You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
*
* The version of the OpenAPI document: 1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


import { AmountCommonData } from './amount-common-data';
import { DescriptionCommonData } from './description-common-data';
import { ExternalActionType } from './external-action-type';
import { PriceDerivationRuleEligibility } from './price-derivation-rule-eligibility';

/**
 * Contains information of an applied price derivation rule.
 * @export
 * @interface PriceDerivationRuleBase
 */
export interface PriceDerivationRuleBase {
    /**
     * Identifies the price derivation rule. Decimal representation of a 64 bit integer value
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    PriceDerivationRuleID: string;
    /**
     * Only relevant for of coupon eligibilities. Each coupon that is used results in a separate eligibility element.
     * @type {Array<PriceDerivationRuleEligibility>}
     * @memberof PriceDerivationRuleBase
     */
    Eligibility?: Array<PriceDerivationRuleEligibility>;
    /**
     * This is currently not supported.
     * @type {Array<object>}
     * @memberof PriceDerivationRuleBase
     */
    any?: Array<object>;
    /**
     * Exists for compatibility reasons with earlier versions of the Client API (1.0). As of Client API 2.0, use PromotionDescriptionMultiLanguage instead of PromotionDescription.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    PromotionDescription?: string;
    /**
     * Promotion descriptions in the languages requested by the client via RequestedMultiLanguage in the ARTSHeader. Only provided with Client API version 2.0 or higher.
     * @type {Array<DescriptionCommonData>}
     * @memberof PriceDerivationRuleBase
     */
    PromotionDescriptionMultiLanguage?: Array<DescriptionCommonData>;
    /**
     * This is specified in the promotion master data and controls in which order rules are applied. Line-item-related price derivation rules and transaction-related price derivation rules are treated independently (all line-item-related promotions are applied first). 
     * @type {number}
     * @memberof PriceDerivationRuleBase
     */
    PromotionPriceDerivationRuleSequence?: number;
    /**
     * This is specified in the promotion master data and controls which rule is applied if several rules have the same sequence value. If there are price derivation rules with an identical sequence number and identical highest resolution, the service tries to perform a best-price calculation. It is not guaranteed that this will succeed. 
     * @type {number}
     * @memberof PriceDerivationRuleBase
     */
    PromotionPriceDerivationRuleResolution?: number;
    /**
     * Holds the condition type if this promotion discount should be mapped into an SAP ERP or SAP S/4 HANA condition record.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    PromotionPriceDerivationRuleTypeCode?: string;
    /**
     * Indicates whether this is a line-item-related price derivation rule (PO/PC) or a transaction-related price derivation rule (SU/SP).
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    TransactionControlBreakCode?: PriceDerivationRuleBaseTransactionControlBreakCodeEnum;
    /**
     * Reserved for future use.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    PriceDerivationRuleDescription?: string;
    /**
     * Contains information about the origin of the promotion as specifed in the promotion master data.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    PromotionOriginatorTypeCode?: string;
    /**
     * The total quantity that needs to be purchased in order to trigger the price derivation rule.
     * @type {number}
     * @memberof PriceDerivationRuleBase
     */
    TriggerQuantity?: number;
    /**
     * Determines how the discount impacts the calculation of the transaction. Possible values are: 00 - The discount reduces the transaction total. 01 - The discount does not influence the transaction total or the amount that the customer has to pay. However, the customer gets a gift certificate for the discount amount that he can use to pay for the next purchase. 02 - The discount is used as a tender for the current transaction, for example it reduces the remaining amount that the customer has to pay. 03 - The discount reduces the transaction total but is counterbalanced by some gift certificate sale. 04 - A coupon is given to the customer instead of a discount. Transaction total is not reduced. 
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    DiscountMethodCode?: string;
    /**
     * Determines whether a discount (false) or loyalty points (true) are granted by the price derivation rule
     * @type {boolean}
     * @memberof PriceDerivationRuleBase
     */
    FrequentShopperPointsFlag?: boolean;
    /**
     * Reserved for future use.
     * @type {number}
     * @memberof PriceDerivationRuleBase
     */
    CustomerGroupLoyaltyPointsDefaultQuantity?: number;
    /**
     * Determines if the result of the applied price derivation rule is to be suppressed on displays and accordingly not printed on the receipt. If this element is missing in the request, the default value is set to false and the applied price derivation is printed on the receipt. 
     * @type {boolean}
     * @memberof PriceDerivationRuleBase
     */
    ProhibitPrintFlag?: boolean;
    /**
     * Type code of the tender. This value is needed only for DiscountMethodCode = 02.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    TenderTypeCode?: string;
    /**
     * 
     * @type {AmountCommonData}
     * @memberof PriceDerivationRuleBase
     */
    PointsConversionAmount?: AmountCommonData;
    /**
     * Determines whether applying this price derivation rule influences the calculation base of subsequent price derivation rules (false) or not (true). This is only relevant for line-item-related monetary price derivation rules. 
     * @type {boolean}
     * @memberof PriceDerivationRuleBase
     */
    NoEffectOnSubsequentPriceDerivationRulesFlag?: boolean;
    /**
     * Determines whether applying this price derivation rule influences the calculation base of subsequent transaction-related price derivation rules (false) or not (true). This is only relevant for line-item-related monetary price derivation rules. 
     * @type {boolean}
     * @memberof PriceDerivationRuleBase
     */
    ProhibitTransactionRelatedPriceDerivationRulesFlag?: boolean;
    /**
     * Determines whether this price derivation rule is an exclusive one. This impacts the application of further price derivation rules with a higher sequence.  
     * @type {boolean}
     * @memberof PriceDerivationRuleBase
     */
    ExclusiveFlag?: boolean;
    /**
     * This is currently not supported.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    ConcurrenceControlVector?: string;
    /**
     * Describes how often the current price derivation rule was applied.
     * @type {number}
     * @memberof PriceDerivationRuleBase
     */
    AppliedCount?: number;
    /**
     * Exists for compatibility reasons with earlier versions of the Client API (1.0). As of Client API 2.0, use ReceiptLineMultiLanguage instead of ReceiptLine.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    ReceiptLine?: string;
    /**
     * The texts to be printed on the receipt in the languages requested by the client via RequestedMultiLanguage in the ARTSHeader. Only provided with Client API version 2.0 or higher.
     * @type {Array<DescriptionCommonData>}
     * @memberof PriceDerivationRuleBase
     */
    ReceiptLineMultiLanguage?: Array<DescriptionCommonData>;
    /**
     * Identifies an external promotion that was the origin for the corresponding OPP promotion.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    ExternalPromotionID?: string;
    /**
     * Decimal representation of a 64 bit integer value. Not used.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    ExternalPriceDerivationRuleID?: string;
    /**
     * The coupon number of the printout coupon. Only relevant for DiscountMethodCode = 04.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    CouponPrintoutID?: string;
    /**
     * Describes how the printout of the coupon is to be done. Only relevant for DiscountMethodCode = 04. Possible values are: 00 - A separate receipt is to be printed. 01 - The coupon is to be printed at the end of the receipt of the current transaction. 
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    CouponPrintoutRule?: string;
    /**
     * The (formatted) text to be printed. Only relevant for DiscountMethodCode = 04.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    CouponPrintoutText?: string;
    /**
     * Describes for how many days the coupon will be valid. Only relevant for DiscountMethodCode = 04.
     * @type {number}
     * @memberof PriceDerivationRuleBase
     */
    PrintoutValidityPeriod?: number;
    /**
     * Reserved for future use.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    GiftCertificateExpirationDate?: string;
    /**
     * 
     * @type {ExternalActionType}
     * @memberof PriceDerivationRuleBase
     */
    ExternalAction?: ExternalActionType;
    /**
     * Texts shown to the operator in the languages requested by the client via RequestedMultiLanguage in the ARTSHeader. Only provided with Client API version 2.0 or higher.
     * @type {Array<DescriptionCommonData>}
     * @memberof PriceDerivationRuleBase
     */
    OperatorDisplayText?: Array<DescriptionCommonData>;
    /**
     * Texts shown to the customer in the languages requested by the client via RequestedMultiLanguage in the ARTSHeader. Only provided with Client API version 2.0 or higher.
     * @type {Array<DescriptionCommonData>}
     * @memberof PriceDerivationRuleBase
     */
    CustomerDisplayText?: Array<DescriptionCommonData>;
    /**
     * Can be used to control further processing on client side. Only provided with Client API version 2.0 or higher.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    PromotionType?: string;
    /**
     * The sequence value of the price derivation rule of which the result is taken as the basis for this price derivation rule. Only provided with Client API version 2.0 or higher. The type of this element is a string although its content has a numeric value. It could also contain a negative value. In that case the corresponding sign is reflected as a postfix. For example value  \"-1\" is reflected in this element by type string as follows: \"1-\". 
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    CalculationBaseSequence?: string;
    /**
     * Describes the type of the applied price derivation rule.
     * @type {string}
     * @memberof PriceDerivationRuleBase
     */
    ApplicationType?: PriceDerivationRuleBaseApplicationTypeEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum PriceDerivationRuleBaseTransactionControlBreakCodeEnum {
    PO = 'PO',
    SU = 'SU',
    PC = 'PC',
    SP = 'SP'
}
/**
    * @export
    * @enum {string}
    */
export enum PriceDerivationRuleBaseApplicationTypeEnum {
    FixedPrice = 'FixedPrice',
    FixPriceTotal = 'FixPriceTotal',
    DiscountSingle = 'DiscountSingle',
    DiscountTotal = 'DiscountTotal',
    DiscountPercent = 'DiscountPercent',
    DiscountPercentTotal = 'DiscountPercentTotal',
    SetPriceTotal = 'SetPriceTotal',
    MixMatch = 'MixMatch',
    ExternalAction = 'ExternalAction',
    Manual = 'Manual'
}



