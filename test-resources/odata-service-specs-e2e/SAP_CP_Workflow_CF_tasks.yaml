host: sandbox.api.sap.com
info:
  title: Workflow API for Cloud Foundry
  description: >
    This API in the SAP Cloud SDK uses the SAP Cloud Platform Workflow service
    REST API. With the API, you can, for example, start new workflow instances
    and work with tasks.

    <br/>

    For more information on how to obtain the necessary parameters, please see
    <a
    href="https://help.sap.com/viewer/e157c391253b4ecd93647bf232d18a83/Cloud/en-US/abb1f66b2c3b4983b6b656654cfc3d2b.html">Determine
    Service Configuration Parameters</a> in the documentation. The OAuth client
    you use must have <a
    href="https://help.sap.com/viewer/e157c391253b4ecd93647bf232d18a83/Cloud/en-US/baf2847f6d1c401a83ca3a1427b8ff84.html">extended
    scopes</a>.  

    <br/>Note: The underlying REST APIs are designed for loosely coupled
    clients. This means:  

    <ul><li>If workflow service adds fields to responses, the REST API version
    number does not increase. REST API clients must ignore new fields. These
    fields become available in the Workflow API in the SAP Cloud SDK only in new
    versions of the SDK.</li>  

    <li>The order of fields in responses and of entries in arrays may change.
    This applies unless the API provides an explicit means to specify the
    desired order.</li></ul>
  version: v1
externalDocs:
  description: SAP Cloud Platform Workflow Documentation
  url: 'https://help.sap.com/viewer/p/WORKFLOW_SERVICE'
basePath: /workflow-service/rest
consumes:
  - application/json
produces:
  - application/json
definitions:
  AttachmentsContext:
    type: object
    properties:
      rootFolder:
        type: string
        description: >-
          A folder that shall be used for uploading files at the remote
          repository.
      groups:
        type: object
        description: >-
          A map of groups allowing to semantically separate attachments. The key
          is the group name.
        additionalProperties:
          type: object
          properties:
            folder:
              type: string
              description: >-
                A folder that shall be used for uploading files at the remote
                repository for this group (i.e. relative to the root folder)
            refs:
              type: array
              description: A list of references to files in the remote repository
              items:
                type: object
                description: A reference to a file in the remote repository
                properties:
                  objectId:
                    type: string
                    description: ID of the file in the remote repository
  SendMessagePayload:
    type: object
    properties:
      context:
        type: object
        description: >-
          Specify the data to be written into the response variable defined on
          the intermediate message event.
      definitionId:
        type: string
        description: >-
          Specify the definition ID of the message. This corresponds to the
          "Message Name" field on the intermediate message event. The definition
          ID is at most 128 characters long.
        minLength: 1
        maxLength: 128
      workflowInstanceId:
        type: string
        description: >-
          Specify the workflow instance ID of the workflow instance that should
          receive the message.

          The workflow instance ID is 36 characters long.

          You must specify either workflowInstanceId or the pair of
          workflowDefinitionId and businessKey.
        minLength: 36
        maxLength: 36
      workflowDefinitionId:
        type: string
        description: >-
          Specify the definition ID of the workflow the message belongs to.

          The definition ID is at most 64 characters long.

          You must specify either workflowInstanceId or the pair of
          workflowDefinitionId and businessKey.
        minLength: 1
        maxLength: 64
      businessKey:
        type: string
        description: >-
          Specify the business key of the workflow instance, that should receive
          the message.

          The business key of a workflow instance is limited to 255 characters.

          You must specify either workflowInstanceId or the pair of
          workflowDefinitionId and businessKey.
        maxLength: 255
    required:
      - definitionId
  TaskInstance:
    type: object
    properties:
      activityId:
        type: string
        description: >-
          The definition ID of the user task instance. The ID is at most 255
          characters long.
        maxLength: 255
      claimedAt:
        format: date-time
        type: string
        description: >-
          The time when the user task instance was claimed and its status
          changed to RESERVED.
      completedAt:
        format: date-time
        type: string
        description: The time when the user task instance status changed to COMPLETED.
      createdAt:
        format: date-time
        type: string
        description: The time when the user task instance was created.
      createdBy:
        type: string
        description: >-
          The user who created the user task instance. The user ID is at most
          255 characters long.
        maxLength: 255
      lastChangedAt:
        format: date-time
        type: string
        description: The last time the user task instance was changed.
      description:
        type: string
        description: The description of the user task instance.
      id:
        type: string
        description: >-
          The ID of the user task instance. The ID is at least 36 characters
          long.
        minLength: 36
        maxLength: 255
      priority:
        enum:
          - VERY_HIGH
          - HIGH
          - MEDIUM
          - LOW
        type: string
        description: The priority of the user task instance.
      dueDate:
        format: date-time
        type: string
        description: The time when the user task instance is or was due to be COMPLETED.
      processor:
        type: string
        description: >-
          The user who is processing (has claimed) the user task instance. The
          user ID is at most 255 characters long.
        maxLength: 255
      recipientUsers:
        items:
          type: string
          description: The ID of the user. The user ID is at most 255 characters long.
          maxLength: 255
        minItems: 0
        type: array
        uniqueItems: true
        description: The recipient users of the user task instance.
      recipientGroups:
        items:
          type: string
          description: The ID of the group. The group ID is at most 255 characters long.
          maxLength: 255
        minItems: 0
        type: array
        uniqueItems: true
        description: The recipient groups of the user task instance.
      status:
        enum:
          - READY
          - RESERVED
          - CANCELED
          - COMPLETED
        type: string
        description: The status of the user task instance.
      subject:
        type: string
        description: >-
          The subject of the user task instance. The subject is at most 255
          characters long.
        maxLength: 255
      workflowDefinitionId:
        type: string
        description: >-
          The definition ID of the workflow the user task instance belongs to.
          The ID is at most 64 characters long.
        maxLength: 64
      workflowInstanceId:
        type: string
        description: >-
          The instance ID of the workflow the user task instance belongs to. The
          ID is at least 36 characters long.
        minLength: 36
        maxLength: 255
      attributes:
        description: >-
          Attributes of the user task instance. Present only if the $expand
          parameter in the query has the value "attributes".
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/CustomAttribute'
      definitionId:
        description: >
          The definition ID of the user task.

          It consists of the ID of the task defined in the workflow definition
          (task definition ID) as well as the workflow definition ID delimited
          by an '@' sign.
        type: string
        maxLength: 511
        pattern: ^.*@.*$
      applicationScope:
        type: string
        description: >-
          The scope to which the definition belongs. Either "own", "shared" or a
          named scope.
    required:
      - activityId
      - createdAt
      - id
      - priority
      - status
      - workflowDefinitionId
      - workflowInstanceId
      - applicationScope
  TaskInstanceList:
    items:
      type: object
      properties:
        activityId:
          type: string
          description: >-
            The definition ID of the user task instance. The ID is at most 255
            characters long.
          maxLength: 255
        claimedAt:
          format: date-time
          type: string
          description: >-
            The time when the user task instance was claimed and its status
            changed to RESERVED.
        completedAt:
          format: date-time
          type: string
          description: The time when the user task instance status changed to COMPLETED.
        createdAt:
          format: date-time
          type: string
          description: The time when the user task instance was created.
        createdBy:
          type: string
          description: >-
            The user who created the user task instance. The user ID is at most
            255 characters long.
          maxLength: 255
        lastChangedAt:
          format: date-time
          type: string
          description: The last time the user task instance was changed.
        description:
          type: string
          description: The description of the user task instance.
        id:
          type: string
          description: >-
            The ID of the user task instance. The ID is at least 36 characters
            long.
          minLength: 36
          maxLength: 255
        priority:
          enum:
            - VERY_HIGH
            - HIGH
            - MEDIUM
            - LOW
          type: string
          description: The priority of the user task instance.
        dueDate:
          format: date-time
          type: string
          description: The time when the user task instance is or was due to be COMPLETED.
        processor:
          type: string
          description: >-
            The user who is processing (has claimed) the user task instance. The
            user ID is at most 255 characters long.
          maxLength: 255
        recipientUsers:
          items:
            type: string
            description: The ID of the user. The user ID is at most 255 characters long.
            maxLength: 255
          minItems: 0
          type: array
          uniqueItems: true
          description: The recipient users of the user task instance.
        recipientGroups:
          items:
            type: string
            description: The ID of the group. The group ID is at most 255 characters long.
            maxLength: 255
          minItems: 0
          type: array
          uniqueItems: true
          description: The recipient groups of the user task instance.
        status:
          enum:
            - READY
            - RESERVED
            - CANCELED
            - COMPLETED
          type: string
          description: The status of the user task instance.
        subject:
          type: string
          description: >-
            The subject of the user task instance. The subject is at most 255
            characters long.
          maxLength: 255
        workflowDefinitionId:
          type: string
          description: >-
            The definition ID of the workflow the user task instance belongs to.
            The ID is at most 64 characters long.
          maxLength: 64
        workflowInstanceId:
          type: string
          description: >-
            The instance ID of the workflow the user task instance belongs to.
            The ID is at least 36 characters long.
          minLength: 36
          maxLength: 255
        attributes:
          description: >-
            Attributes of the user task instance. Present only if the $expand
            parameter in the query has the value "attributes".
          type: array
          minItems: 0
          items:
            $ref: '#/definitions/CustomAttribute'
        definitionId:
          description: >
            The definition ID of the user task.

            It consists of the ID of the task defined in the workflow definition
            (task definition ID) as well as the workflow definition ID delimited
            by an '@' sign.
          type: string
          maxLength: 511
          pattern: ^.*@.*$
        applicationScope:
          type: string
          description: >-
            The scope to which the definition belongs. Either "own", "shared" or
            a named scope.
      required:
        - activityId
        - createdAt
        - id
        - priority
        - status
        - workflowDefinitionId
        - workflowInstanceId
        - applicationScope
    minItems: 0
    type: array
  UpdateTaskInstancePayload:
    properties:
      context:
        type: object
        description: >-
          The changes to the context of the workflow instance the user task
          belongs to.
      attachments:
        description: >-
          Information about bound attachments of the workflow instance the user
          task belongs to.
        $ref: '#/definitions/AttachmentsContext'
      status:
        enum:
          - COMPLETED
        type: string
        description: Specify the new status of the task instance.
      subject:
        type: string
        maxLength: 255
        description: |-
          Specify the new subject of the task instance.
          The subject can be at most 255 characters long.
      description:
        type: string
        maxLength: 4000
        description: |-
          Specify the new description of the task instance.
          The description can be at most 4000 characters long.
      recipientUsers:
        type: string
        pattern: '^(.{0,255},){0,99}.{0,255}$'
        description: >-
          Specify the new recipient users of the task instance as a
          comma-separated list.

          Specify at most 100 recipient users.

          The ID of a recipient user can be at most 255 characters long.
      recipientGroups:
        type: string
        pattern: '^(.{0,255},){0,99}.{0,255}$'
        description: >-
          Specify the new recipient groups of the task instance, as a
          comma-separated list. 

          Specify at most 100 recipient groups.

          The ID of a recipient group can be at most 255 characters long.
      processor:
        type: string
        maxLength: 255
        pattern: '^[^,]{0,255}$'
        description: >-
          Specify the new processor of the task instance.

          The ID of the processor can be at most 255 characters long and must
          not contain commas.
      dueDate:
        type: string
        format: date-time
        description: Specify the new due date of the task instance.
      priority:
        enum:
          - VERY_HIGH
          - HIGH
          - MEDIUM
          - LOW
        type: string
        description: Specify the new priority of the task instance.
    type: object
  TaskDefinition:
    type: object
    properties:
      id:
        type: string
        description: >
          The definition ID of the task definition. The ID is at most 511
          characters long. 

          It consists of the ID of the task defined in the workflow definition
          (task definition ID) as well as the workflow definition ID delimited
          by an '@' sign.
        maxLength: 511
      name:
        type: string
        description: >-
          The name of the corresponding task in the workflow definition, in the
          original language. The value is taken from the latest workflow
          definition where the task definition exists.
      createdAt:
        format: date-time
        type: string
        description: The time when the task definition was created.
      attributeDefinitions:
        description: >-
          Attribute definitions of the task definition. Present only if the
          $expand parameter in the query has the value "attributeDefinitions".
        $ref: '#/definitions/TaskDefinitionAttributeList'
    required:
      - id
      - name
      - createdAt
  TaskDefinitionList:
    items:
      type: object
      properties:
        id:
          type: string
          description: >
            The definition ID of the task definition. The ID is at most 511
            characters long. 

            It consists of the ID of the task defined in the workflow definition
            (task definition ID) as well as the workflow definition ID delimited
            by an '@' sign.
          maxLength: 511
        name:
          type: string
          description: >-
            The name of the corresponding task in the workflow definition, in
            the original language. The value is taken from the latest workflow
            definition where the task definition exists.
        createdAt:
          format: date-time
          type: string
          description: The time when the task definition was created.
        attributeDefinitions:
          description: >-
            Attribute definitions of the task definition. Present only if the
            $expand parameter in the query has the value "attributeDefinitions".
          $ref: '#/definitions/TaskDefinitionAttributeList'
      required:
        - id
        - name
        - createdAt
    minItems: 0
    type: array
  FormMetadata:
    type: object
    properties:
      id:
        type: string
        description: >
          The definition ID of the form definition. The ID is at most 255
          characters long. 
        maxLength: 255
      name:
        type: string
        description: 'The name of the form definition, in the original language.'
      version:
        type: integer
        description: The technical version of the form definition version.
      revision:
        type: string
        description: The revision of the form definition version.
      type:
        enum:
          - start
          - task
        type: string
        description: The type of the form definition version.
      createdAt:
        type: string
        format: date-time
        description: The time when the form definition version was deployed.
      createdBy:
        type: string
        description: The ID of the user who deployed the form definition version.
      workflowDefinitions:
        type: array
        description: >-
          A list of workflow definitions in case the form definition version is
          of type 'start'
        items:
          type: object
          description: A workflow definition
          properties:
            Id:
              type: string
              description: ID of the workflow definition
  FormModel:
    type: object
    properties:
      content:
        type: array
        items:
          type: object
  WorkflowDefinition:
    type: object
    properties:
      id:
        type: string
        description: The workflow definition ID. The ID is at most 64 characters long.
        maxLength: 64
      name:
        type: string
        description: The workflow definition name. The name is at most 255 characters long.
        maxLength: 255
      version:
        type: string
        description: The workflow definition version.
      createdAt:
        format: date-time
        type: string
        description: The time when the workflow definition was deployed.
      createdBy:
        type: string
        description: >-
          The user who deployed the workflow definition. The user ID is at most
          255 characters long.

          This property may not be included for workflow definitions that were
          deployed before May 21, 2018.
        maxLength: 255
      applicationScope:
        type: string
        description: >-
          The scope to which the definition belongs. Either "own", "shared" or a
          named scope.
      jobs:
        description: The jobs related to the workflow definition.
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/WorkflowDefinitionJob'
    required:
      - id
      - name
      - version
      - createdAt
      - jobs
      - applicationScope
  WorkflowDefinitionJob:
    type: object
    properties:
      id:
        type: string
        description: The job ID. The ID is at least 36 characters long.
        minLength: 36
        maxLength: 255
      purpose:
        enum:
          - delete
        type: string
        description: The purpose of the job.
  WorkflowModel:
    type: object
    properties:
      contents:
        type: object
  WorkflowDefinitionList:
    type: array
    minItems: 0
    items:
      type: object
      properties:
        id:
          type: string
          description: The workflow definition ID. The ID is at most 64 characters long.
          maxLength: 64
        name:
          type: string
          description: >-
            The workflow definition name. The name is at most 255 characters
            long.
          maxLength: 255
        version:
          type: string
          description: The workflow definition version.
        createdAt:
          format: date-time
          type: string
          description: The time when the workflow definition was deployed.
        createdBy:
          type: string
          description: >-
            The user who deployed the workflow definition. The user ID is at
            most 255 characters long.

            This property may not be included for workflow definitions that were
            deployed before May 21, 2018.
          maxLength: 255
        applicationScope:
          type: string
          description: >-
            The scope to which the definition belongs. Either "own", "shared" or
            a named scope.
        jobs:
          description: The jobs related to the workflow definition.
          type: array
          minItems: 0
          items:
            $ref: '#/definitions/WorkflowDefinitionJob'
      required:
        - id
        - name
        - version
        - createdAt
        - jobs
        - applicationScope
  WorkflowDefinitionVersion:
    type: object
    properties:
      id:
        type: string
        description: The workflow definition ID. The ID is at most 64 characters long.
        maxLength: 64
      name:
        type: string
        description: The workflow definition name. The name is at most 255 characters long.
        maxLength: 255
      version:
        type: string
        description: The workflow definition version.
      createdAt:
        format: date-time
        type: string
        description: The time when the workflow definition was deployed.
      createdBy:
        type: string
        description: >-
          The user who deployed the workflow definition. The user ID is at most
          255 characters long.

          This property may not be included for workflow definitions that were
          deployed before May 21, 2018.
        maxLength: 255
      applicationScope:
        type: string
        description: >-
          The scope to which the definition belongs. Either "own", "shared" or a
          named scope.
    required:
      - id
      - name
      - version
      - createdAt
      - applicationScope
  WorkflowDefinitionVersionList:
    type: array
    minItems: 0
    items:
      type: object
      properties:
        id:
          type: string
          description: The workflow definition ID. The ID is at most 64 characters long.
          maxLength: 64
        name:
          type: string
          description: >-
            The workflow definition name. The name is at most 255 characters
            long.
          maxLength: 255
        version:
          type: string
          description: The workflow definition version.
        createdAt:
          format: date-time
          type: string
          description: The time when the workflow definition was deployed.
        createdBy:
          type: string
          description: >-
            The user who deployed the workflow definition. The user ID is at
            most 255 characters long.

            This property may not be included for workflow definitions that were
            deployed before May 21, 2018.
          maxLength: 255
        applicationScope:
          type: string
          description: >-
            The scope to which the definition belongs. Either "own", "shared" or
            a named scope.
      required:
        - id
        - name
        - version
        - createdAt
        - applicationScope
  SampleContext:
    type: object
    properties:
      id:
        type: string
        description: >-
          The ID of the default start context. The ID is at most 255 characters
          long.
        maxLength: 255
      content:
        type: object
        description: The default start context configured in the start event.
      modelElementId:
        type: string
        description: >-
          The ID of the start event for which the default start context is
          configured. The ID is at most 255 characters long.
        maxLength: 255
  WorkflowInstanceUpdatePayload:
    type: object
    properties:
      status:
        enum:
          - CANCELED
          - RUNNING
          - SUSPENDED
        type: string
        description: The new status of the workflow instance.
  WorkflowInstancesUpdatePayload:
    type: object
    properties:
      id:
        type: string
        description: >-
          The ID of the workflow instance, which should be modified. The ID of a
          workflow instance is 36 characters long.
        minLength: 36
        maxLength: 36
      deleted:
        type: boolean
        description: >-
          If set to true, the workflow instance and related data (for example,
          execution logs) are deleted.
    required:
      - id
  WorkflowInstanceStartPayload:
    type: object
    properties:
      definitionId:
        type: string
        description: >-
          Specify the ID of the workflow definition for which an instance should
          be started. The ID is at most 64 characters long.
        minLength: 1
        maxLength: 64
      context:
        type: object
        description: Specify the initial context of the workflow instance.
      attachments:
        description: Specify information about bound attachments of the workflow instance.
        $ref: '#/definitions/AttachmentsContext'
    required:
      - definitionId
  WorkflowInstance:
    type: object
    properties:
      definitionId:
        type: string
        description: >-
          The ID of the workflow definition for which the instance was started.
          The ID is at most 64 characters long.
        maxLength: 64
      definitionVersion:
        type: string
        description: >-
          The version of the workflow definition for which the instance was
          started.
      id:
        type: string
        description: The workflow instance ID. The ID is at least 36 characters long.
        minLength: 36
        maxLength: 255
      startedAt:
        format: date-time
        type: string
        description: The time when the workflow instance started.
      startedBy:
        type: string
        description: >-
          The user who started the workflow instance. The user ID is at most 255
          characters long.
        maxLength: 255
      completedAt:
        type: string
        format: date-time
        description: The time when the workflow instance status changed to COMPLETED.
      status:
        enum:
          - RUNNING
          - ERRONEOUS
          - SUSPENDED
          - CANCELED
          - COMPLETED
        type: string
        description: The status of the workflow instance.
      businessKey:
        type: string
        description: >-
          The business key of the workflow instance. The business key of a
          workflow instance is limited to 255 characters.
        maxLength: 255
      subject:
        type: string
        description: >-
          The subject of the workflow instance. The subject of a workflow
          instance is limited to 255 characters.
        maxLength: 255
      rootInstanceId:
        type: string
        description: >-
          The workflow root instance ID. The root ID is at least 36 characters
          long.
        minLength: 36
        maxLength: 255
      parentInstanceId:
        type: string
        description: >-
          The workflow parent instance ID. The parent ID can be null or at least
          36 characters long.
        maxLength: 255
      applicationScope:
        type: string
        description: >-
          The scope to which the workflow instance belongs. Either "own",
          "shared", or a named scope.
      attributes:
        description: >-
          Attributes of the workflow instance. Present only if the $expand
          parameter in the query has the value "attributes".
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/CustomAttribute'
  WorkflowInstanceList:
    items:
      type: object
      properties:
        definitionId:
          type: string
          description: >-
            The ID of the workflow definition for which the instance was
            started. The ID is at most 64 characters long.
          maxLength: 64
        definitionVersion:
          type: string
          description: >-
            The version of the workflow definition for which the instance was
            started.
        id:
          type: string
          description: The workflow instance ID. The ID is at least 36 characters long.
          minLength: 36
          maxLength: 255
        startedAt:
          format: date-time
          type: string
          description: The time when the workflow instance started.
        startedBy:
          type: string
          description: >-
            The user who started the workflow instance. The user ID is at most
            255 characters long.
          maxLength: 255
        completedAt:
          type: string
          format: date-time
          description: The time when the workflow instance status changed to COMPLETED.
        status:
          enum:
            - RUNNING
            - ERRONEOUS
            - SUSPENDED
            - CANCELED
            - COMPLETED
          type: string
          description: The status of the workflow instance.
        businessKey:
          type: string
          description: >-
            The business key of the workflow instance. The business key of a
            workflow instance is limited to 255 characters.
          maxLength: 255
        subject:
          type: string
          description: >-
            The subject of the workflow instance. The subject of a workflow
            instance is limited to 255 characters.
          maxLength: 255
        rootInstanceId:
          type: string
          description: >-
            The workflow root instance ID. The root ID is at least 36 characters
            long.
          minLength: 36
          maxLength: 255
        parentInstanceId:
          type: string
          description: >-
            The workflow parent instance ID. The parent ID can be null or at
            least 36 characters long.
          maxLength: 255
        applicationScope:
          type: string
          description: >-
            The scope to which the workflow instance belongs. Either "own",
            "shared", or a named scope.
        attributes:
          description: >-
            Attributes of the workflow instance. Present only if the $expand
            parameter in the query has the value "attributes".
          type: array
          minItems: 0
          items:
            $ref: '#/definitions/CustomAttribute'
    type: array
  ConsumingWorkflowInstance:
    type: object
    properties:
      id:
        type: string
        description: >-
          The ID of the workflow instance, which consumed the message. The ID is
          at least 36 characters long.
        minLength: 36
        maxLength: 255
  WorkflowInstanceExecutionLog:
    type: object
    properties:
      id:
        type: string
        description: The ID of the execution log entry.
      type:
        type: string
        description: The execution log entry type.
        enum:
          - WORKFLOW_STARTED
          - WORKFLOW_COMPLETED
          - WORKFLOW_CANCELED
          - WORKFLOW_CONTINUED
          - WORKFLOW_SUSPENDED
          - WORKFLOW_CONTEXT_OVERWRITTEN_BY_ADMIN
          - WORKFLOW_CONTEXT_PATCHED_BY_ADMIN
          - WORKFLOW_ROLES_PATCHED_BY_ADMIN
          - WORKFLOW_RESUMED
          - USERTASK_CREATED
          - USERTASK_CLAIMED
          - USERTASK_RELEASED
          - USERTASK_COMPLETED
          - USERTASK_FAILED
          - USERTASK_PATCHED_BY_ADMIN
          - USERTASK_CANCELED_BY_BOUNDARY_EVENT
          - SERVICETASK_CREATED
          - SERVICETASK_COMPLETED
          - SERVICETASK_FAILED
          - SCRIPTTASK_CREATED
          - SCRIPTTASK_COMPLETED
          - SCRIPTTASK_FAILED
          - INTERMEDIATE_TIMER_EVENT_REACHED
          - INTERMEDIATE_TIMER_EVENT_TRIGGERED
          - INTERMEDIATE_MESSAGE_EVENT_REACHED
          - INTERMEDIATE_MESSAGE_EVENT_TRIGGERED
          - NONCANCELING_BOUNDARY_TIMER_EVENT_TRIGGERED
          - CANCELING_BOUNDARY_TIMER_EVENT_TRIGGERED
          - MAILTASK_CREATED
          - MAILTASK_COMPLETED
          - MAILTASK_FAILED
          - EXCLUSIVE_GATEWAY_REACHED
          - EXCLUSIVE_GATEWAY_FAILED
          - PARALLEL_GATEWAY_REACHED
          - PARALLEL_GATEWAY_FAILED
      timestamp:
        type: string
        format: date-time
        description: The time the execution log entry was created.
      referenceInstanceId:
        type: string
        description: >
          An ID that groups events together by their activity and their token of
          execution in the workflow.

          For example, all events relating to the same script task (started,
          failed, completed) would have the same referenceInstanceId.
      activityId:
        type: string
        description: The ID of the model element. The ID is at most 255 characters long.
        maxLength: 255
      parentInstanceId:
        type: string
        description: >-
          The ID of the parent workflow instance. The ID is at most 64
          characters long.
        maxLength: 64
      rootInstanceId:
        type: string
        description: >-
          The ID of the root workflow instance. The ID is at most 64 characters
          long.
        maxLength: 64
      subject:
        type: string
        description: >-
          The name of the model element or the subject of the user task. The
          name/subject is at most 255 characters long.
        maxLength: 255
      userId:
        type: string
        description: >-
          The user who executed the action. The user ID is at most 255
          characters long.
        maxLength: 255
      error:
        type: object
        properties:
          message:
            type: string
            description: The error message.
          errorCode:
            type: string
            description: The error category.
          logId:
            type: string
            description: The log ID referring to the error.
      recipientUsers:
        type: array
        minItems: 0
        maxItems: 100
        items:
          type: string
          description: The ID of the user. The user ID is at most 255 characters long.
          maxLength: 255
        uniqueItems: true
        description: The recipient users of a user task.
      recipientGroups:
        type: array
        minItems: 0
        maxItems: 100
        items:
          type: string
          description: The ID of the group. The group ID is at most 255 characters long.
          maxLength: 255
        uniqueItems: true
        description: The recipient groups of a user task.
      initiatorId:
        type: string
        description: >-
          The user who started the user task. The user ID is at most 255
          characters long.
        maxLength: 255
      restEndpoint:
        type: object
        description: Information about the service task.
        properties:
          httpMethod:
            type: string
            description: The HTTP method.
          destinationName:
            type: string
            description: The name of the destination.
          destinationUrl:
            type: string
            description: The URL configured in the destination.
          relativePath:
            type: string
            description: The relative URL configured in the service task.
        required:
          - destinationName
      retriesRemaining:
        type: integer
        minimum: 0
        description: >-
          The remaining number of retries. If no retries are left the workflow
          instance is ERRONEOUS.
      taskId:
        type: string
        description: The ID of the user task. The ID is at least 36 characters long.
        minLength: 36
        maxLength: 255
      changes:
        type: object
        description: The changes made to the context or user task.
        properties:
          create:
            type: array
            minItems: 0
            items:
              type: string
            uniqueItems: true
            description: 'The variables, which were created in the context.'
          update:
            type: array
            minItems: 0
            items:
              type: string
            uniqueItems: true
            description: >-
              The variables, which were updated in the context or the user task
              attributes, which were updated.
          delete:
            type: array
            minItems: 0
            items:
              type: string
            uniqueItems: true
            description: 'The variables, which were deleted from the context.'
      recipients:
        type: object
        description: The recipients of a mail task.
        properties:
          to:
            type: array
            minItems: 0
            items:
              type: string
            description: The 'to' recipients.
          cc:
            type: array
            minItems: 0
            items:
              type: string
            description: The 'cc' recipients.
          bcc:
            type: array
            minItems: 0
            items:
              type: string
            description: The 'bcc' recipients.
          ignored:
            type: array
            default: []
            minItems: 0
            items:
              type: string
            description: >-
              The ignored recipients from "to", "cc" and "bcc" fields if they
              exist.
      sendDisabled:
        type: boolean
        default: false
        description: Indicates whether the sending of emails is disabled.
      propagatedPrincipal:
        type: string
        description: >-
          The name of the principal on whose behalf the service task has been
          executed.
      activityName:
        type: string
        description: >-
          The name of the affected model element. The activity name is at most
          255 characters long.
        maxLength: 255
      cause:
        type: string
        description: >-
          The activityId of the boundary timer event causing the cancellation of
          the user task. It is at most 255 characters long.
        maxLength: 255
      boundaryEventName:
        type: string
        description: >-
          The name of the boundary timer event. The name is at most 64
          characters long.
        maxLength: 64
    required:
      - id
      - type
      - timestamp
      - referenceInstanceId
  WorkflowInstanceExecutionLogList:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
          description: The ID of the execution log entry.
        type:
          type: string
          description: The execution log entry type.
          enum:
            - WORKFLOW_STARTED
            - WORKFLOW_COMPLETED
            - WORKFLOW_CANCELED
            - WORKFLOW_CONTINUED
            - WORKFLOW_SUSPENDED
            - WORKFLOW_CONTEXT_OVERWRITTEN_BY_ADMIN
            - WORKFLOW_CONTEXT_PATCHED_BY_ADMIN
            - WORKFLOW_ROLES_PATCHED_BY_ADMIN
            - WORKFLOW_RESUMED
            - USERTASK_CREATED
            - USERTASK_CLAIMED
            - USERTASK_RELEASED
            - USERTASK_COMPLETED
            - USERTASK_FAILED
            - USERTASK_PATCHED_BY_ADMIN
            - USERTASK_CANCELED_BY_BOUNDARY_EVENT
            - SERVICETASK_CREATED
            - SERVICETASK_COMPLETED
            - SERVICETASK_FAILED
            - SCRIPTTASK_CREATED
            - SCRIPTTASK_COMPLETED
            - SCRIPTTASK_FAILED
            - INTERMEDIATE_TIMER_EVENT_REACHED
            - INTERMEDIATE_TIMER_EVENT_TRIGGERED
            - INTERMEDIATE_MESSAGE_EVENT_REACHED
            - INTERMEDIATE_MESSAGE_EVENT_TRIGGERED
            - NONCANCELING_BOUNDARY_TIMER_EVENT_TRIGGERED
            - CANCELING_BOUNDARY_TIMER_EVENT_TRIGGERED
            - MAILTASK_CREATED
            - MAILTASK_COMPLETED
            - MAILTASK_FAILED
            - EXCLUSIVE_GATEWAY_REACHED
            - EXCLUSIVE_GATEWAY_FAILED
            - PARALLEL_GATEWAY_REACHED
            - PARALLEL_GATEWAY_FAILED
        timestamp:
          type: string
          format: date-time
          description: The time the execution log entry was created.
        referenceInstanceId:
          type: string
          description: >
            An ID that groups events together by their activity and their token
            of execution in the workflow.

            For example, all events relating to the same script task (started,
            failed, completed) would have the same referenceInstanceId.
        activityId:
          type: string
          description: The ID of the model element. The ID is at most 255 characters long.
          maxLength: 255
        subject:
          type: string
          description: >-
            The name of the model element or the subject of the user task. The
            name/subject is at most 255 characters long.
          maxLength: 255
        userId:
          type: string
          description: >-
            The user who executed the action. The user ID is at most 255
            characters long.
          maxLength: 255
        error:
          type: object
          properties:
            message:
              type: string
              description: The error message.
            errorCode:
              type: string
              description: The error category.
            logId:
              type: string
              description: The log ID referring to the error.
        recipientUsers:
          type: array
          minItems: 0
          maxItems: 100
          items:
            type: string
            description: The ID of the user. The user ID is at most 255 characters long.
            maxLength: 255
          uniqueItems: true
          description: The recipient users of a user task.
        recipientGroups:
          type: array
          minItems: 0
          maxItems: 100
          items:
            type: string
            description: The ID of the group. The group ID is at most 255 characters long.
            maxLength: 255
          uniqueItems: true
          description: The recipient groups of a user task.
        initiatorId:
          type: string
          description: >-
            The user who started the user task. The user ID is at most 255
            characters long.
          maxLength: 255
        restEndpoint:
          type: object
          description: Information about the service task.
          properties:
            httpMethod:
              type: string
              description: The HTTP method.
            destinationName:
              type: string
              description: The name of the destination.
            destinationUrl:
              type: string
              description: The URL configured in the destination.
            relativePath:
              type: string
              description: The relative URL configured in the service task.
          required:
            - destinationName
        retriesRemaining:
          type: integer
          minimum: 0
          description: >-
            The remaining number of retries. If no retries are left the workflow
            instance is ERRONEOUS.
        taskId:
          type: string
          description: The ID of the user task. The ID is at least 36 characters long.
          minLength: 36
          maxLength: 255
        changes:
          type: object
          description: The changes made to the context or user task.
          properties:
            create:
              type: array
              minItems: 0
              items:
                type: string
              uniqueItems: true
              description: 'The variables, which were created in the context.'
            update:
              type: array
              minItems: 0
              items:
                type: string
              uniqueItems: true
              description: >-
                The variables, which were updated in the context or the user
                task attributes, which were updated.
            delete:
              type: array
              minItems: 0
              items:
                type: string
              uniqueItems: true
              description: 'The variables, which were deleted from the context.'
        recipients:
          type: object
          description: The recipients of a mail task.
          properties:
            to:
              type: array
              minItems: 0
              items:
                type: string
              description: The 'to' recipients.
            cc:
              type: array
              minItems: 0
              items:
                type: string
              description: The 'cc' recipients.
            bcc:
              type: array
              minItems: 0
              items:
                type: string
              description: The 'bcc' recipients.
            ignored:
              type: array
              default: []
              minItems: 0
              items:
                type: string
              description: >-
                The ignored recipients from "to", "cc" and "bcc" fields if they
                exist.
        sendDisabled:
          type: boolean
          default: false
          description: Indicates whether the sending of emails is disabled.
        propagatedPrincipal:
          type: string
          description: >-
            The name of the principal on whose behalf the service task has been
            executed.
        activityName:
          type: string
          description: >-
            The name of the affected model element. The activity name is at most
            255 characters long.
          maxLength: 255
        cause:
          type: string
          description: >-
            The activityId of the boundary timer event causing the cancellation
            of the user task. It is at most 255 characters long.
          maxLength: 255
        boundaryEventName:
          type: string
          description: >-
            The name of the boundary timer event. The name is at most 64
            characters long.
          maxLength: 64
      required:
        - id
        - type
        - timestamp
        - referenceInstanceId
  WorkflowInstanceErrorMessage:
    type: object
    properties:
      activityId:
        type: string
        description: >-
          The ID of the model element where the error occurred. The ID is at
          most 255 characters long.
        maxLength: 255
      activityName:
        type: string
        description: >-
          The name of the model element where the error occurred. The name is at
          most 255 characters long.
        maxLength: 255
      errorCode:
        type: string
        description: The error category.
      logId:
        type: string
        description: The log ID referring to the error.
      message:
        type: string
        description: The error message.
      timestamp:
        format: date-time
        type: string
        description: The time when the error occurred.
  WorkflowInstanceErrorMessageList:
    items:
      properties:
        activityId:
          type: string
          description: >-
            The ID of the model element where the error occurred. The ID is at
            most 255 characters long.
          maxLength: 255
        activityName:
          type: string
          description: >-
            The name of the model element where the error occurred. The name is
            at most 255 characters long.
          maxLength: 255
        errorCode:
          type: string
          description: The error category.
        logId:
          type: string
          description: The log ID referring to the error.
        message:
          type: string
          description: The error message.
        timestamp:
          format: date-time
          type: string
          description: The time when the error occurred.
      type: object
    type: array
  WorkflowInstanceRoles:
    type: object
    properties:
      viewerUsers:
        description: >-
          The users that are assigned to the viewer role on this workflow
          instance.
        type: array
        minItems: 0
        maxItems: 100
        uniqueItems: true
        items:
          type: string
          description: The ID of the user. The user ID is at most 255 characters long.
          maxLength: 255
      viewerGroups:
        description: >-
          The groups that are assigned to the viewer role on this workflow
          instance.
        type: array
        minItems: 0
        maxItems: 100
        uniqueItems: true
        items:
          type: string
          description: The ID of the group. The group ID is at most 255 characters long.
          maxLength: 255
      adminUsers:
        description: >-
          The users that are assigned to the admin role on this workflow
          instance.
        type: array
        minItems: 0
        maxItems: 100
        uniqueItems: true
        items:
          type: string
          description: The ID of the user. The user ID is at most 255 characters long.
          maxLength: 255
      adminGroups:
        description: >-
          The groups that are assigned to the admin role on this workflow
          instance.
        type: array
        minItems: 0
        maxItems: 100
        uniqueItems: true
        items:
          type: string
          description: The ID of the group. The group ID is at most 255 characters long.
          maxLength: 255
      contextViewerUsers:
        description: >-
          The users that are assigned to the context viewer role on this
          workflow instance.
        type: array
        minItems: 0
        maxItems: 100
        uniqueItems: true
        items:
          type: string
          description: The ID of the user. The user ID is at most 255 characters long.
          maxLength: 255
      contextViewerGroups:
        description: >-
          The groups that are assigned to the context viewer role on this
          workflow instance.
        type: array
        minItems: 0
        maxItems: 100
        uniqueItems: true
        items:
          type: string
          description: The ID of the group. The group ID is at most 255 characters long.
          maxLength: 255
      contextAdminUsers:
        description: >-
          The users that are assigned to the context admin role on this workflow
          instance.
        type: array
        minItems: 0
        maxItems: 100
        uniqueItems: true
        items:
          type: string
          description: The ID of the user. The user ID is at most 255 characters long.
          maxLength: 255
      contextAdminGroups:
        description: >-
          The groups that are assigned to the context admin role on this
          workflow instance.
        type: array
        minItems: 0
        maxItems: 100
        uniqueItems: true
        items:
          type: string
          description: The ID of the group. The group ID is at most 255 characters long.
          maxLength: 255
    required:
      - viewerUsers
      - viewerGroups
      - adminUsers
      - adminGroups
      - contextViewerUsers
      - contextViewerGroups
      - contextAdminUsers
      - contextAdminGroups
  WorkflowInstanceRolesUpdatePayload:
    type: object
    properties:
      viewerUsers:
        type: string
        pattern: '^(.{0,255},){0,99}.{0,255}$'
        description: >-
          The users that should be assigned to the viewer role, as a
          comma-separated list.

          Specify at most 100 user IDs.

          The ID of a user can be at most 255 characters long.
      viewerGroups:
        type: string
        pattern: '^(.{0,255},){0,99}.{0,255}$'
        description: >-
          The groups that should be assigned to the viewer role, as a
          comma-separated list.

          Specify at most 100 group IDs.

          The ID of a group can be at most 255 characters long.
      adminUsers:
        type: string
        pattern: '^(.{0,255},){0,99}.{0,255}$'
        description: >-
          The users that should be assigned to the admin role, as a
          comma-separated list.

          Specify at most 100 user IDs.

          The ID of a user can be at most 255 characters long.
      adminGroups:
        type: string
        pattern: '^(.{0,255},){0,99}.{0,255}$'
        description: >-
          The groups that should be assigned to the admin role, as a
          comma-separated list.

          Specify at most 100 group IDs.

          The ID of a group can be at most 255 characters long.
      contextViewerUsers:
        type: string
        pattern: '^(.{0,255},){0,99}.{0,255}$'
        description: >-
          The users that should be assigned to the context viewer role, as a
          comma-separated list.

          Specify at most 100 user IDs.

          The ID of a user can be at most 255 characters long.
      contextViewerGroups:
        type: string
        pattern: '^(.{0,255},){0,99}.{0,255}$'
        description: >-
          The groups that should be assigned to the context viewer role, as a
          comma-separated list.

          Specify at most 100 group IDs.

          The ID of a group can be at most 255 characters long.
      contextAdminUsers:
        type: string
        pattern: '^(.{0,255},){0,99}.{0,255}$'
        description: >-
          The users that should be assigned to the context admin role, as a
          comma-separated list.

          Specify at most 100 user IDs.

          The ID of a user can be at most 255 characters long.
      contextAdminGroups:
        type: string
        pattern: '^(.{0,255},){0,99}.{0,255}$'
        description: >-
          The groups that should be assigned to the context admin role, as a
          comma-separated list.

          Specify at most 100 group IDs.

          The ID of a group can be at most 255 characters long.
  TechnicalError:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: string
            description: The error category.
          message:
            type: string
            description: The error message.
          logId:
            type: string
            description: The log ID referring to the error.
          details:
            items:
              type: object
              properties:
                severity:
                  type: string
                  description: The severity of the error.
                message:
                  type: string
                  description: The detailed error message.
            type: array
        required:
          - message
  ConflictError:
    type: object
    properties:
      error:
        type: object
        properties:
          message:
            type: string
            description: The error message.
          logId:
            type: string
            description: The log ID referring to the error.
        required:
          - message
  Job:
    type: object
    properties:
      status:
        enum:
          - RUNNING
          - ERRONEOUS
        type: string
        description: The status of the job.
      details:
        type: object
        description: The details of the job.
      error:
        type: object
        properties:
          code:
            type: string
            description: The error category.
          message:
            type: string
            description: The error message.
          logId:
            type: string
            description: The log ID referring to the error.
  UnauthorizedError:
    type: object
    properties:
      error:
        type: string
        description: The error name.
      error_description:
        type: string
        description: The error description.
    required:
      - error
      - error_description
  CustomAttribute:
    type: object
    properties:
      id:
        type: string
        description: The ID of the attribute.
        maxLength: 255
      label:
        type: string
        description: >-
          The label which represents how the attribute should be presented to
          end users.
        maxLength: 255
      value:
        type: string
        description: The value of the attribute.
        maxLength: 4000
      type:
        enum:
          - string
        type: string
        description: The type of the attribute.
  CustomAttributeList:
    type: array
    minItems: 0
    maxItems: 15
    items:
      type: object
      properties:
        id:
          type: string
          description: The ID of the attribute.
          maxLength: 255
        label:
          type: string
          description: >-
            The label which represents how the attribute should be presented to
            end users.
          maxLength: 255
        value:
          type: string
          description: The value of the attribute.
          maxLength: 4000
        type:
          enum:
            - string
          type: string
          description: The type of the attribute.
  TaskDefinitionAttribute:
    type: object
    properties:
      id:
        type: string
        description: The ID of the attribute.
        maxLength: 255
      label:
        type: string
        description: >-
          The label, which represents how the attribute is presented to end
          users.
        maxLength: 255
      type:
        enum:
          - string
        type: string
        description: The type of the attribute.
  TaskDefinitionAttributeList:
    type: array
    minItems: 0
    maxItems: 15
    items:
      type: object
      properties:
        id:
          type: string
          description: The ID of the attribute.
          maxLength: 255
        label:
          type: string
          description: >-
            The label, which represents how the attribute is presented to end
            users.
          maxLength: 255
        type:
          enum:
            - string
          type: string
          description: The type of the attribute.
responses:
  '400':
    description: Incorrect format or structure of the provided request body.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.content.format.invalid
          message: >-
            Unable to parse the request content because it has an unexpected
            format or structure. The content has to be JSON and follow the
            documented data structure.
          logId: e329b2a4-cac7-44d7-b5c5-0494e6fbad5a
  '401':
    description: >-
      Unauthorized. You have not provided valid authentication credentials to
      access the resource.
    schema:
      $ref: '#/definitions/UnauthorizedError'
    examples:
      application/json:
        error: unauthorized
        error_description: Full authentication is required to access this resource.
  '403':
    description: >-
      Access forbidden. You have not the required permissions to access the
      resource.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          message: User does not have sufficient privileges.
  '429':
    description: |
      You have reached the usage limits that are configured for your tenant.
      You are performing too many requests or consume too many resources.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rate.limit.exceeded
          message: Your tenant is performing too many requests.
  '500':
    description: >-
      Internal server error. The operation you requested led to an error during
      execution.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.internal.server.error
          message: Internal server error
          logId: f29a5719-3342-4a4a-8a3d-5ddd5253159e
  200DeployedWorkflowModel:
    description: The deployed workflow model.
    schema:
      $ref: '#/definitions/WorkflowModel'
    examples:
      application/json:
        contents:
          a46b9a0c-e2c4-46f1-ab45-a4f1c64242e1:
            classDefinition: com.sap.bpm.wfs.Model
            id: ExternalServiceFlow
            name: ExternalServiceFlow
            subject: 'External Service Flow ''${id}'''
            businessKey: '${id}'
            lastIds: 835bb943-b74b-4a45-9a26-2a5ab2471fae
            events:
              dac01f83-3cd2-421a-b099-695372490c22:
                name: StartEvent1
              17af566f-cce3-4375-9e92-85fe456b9b1a:
                name: EndEvent1
            activities:
              65021cef-c40b-4481-b6a5-d28f3d425b49:
                name: Call external Service
            sequenceFlows:
              98d81e72-af85-46be-86f2-b86a290db42d:
                name: SequenceFlow14
              0da7f0a6-fa3e-4c2a-a3a9-92f738e9cef9:
                name: SequenceFlow15
            diagrams:
              5136eee3-88cd-40b3-a909-a212b7be5c1c: {}
          835bb943-b74b-4a45-9a26-2a5ab2471fae:
            classDefinition: com.sap.bpm.wfs.LastIDs
            sequenceflow: 15
            startevent: 1
            endevent: 1
            servicetask: 1
            scripttask: 2
            parallelgateway: 2
            exclusivegateway: 2
          5136eee3-88cd-40b3-a909-a212b7be5c1c:
            classDefinition: com.sap.bpm.wfs.ui.Diagram
            symbols:
              e5af1ccc-d6ac-4b93-bd54-9ecbc22e1b0c: {}
              bba91ec8-a65b-4220-8b9a-38346de34c1e: {}
              fd3dd963-fa3f-4346-b75f-aaffcf172b6a: {}
              9e681614-dc17-425d-ab02-037029c789e8: {}
              9d851743-62a1-47cc-8786-522310d3a912: {}
          dac01f83-3cd2-421a-b099-695372490c22:
            classDefinition: com.sap.bpm.wfs.StartEvent
            id: startevent1
            name: StartEvent1
          e5af1ccc-d6ac-4b93-bd54-9ecbc22e1b0c:
            classDefinition: com.sap.bpm.wfs.ui.StartEventSymbol
            x: 134
            'y': 221
            width: 32
            height: 32
            object: dac01f83-3cd2-421a-b099-695372490c22
          17af566f-cce3-4375-9e92-85fe456b9b1a:
            classDefinition: com.sap.bpm.wfs.EndEvent
            id: endevent1
            name: EndEvent1
          bba91ec8-a65b-4220-8b9a-38346de34c1e:
            classDefinition: com.sap.bpm.wfs.ui.EndEventSymbol
            x: 548
            'y': 221
            width: 32
            height: 32
            object: 17af566f-cce3-4375-9e92-85fe456b9b1a
          65021cef-c40b-4481-b6a5-d28f3d425b49:
            classDefinition: com.sap.bpm.wfs.ServiceTask
            destination: destination
            path: '/path/${id}'
            httpMethod: GET
            id: servicetask1
            name: Call external Service
          fd3dd963-fa3f-4346-b75f-aaffcf172b6a:
            classDefinition: com.sap.bpm.wfs.ui.ServiceTaskSymbol
            x: 216
            'y': 209.5
            width: 100
            height: 55
            object: 65021cef-c40b-4481-b6a5-d28f3d425b49
          98d81e72-af85-46be-86f2-b86a290db42d:
            classDefinition: com.sap.bpm.wfs.SequenceFlow
            id: sequenceflow14
            name: SequenceFlow14
            sourceRef: dac01f83-3cd2-421a-b099-695372490c22
            targetRef: 65021cef-c40b-4481-b6a5-d28f3d425b49
          9e681614-dc17-425d-ab02-037029c789e8:
            classDefinition: com.sap.bpm.wfs.ui.SequenceFlowSymbol
            points: '150,237 266,237'
            sourceSymbol: e5af1ccc-d6ac-4b93-bd54-9ecbc22e1b0c
            targetSymbol: fd3dd963-fa3f-4346-b75f-aaffcf172b6a
            object: 98d81e72-af85-46be-86f2-b86a290db42d
          0da7f0a6-fa3e-4c2a-a3a9-92f738e9cef9:
            classDefinition: com.sap.bpm.wfs.SequenceFlow
            id: sequenceflow15
            name: SequenceFlow15
            sourceRef: 65021cef-c40b-4481-b6a5-d28f3d425b49
            targetRef: 17af566f-cce3-4375-9e92-85fe456b9b1a
          9d851743-62a1-47cc-8786-522310d3a912:
            classDefinition: com.sap.bpm.wfs.ui.SequenceFlowSymbol
            points: '266,237 548,237'
            sourceSymbol: fd3dd963-fa3f-4346-b75f-aaffcf172b6a
            targetSymbol: bba91ec8-a65b-4220-8b9a-38346de34c1e
            object: 0da7f0a6-fa3e-4c2a-a3a9-92f738e9cef9
  200DeployedFormMetadata:
    description: Returns the requested form metadata of the given task instance
    schema:
      $ref: '#/definitions/FormMetadata'
    examples:
      application/json:
        id: com.sap.bpm.demo.approvalform
        name: ApprovalForm
        version: '2'
        revision: Draft
        type: task
        createdAt: 2018-06-01T07:37:20.168Z
        createdBy: UserId
  200DeployedFormModel:
    description: The deployed form definition model.
    schema:
      $ref: '#/definitions/FormModel'
    examples:
      application/json:
        id: com.sap.bpm.demo.approvalform
        name: ApprovalForm
        revision: '1.0'
        type: task
        readOnly: false
        content:
          - id: title
            type: string
            label: Title
            readOnly: false
            value: '${context.product}'
            constraints:
              - required: false
          - id: price
            type: string
            label: Price
            readOnly: false
            value: '${context.price}'
            constraints:
              - required: false
        decisions:
          - id: approve
            text: Approve
            decisionType: positive
          - id: reject
            text: Reject
            decisionType: negative
  202PurgeAccepted:
    description: >-
      The request is successful and the purge operation will be performed
      asynchronously. The response will include the header 'Location' that
      points to a dedicated resource. You can use this resource to track the
      status of the purge operation.
    headers:
      Location:
        type: string
        description: >-
          Relative URL that points to a job resource. Use this resource to track
          the status of the purge operation.
  202WorkflowDefinitionUndeploymentAccepted:
    description: >-
      The undeployment of the workflow definition has been accepted, but will be
      executed asynchronously. The response will include the header 'Location'
      that points to a dedicated resource. You can use this resource to track
      the status of the undeployment.
    headers:
      Location:
        type: string
        description: >-
          Relative URL that points to a job resource. Use this resource to track
          the status of the undeployment.
  202WorkflowInstancePatchAccepted:
    description: >-
      The request was successful and corresponding operations with process
      instances will be performed asynchronously. The response will include the
      header 'Location' that points to a dedicated resource. Using this resource
      you can track the status of the operation.
    headers:
      Location:
        type: string
        description: >-
          Relative URL that points to a job resource. Using this resource you
          can track the status of the operation.
  204ContextUpdate:
    description: The context has been updated.
  204AttachmentsUpdate:
    description: The attachments information has been updated.
  204FormDefinitionUndeploymentNoContent:
    description: The request was successful and the form definition was deleted.
  303PurgeAlreadyRunning:
    description: >-
      A purge operation is already running. The response will include the header
      'Location' that points to a job resource which you can use to track the
      status of the purge operation. Depending on your web client you may be
      automatically redirected to this resource and receive the status of the
      purge operation as the result of your request.
    headers:
      Location:
        type: string
        description: >-
          Relative URL that points to a job resource. Using this resource you
          can track the status of the purge operation.
  303WorkflowDefinitionUndeploymentAlreadyRunning:
    description: >-
      Another undeployment of the workflow definition is already running. The
      response will include the header 'Location' that points to  a job resource
      which you can use to track the status of the undeployment. Depending on
      your web client you may be automatically redirected to this resource and
      receive the status of the undeployment as the result of your request.
    headers:
      Location:
        type: string
        description: >-
          Relative URL that points to a job resource. Using this resource you
          can track the status of the undeployment.
  412WorkflowInstanceStillRunning:
    description: >-
      At least one version of the workflow definition has at least one RUNNING
      instance.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.instances.running
          message: >-
            Cannot undeploy workflow definition because it still has RUNNING
            instances.
          logId: c7c7235e-4528-469f-a2de-c9a1bcaacdd3
  404WorkflowInstanceNotFound:
    description: >-
      URL not found. Check whether the URL is correct and whether you refer to
      an existing workflow instance.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.instance.not.found
          message: Workflow instance not found
          logId: dc68239e-3ad4-442a-8343-cc197f69d05f
  400ExpressionsForFinalizedInstance:
    description: >-
      The workflow instance that you specified is already in status COMPLETED or
      CANCELED and you attempted to use expressions in your operation.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.instance.finalized.expressions.not.allowed
          message: >-
            Could not update the workflow instance because using expressions is
            not allowed when an instance is in a final status (COMPLETED or
            CANCELED).
          logId: f56a2320-34d1-443f-ba43-d3a97f89d914
  404JobNotFound:
    description: >-
      Job not found. You may have provided an incorrect job ID or the job may
      have already completed.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.job.not.found
          message: Job not found
          logId: dc68239e-3ad4-442a-8343-cc197f69d05f
  422MessageNotConsumed:
    description: >-
      The message was not consumed by the intermediate message event. Please see
      the messages API to verify that your message meets the requirements for
      successful consumption.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.message.no.match
          message: No matching workflow instance found for message
          logId: dc68239e-3ad4-442a-8343-cc197f69d05f
  404WorkflowDefinitionNotFound:
    description: >-
      Workflow definition not found. Either the payload does not contain a
      definitionId property or the specified ID is incorrect.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.definition.not.found
          message: Workflow definition not found
          logId: 1c4daaf5-eb3f-4ff5-8b13-aa32a47bb07d
  404FormDefinitionNotFound:
    description: >-
      Form definition not found. Either the payload did not contain a
      definitionId property or the specified ID was incorrect.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.formruntime.definition.not.found
          message: Form definition not found
          logId: 1c4daaf5-eb3f-4ff5-8b13-aa32a47bb07d
  404WorkflowDefinitionOrDefinitionVersionNotFound:
    description: >-
      Either the workflow definition or the specified version within that
      definition was not found.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.definition.version.not.found
          message: Version of the specified workflow definition not found
          logId: 2a4dfef3-eb4f-4c50-8b29-fe32a31bb042
  404WorkflowDefinitionOrDefaultSampleContextNotFound:
    description: >-
      Either the specified workflow definition or the default sample context
      within the definition was not found.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.sample.context.not.found
          message: Sample context for workflow definition not found
          logId: 1c4daaf5-eb3f-4ff5-8b13-aa32a47bb07d
  404WorkflowDefinitionOrDefinitionVersionOrDefaultSampleContextNotFound:
    description: >-
      Either the specified workflow definition, the specified version within
      that definition

      or the default sample context within that definition version was not
      found.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.sample.context.not.found
          message: Sample context for workflow definition not found
          logId: 2f5dacf3-eb3f-4ff5-8b13-aa32a47ba482
  404WorkflowDefinitionOrModelNotFound:
    description: >-
      Either the specified workflow definition or the JSON model for that
      definition was not found.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.json.model.not.found
          message: Workflow definition JSON model not found
          logId: 99edaaf5-ea51-4ff5-8b24-aa32a47bb684
  404WorkflowDefinitionOrDefinitionVersionOrModelNotFound:
    description: >-
      Either the specified workflow definition, the specified version within
      that definition

      or the JSON model for that definition version was not found.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.json.model.not.found
          message: Workflow definition JSON model not found
          logId: 381a4f5-eb3f-4c3a-89b0-ca32a47bb517
  404FormDefinitionOrDefinitionVersionOrModelNotFound:
    description: >-
      Either the specified form definition, the specified version within that
      definition,

      or the JSON model for that definition version was not found.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.formruntime.definition.not.found
          message: Form definition not found
          logId: 381a4f5-eb3f-4c3a-89b0-ca32a47bb517
  404TaskInstanceNotFound:
    description: >-
      URL not found. Check whether the URL is correct and whether you refer to
      an existing task instance.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.task.not.found
          message: Task not found
          logId: d9abb62e-837b-465b-a77b-4821e21fc21d
  404TaskDefinitionNotFound:
    description: >-
      URL not found. Check whether the URL is correct and whether you refer to
      an existing task definition.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.task.definition.not.found
          message: Task definition not found
          logId: d9abb62e-837b-465b-a77b-4821e21fc21d
  404TaskFormNotAssigned:
    description: >-
      URL not found. Check whether you refer to an existing task instance and
      whether a task form is assigned.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.task.form.not.assigned
          message: No task form assigned
          logId: d2716903-4890-4ad2-b7bf-0822c18ef231
  422InvalidContext:
    description: The workflow context in the request body contains invalid keys or values.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.instance.context.invalid
          message: Workflow context could not be set because it contained errors.
          logId: 89462226-6b9e-4cd3-9bea-533cc267e2a4
  422InvalidStatus:
    description: The status provided in the request body was invalid.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.instance.status.invalid
          message: Invalid status requested for workflow instance.
          logId: 0e250611-dcd3-49f9-a031-c69feb90971a
  422InvalidTaskPatch:
    description: >
      The task cannot be updated for one of the following reasons:

      The values submitted for updating the property cannot be resolved or
      became

      invalid after resolution. The context provided in the request body
      contains

      prohibited fields or the status in the request body is invalid.
    schema:
      $ref: '#/definitions/TechnicalError'
    examples:
      application/json:
        error:
          code: bpm.workflowruntime.rest.task.change.property.invalid
          message: Could not update task.
          details:
            - severity: error
              message: >-
                The subject could not be set, because the value submitted is too
                long.
            - severity: error
              message: 'The description could not be set: syntax error at position 9.'
  409Conflict:
    description: >-
      The operation could not be executed because of another activity in the
      background. Please try again later.
    schema:
      $ref: '#/definitions/ConflictError'
    examples:
      application/json:
        error:
          message: >-
            The operation could not be executed because of another activity in
            the background. Please try again later.
          logId: 04a14146-dea3-493f-892c-3cb1dea7b122
  429TenantLimitExceeded:
    description: >-
      You cannot run concurrent requests of this type for the current account.
      Please retry later.
  503GlobalLimitExceeded:
    description: >-
      The limit of concurrent requests of this type has been exceeded. Please
      retry later.
paths:
  /v1/task-instances:
    get:
      summary: Retrieve instances by query parameters
      operationId: queryInstances
      tags:
        - User Task Instances
      description: >-
        Retrieves user task instances by parameters. If no parameters are
        specified, all instances with status READY, RESERVED, CANCELED, or
        COMPLETED are returned.

        Parameters for different attributes of the instance are evaluated using
        the logical 'and' operator. If a parameter is specified multiple times,

        results are matched using the logical 'or' operator, unless noted
        otherwise. Empty parameters are treated as if they were not specified.

        By default, returned tasks are sorted by creation time in ascending
        order.


        Roles permitted to execute this operation:
          - Global roles: WorkflowViewer, WorkflowAdmin
          - Instance-specific roles: viewerUsers, viewerGroups, adminUsers, adminGroups [Prerequisite: You are assigned to the WorkflowParticipant global role.]
          - Scope: TASK_GET
      parameters:
        - description: "The number of records you want to skip from the beginning.\nYou can skip at most 4000 records. To indicate a result range that starts, for example, at 1001,\_combine the $skip with the $top parameter.\nIf not specified, no records are skipped. You can use this parameter only once.\nRefer also to the $top parameter."
          in: query
          maximum: 4000
          minimum: 0
          name: $skip
          default: 0
          required: false
          type: integer
        - description: "The number of records you want to show.\nYou can get at most 1000 records per API call.\_To indicate a result range that starts, for example, at 1001,\_combine the $top with the $skip parameter.\nIf not specified, 100 records are returned. You can use this parameter only once.\nRefer also to the $skip parameter."
          in: query
          maximum: 1000
          minimum: 0
          name: $top
          default: 100
          required: false
          type: integer
        - description: >-
            Specify whether the total count of the task instances, which match
            the search criteria, should be returned as a value 

            of the X-Total-Count response header. To enable the header, use the
            'allpages' setting. To disable the header, use the 'none' setting.

            The values are case-sensitive. You can use this parameter only once.
          enum:
            - allpages
            - none
          in: query
          name: $inlinecount
          default: none
          required: false
          type: string
        - description: >
            You can request custom task attributes to become part of the task
            output by specifying the value 'attributes' for the '$expand'
            parameter.

            Otherwise, if the '$expand' parameter is not specified, the
            'attributes' field is not included into task output. Note that
            labels as well as the order of the custom task attributes in which
            they are returned, are taken from the latest versions of the
            workflow definitions where these attributes are present.
          in: query
          name: $expand
          enum:
            - attributes
          required: false
          type: string
        - description: >-
            The attribute and direction by which tasks are sorted. The sort
            attribute and direction are separated by a space.

            The parameter value is case-sensitive. You can only specify one
            ordering parameter, which contains attribute and direction.

            To stabilize the order of tasks the implicit second ordering
            parameter 'createdAt asc' is applied.

             * claimedAt asc - Ascending, task claim time from the oldest to the most recent, tasks with status READY (not yet claimed) first.
             * claimedAt desc - Descending, from the most recently claimed tasks to the oldest ones, tasks with status READY (not yet claimed) last.
             * completedAt asc - Ascending, task completion or cancelation time from the oldest to the most recent, not yet COMPLETED tasks first.
             * completedAt desc - Descending, from the most recently COMPLETED or CANCELED tasks to the oldest ones, not yet COMPLETED tasks last.
             * createdAt asc - Ascending, task creation time from the oldest to the most recent.
             * createdAt desc - Descending, from the most recently created tasks to the oldest ones.
             * lastChangedAt asc - Ascending, task last change time from the oldest to the most recent.
             * lastChangedAt desc - Descending, from the most recently changed tasks to the oldest ones.             
             * dueDate asc - Ascending, tasks due date from the oldest to the most distant in future ones, tasks without due date first.
             * dueDate desc - Descending, tasks due date from the most distant in future to the oldest ones, tasks without due date last.
             * subject asc - Ascending, from A to Z case-sensitive.
             * subject desc - Descending, from Z to A case-sensitive.
             * description asc - Ascending, from A to Z case-sensitive, tasks without description first.
             * description desc - Descending, from Z to A case-sensitive, tasks without description last.
             * activityId asc - Ascending, from A to Z case-sensitive.
             * activityId desc - Descending, from Z to A case-sensitive.
             * id asc - Ascending, from A to Z case-sensitive.
             * id desc - Descending, from Z to A case-sensitive.
             * processor asc - Ascending, from A to Z case-sensitive, tasks without processor first.
             * processor desc - Descending, from Z to A case-sensitive, tasks without processor last.
             * workflowDefinitionId asc - Ascending, from A to Z case-sensitive.
             * workflowDefinitionId desc - Descending, from Z to A case-sensitive.
             * workflowInstanceId asc - Ascending, from A to Z case-sensitive.
             * workflowInstanceId desc - Descending, from Z to A case-sensitive.
             * priority asc - Ascending, tasks priority from lowest to highest.
             * priority desc - Descending, tasks priority from highest to lowest.
          enum:
            - claimedAt asc
            - claimedAt desc
            - completedAt asc
            - completedAt desc
            - createdAt asc
            - createdAt desc
            - lastChangedAt asc
            - lastChangedAt desc
            - dueDate asc
            - dueDate desc
            - subject asc
            - subject desc
            - description asc
            - description desc
            - activityId asc
            - activityId desc
            - id asc
            - id desc
            - processor asc
            - processor desc
            - workflowDefinitionId asc
            - workflowDefinitionId desc
            - workflowInstanceId asc
            - workflowInstanceId desc
            - priority asc
            - priority desc
          in: query
          name: $orderby
          default: createdAt asc
          required: false
          type: string
        - description: >-
            The workflow instance ID for which the user task instances are
            returned. The workflow instance ID is 36 characters long.
          in: query
          name: workflowInstanceId
          minLength: 36
          maxLength: 36
          required: false
          type: string
        - description: >-
            The workflow definition ID for which the user task instances are
            returned.
          in: query
          name: workflowDefinitionId
          minLength: 1
          maxLength: 64
          required: false
          type: string
        - description: The processor of the user task instance.
          in: query
          name: processor
          maxLength: 255
          required: false
          type: string
        - description: >-
            The unique ID of the user task instance. The user task instance ID
            is 36 characters long.
          in: query
          name: id
          minLength: 36
          maxLength: 36
          required: false
          type: string
        - description: >-
            The activityId of the user task instance. This field represents the
            ID of the user task definition.
          in: query
          name: activityId
          required: false
          type: string
        - description: >-
            The description of the user task instance in UTF-8 encoding. You
            must not specify texts that contain commas with this parameter.
          in: query
          name: description
          pattern: '^[^,]*$'
          maxLength: 4000
          required: false
          type: string
        - description: >-
            The subject of the user task instance in UTF-8 encoding. You must
            not specify texts that contain commas with this parameter.
          in: query
          name: subject
          pattern: '^[^,]*$'
          maxLength: 255
          required: false
          type: string
        - description: >
            Time when the user task instance has been created.

            Evaluated using the logical 'or' operator with the values of the
            'createdFrom' and 'createdUpTo' parameters if they are specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: createdAt
          required: false
          type: string
        - description: >
            The start time (inclusive) of the time range when the user task
            instance was created.

            Must be less or equal to the value of the 'createdUpTo' parameter if
            the latter is specified.

            Evaluated using the logical 'or' operator with the value of the
            'createdAt' parameter if the latter is specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: createdFrom
          required: false
          type: string
        - description: >
            The end time (inclusive) of the time range when the user task
            instance was created.

            Must be greater or equal to the value of the 'createdFrom' parameter
            if the latter is specified.

            Evaluated using the logical 'or' operator with the value of the
            'createdAt' parameter if the latter is specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: createdUpTo
          required: false
          type: string
        - description: >
            Time when the user task instance was claimed.

            Evaluated using the logical 'or' operator with the values of the
            'claimedFrom' and 'claimedUpTo' parameters if they are specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: claimedAt
          required: false
          type: string
        - description: >
            The start time (inclusive) of the time range when the user task
            instance was claimed.

            Must be less or equal to the value of the 'claimedUpTo' parameter if
            the latter is specified.

            Evaluated using the logical 'or' operator with the value of the
            'claimedAt' parameter if the latter is specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: claimedFrom
          required: false
          type: string
        - description: >
            The end time (inclusive) of the time range when the user task
            instance was claimed.

            Must be greater or equal to the value of the 'claimedFrom' parameter
            if the latter is specified.

            Evaluated using the logical 'or' operator with the value of the
            'claimedAt' parameter if the latter is specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: claimedUpTo
          required: false
          type: string
        - description: >
            Time when the user task instance was COMPLETED or CANCELED.

            Evaluated using the logical 'or' operator with the values of the
            'completedFrom' and 'completedUpTo' parameters if they are
            specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: completedAt
          required: false
          type: string
        - description: >
            The start time (inclusive) of the time range when the user task
            instance was COMPLETED or CANCELED.

            Must be less or equal to the value of the 'completedUpTo' parameter
            if the latter is specified.

            Evaluated using the logical 'or' operator with the value of the
            'completedAt' parameter if the latter is specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: completedFrom
          required: false
          type: string
        - description: >
            The end time (inclusive) of the time range when the user task
            instance was COMPLETED or CANCELED.

            Must be greater or equal to the value of the 'completedFrom'
            parameter if the latter is specified.

            Evaluated using the logical 'or' operator with the value of the
            'completedAt' parameter if the latter is specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: completedUpTo
          required: false
          type: string
        - description: >
            Time when the user task instance has been changed for the last time.

            Evaluated using the logical 'or' operator with the values of the
            'lastChangedFrom' and 'lastChangedTo' parameters if they are
            specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: lastChangedAt
          required: false
          type: string
        - description: >
            The start time (inclusive) of the time range when the user task
            instance was changed for the last time.

            Must be less or equal to the value of the 'lastChangedUpTo'
            parameter if the latter is specified.

            Evaluated using the logical 'or' operator with the value of the
            'lastChangedAt' parameter if the latter is specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: lastChangedFrom
          required: false
          type: string
        - description: >
            The end time (inclusive) of the time range when the user task
            instance was changed for the last time.

            Must be greater or equal to the value of the 'lastChangedFrom'
            parameter if the latter is specified.

            Evaluated using the logical 'or' operator with the value of the
            'lastChangedAt' parameter if the latter is specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: lastChangedUpTo
          required: false
          type: string
        - description: >
            The due date of the user task instance.

            Evaluated using the logical 'or' operator with the values of the
            'dueDateFrom' and 'dueDateUpTo' parameters if they are specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: dueDate
          required: false
          type: string
        - description: >
            The start time (inclusive) of the due date time range for the user
            task instance.

            Must be less or equal to the value of the 'dueDateUpTo' parameter if
            the latter is specified.

            Evaluated using the logical 'or' operator with the value of the
            'dueDate' parameter if the latter is specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: dueDateFrom
          required: false
          type: string
        - description: >
            The end time (inclusive) of the due date time range for the user
            task instance.

            Must be greater or equal to the 'dueDateFrom' parameter if the
            latter is specified.

            Evaluated using the logical 'or' operator with the value of the
            'dueDate' parameter if the latter is specified.


            Supports two date formats:

            1. yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

            2. yyyyMMddHHmmss.SSS
          in: query
          name: dueDateUpTo
          required: false
          type: string
        - description: |
            The priority of the user task instance.
            The values are case-insensitive.
          enum:
            - LOW
            - MEDIUM
            - HIGH
            - VERY_HIGH
          in: query
          name: priority
          required: false
          type: string
        - description: |
            The status of the user task instance.
            The values are case-insensitive.
          enum:
            - READY
            - RESERVED
            - COMPLETED
            - CANCELED
          in: query
          name: status
          required: false
          type: string
        - description: >
            The users who must be among the recipient users of the user task
            instance. A user task instance has to match at least one of the
            recipient users specified.

            Specify the users by repeating this parameter multiple times, with
            one user each. 
          in: query
          name: recipientUsers
          required: false
          type: string
        - description: >
            The groups which must be among the recipient groups of the user task
            instance. A user task instance has to match at least one of the
            recipient groups specified.

            Specify the groups by repeating this parameter multiple times, with
            one user each. 
          in: query
          name: recipientGroups
          required: false
          type: string
        - description: >
            Text, which should be contained in at least one of the following
            fields of the user task instance:

             * subject
             * description
             * activityId
             * id
             * processor
             * workflowDefinitionId
             * workflowInstanceId

            Performed filtering is case-insensitive. You must not use this
            parameter more than once.
          in: query
          name: containsText
          required: false
          type: string
        - description: >
            Example of a parameter that filters task instances by the value of
            the custom task attribute with the ID 'ExampleCustomAttribute'.

            You can specify parameters for other attributes in an analogous way.

            If you specify a parameter several times, the logical operators
            apply as outlined in the overall description of this API.

            If custom task attributes with different IDs are present in the URL,
            only tasks which contain all of them with the values specified will
            be returned as a response to the request.

            If a query by custom task attributes matches too many task
            definitions, you have to limit the query further. Refer, for
            example, to parameter 'definitionId'.
          in: query
          name: attributes.ExampleCustomAttribute
          required: false
          type: string
        - description: >
            The definition ID of the user task.

            It consists of the ID of the task defined in the workflow definition
            (task definition ID) as well as the workflow definition ID delimited
            by an '@' sign.

            For optimal performance, specify this parameter when searching for
            tasks by custom task attributes.

            If the custom task attribute IDs from the query match more than 50
            task definitions, you have to specify one or more task definition
            IDs when searching for tasks by custom task attributes.
          in: query
          name: definitionId
          required: false
          type: string
      responses:
        '200':
          description: Returns a list of user task instances.
          schema:
            type: array
            minItems: 0
            items:
              $ref: '#/definitions/TaskInstance'
          examples:
            application/json:
              - activityId: usertask1
                claimedAt: '2017-03-08T17:26:51.637Z'
                completedAt: '2017-03-08T17:26:51.643Z'
                createdAt: '2017-03-08T17:26:51.577Z'
                description: A very important task
                id: 1d8e6a7a-03f6-11e7-873d-00163e2ab1ae
                priority: VERY_HIGH
                dueDate: '2017-03-09T19:48:30.281Z'
                processor: UserId1
                recipientUsers: []
                recipientGroups:
                  - Admins
                  - Managers
                status: COMPLETED
                subject: First Task
                workflowDefinitionId: myfirstworkflow
                workflowInstanceId: 1d4f3e91-03f6-11e7-873d-00163e2ab1ae
                applicationScope: own
              - activityId: usertask1
                claimedAt: '2017-03-08T17:26:51.637Z'
                completedAt: '2017-03-08T17:26:51.643Z'
                createdAt: '2017-03-08T17:26:51.577Z'
                description: A very important task
                id: 1d8e6a7a-03f6-11e7-873d-00163e2ab1ae
                priority: VERY_HIGH
                dueDate: null
                processor: UserId1
                recipientUsers:
                  - UserId1
                  - UserId13
                status: CANCELED
                subject: First Task
                workflowDefinitionId: myfirstworkflow
                workflowInstanceId: 1d4f3e91-03f6-11e7-873d-00163e2ab1ae
                applicationScope: own
              - activityId: usertask2
                claimedAt: null
                completedAt: null
                createdAt: '2017-03-08T17:26:51.675Z'
                description: An important task
                id: a8a6c8ae-03f6-11e7-873d-00163e2ab1ae
                priority: HIGH
                dueDate: '2017-03-10T12:00:21.382Z'
                processor: null
                recipientUsers:
                  - UserId1
                recipientGroups: []
                status: READY
                subject: Second Task
                workflowDefinitionId: myfirstworkflow
                workflowInstanceId: 1d4f3e91-03f6-11e7-873d-00163e2ab1ae
                definitionId: usertask1@myfirstworkflow
                applicationScope: shared
              - activityId: usertask3
                claimedAt: '2017-03-09T07:26:51.675Z'
                completedAt: null
                createdAt: '2017-03-08T17:26:51.675Z'
                description: A task that is already claimed
                id: a8a6c8ae-13f6-11e7-873d-20163e2ab1ae
                priority: MEDIUM
                dueDate: null
                processor: UserId1
                recipientUsers:
                  - UserId1
                recipientGroups:
                  - Admins
                status: RESERVED
                subject: Second Task
                workflowDefinitionId: myfirstworkflow
                workflowInstanceId: 1d4f3e91-03f6-11e7-873d-00163e2ab1ae
                definitionId: usertask3@myfirstworkflow
                applicationScope: shared
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404TaskInstanceNotFound'
        '429':
          $ref: '#/responses/429'
        '500':
          $ref: '#/responses/500'
  '/v1/task-instances/{taskInstanceId}':
    get:
      summary: Retrieve task by ID
      operationId: getInstance
      tags:
        - User Task Instances
      description: >-
        Retrieves the user task instance with the specified task instance ID.


        Roles permitted to execute this operation: 

        - Global roles: WorkflowViewer, WorkflowAdmin

        - Instance-specific roles: viewerUsers, viewerGroups, adminUsers,
        adminGroups [Prerequisite: You are assigned to the WorkflowParticipant
        global role.]

        - Task-specific roles: recipientUsers, recipientGroups [Prerequisite:
        You are assigned to the WorkflowParticipant global role.]

        - Scope: TASK_GET
      parameters:
        - in: path
          name: taskInstanceId
          required: true
          type: string
          minLength: 36
          maxLength: 36
          description: >-
            The ID of the user task instance which should be retrieved. The ID
            is 36 characters long.
        - description: >
            You can request custom task attributes to become part of the task
            output by specifying the value 'attributes' for the '$expand'
            parameter.

            Otherwise, if the '$expand' parameter is not specified, the
            'attributes' field is not included into task output. Note that
            labels as well as the order of the custom task attributes in which
            they are returned, are taken from the latest versions of the
            workflow definitions where these attributes are present.
          in: query
          name: $expand
          enum:
            - attributes
          required: false
          type: string
      responses:
        '200':
          description: Returns the requested user task.
          schema:
            $ref: '#/definitions/TaskInstance'
          examples:
            application/json:
              activityId: usertask1
              claimedAt: null
              completedAt: null
              createdAt: '2017-03-08T17:26:51.675Z'
              description: An important task
              id: a8a6c8ae-03f6-11e7-873d-00163e2ab1ae
              priority: MEDIUM
              dueDate: '2017-03-10T12:00:21.382Z'
              processor: null
              recipientUsers:
                - D000001
              recipientGroups:
                - Admins
              status: READY
              subject: Second Task
              workflowDefinitionId: myfirstworkflow
              workflowInstanceId: 1d4f3e91-03f6-11e7-873d-00163e2ab1ae
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404TaskInstanceNotFound'
        '429':
          $ref: '#/responses/429'
        '500':
          $ref: '#/responses/500'
    patch:
      summary: Update task by ID
      operationId: updateInstance
      tags:
        - User Task Instances
      description: >-
        Updates a user task's status, its properties (for example, subject), and
        its context with the attributes provided in the request body.  


        For more information, see SAP Cloud Platform Workflow Service
        documentation on the 

        [SAP Help
        Portal](https://help.sap.com/viewer/e157c391253b4ecd93647bf232d18a83/Cloud/en-US/fe41c54d61fa4710b34f2afe11b5d00e.html).


        Roles permitted to execute this operation: 
         - Global roles: WorkflowAdmin
         - Instance-specific roles: adminUsers, adminGroups [Prerequisite: You are assigned to the WorkflowParticipant global role.]
         - Task-specific roles: recipientUsers, recipientGroups [Prerequisite: You are assigned to the WorkflowParticipant global role.]
         - Scopes: TASK_COMPLETE, TASK_UPDATE
      parameters:
        - in: path
          name: taskInstanceId
          description: >-
            The ID of the user task instance that is to be updated. The ID is 36
            characters long.
          required: true
          type: string
          minLength: 36
          maxLength: 36
        - description: >-
            Specify the request body according to the given schema.

            The length of the request body is limited to ensure optimal
            operation of the service.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTaskInstancePayload'
      responses:
        '204':
          description: >-
            Depending on the request, either the task has been COMPLETED and the
            context updated, or the task properties have been updated.
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404TaskInstanceNotFound'
        '409':
          $ref: '#/responses/409Conflict'
        '422':
          $ref: '#/responses/422InvalidTaskPatch'
        '429':
          $ref: '#/responses/429'
        '500':
          $ref: '#/responses/500'
  '/v1/task-instances/{taskInstanceId}/attributes':
    get:
      summary: Retrieve custom task attributes by task instance ID
      operationId: getInstanceAttributes
      tags:
        - User Task Instances
      description: >
        Retrieves custom task attributes of a user task. Labels as well as the
        order of the custom task attributes in which they are returned, are
        taken from the latest versions of the workflow definitions where these
        attributes are present.


        Roles permitted to execute this operation: 

        - Global roles: WorkflowViewer, WorkflowAdmin

        - Instance-specific roles: viewerUsers, viewerGroups, adminUsers,
        adminGroups [Prerequisite: You are assigned to the WorkflowParticipant
        global role.]

        - Task-specific roles: recipientUsers, recipientGroups [Prerequisite:
        You are assigned to the WorkflowParticipant global role.]

        - Scope: TASK_GET_ATTRIBUTES
      parameters:
        - in: path
          name: taskInstanceId
          required: true
          type: string
          minLength: 36
          maxLength: 36
          description: >-
            The ID of the user task instance for which the custom task
            attributes should be retrieved. The ID is 36 characters long.
      responses:
        '200':
          description: Returns the custom task attributes for the requested user task.
          schema:
            type: array
            minItems: 0
            items:
              $ref: '#/definitions/CustomAttribute'
          examples:
            application/json:
              - id: ExampleCustomAttribute
                label: Example of custom attribute
                value: PRO_247
                type: string
              - id: Cur
                label: Currency
                value: EUR
                type: string
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404TaskInstanceNotFound'
        '429':
          $ref: '#/responses/429'
        '500':
          $ref: '#/responses/500'
  '/v1/task-instances/{taskInstanceId}/context':
    get:
      summary: Retrieve task context by ID
      operationId: getInstanceContext
      tags:
        - User Task Instances
      description: >-
        **Warning: Users with the role "WorkflowAdmin" are no longer able to
        view the task context.

        To allow these users to continue to view the context, assign the role
        "WorkflowContextViewer" to them.**


        Retrieves the context of a user task.


        Roles permitted to execute this operation: 
         - Global roles: WorkflowContextViewer, WorkflowContextAdmin
         - Instance-specific roles: contextViewerUsers, contextViewerGroups, contextAdminUsers, contextAdminGroups [Prerequisite: You are assigned to the WorkflowParticipant global role.]
         - Task-specific roles: recipientUsers, recipientGroups [Prerequisite: You are assigned to the WorkflowParticipant global role.]
         - Scope: TASK_GET_CONTEXT
      parameters:
        - in: path
          name: taskInstanceId
          required: true
          type: string
          minLength: 36
          maxLength: 36
          description: >-
            The ID of the user task for which the context should be retrieved.
            The ID is 36 characters long.
      responses:
        '200':
          description: Returns the context of the specified user task.
          schema:
            type: object
            description: The context of the user task.
          examples:
            application/json:
              firstname: John
              lastname: Doe
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404TaskInstanceNotFound'
        '429':
          $ref: '#/responses/429'
        '500':
          $ref: '#/responses/500'
  '/v1/task-instances/{taskInstanceId}/attachments':
    get:
      summary: Retrieve task instance attachments
      operationId: getInstanceAttachments
      tags:
        - User Task Instances
      description: >-
        Retrieves the attachments information of a workflow instance via the
        given user task.


        Roles permitted to execute this operation: 
         - Global roles: WorkflowViewer, WorkflowAdmin
         - Instance-specific roles: viewerUsers, viewerGroups, adminUsers, adminGroups [Prerequisite: You are assigned to the WorkflowParticipant global role.]
         - Task-specific roles: recipientUsers, recipientGroups [Prerequisite: You are assigned to the WorkflowParticipant global role.]
         - Scope: TASK_GET_ATTACHMENTS
      parameters:
        - in: path
          name: taskInstanceId
          required: true
          type: string
          minLength: 36
          maxLength: 36
          description: >-
            The ID of the user task via which the attachments information of the
            corresponding workflow instance should be retrieved. The ID is 36
            characters long.
      responses:
        '200':
          description: The attachments information of the workflow instance.
          schema:
            $ref: '#/definitions/AttachmentsContext'
          examples:
            application/json:
              rootFolder: myFolder
              groups:
                group1:
                  folder: folder1
                  refs:
                    - objectId: 1
                    - objectId: 2
                group2:
                  folder: folder2
                  refs:
                    - objectId: 3
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404TaskInstanceNotFound'
        '429':
          $ref: '#/responses/429'
        '500':
          $ref: '#/responses/500'
  '/v1/task-instances/{taskInstanceId}/form':
    get:
      summary: Retrieve form metadata of the given task instance.
      operationId: getFormMetadata
      description: |
        Retrieves the form metadata of the given task instance.

        Roles permitted to execute this operation:
          - Global roles: WorkflowViewer, WorkflowAdmin
          - Instance-specific roles: viewerUsers, viewerGroups, adminUsers, adminGroups [Prerequisite: You are assigned to the WorkflowParticipant global role.]
          - Scope: TASK_GET_FORM
      tags:
        - User Task Instances
      parameters:
        - in: path
          name: taskInstanceId
          required: true
          type: string
          minLength: 36
          maxLength: 36
          description: >-
            The ID of the user task instance for which the form metadata should
            be retrieved. The ID is 36 characters long.
      responses:
        '200':
          $ref: '#/responses/200DeployedFormMetadata'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404TaskFormNotAssigned'
        '429':
          $ref: '#/responses/429'
        '500':
          $ref: '#/responses/500'
  '/v1/task-instances/{taskInstanceId}/form/model':
    get:
      summary: Retrieve form model of the given task instance.
      operationId: getFormModel
      description: |
        Retrieves the form model of the given task instance.

        Roles permitted to execute this operation:
          - Global roles: WorkflowViewer, WorkflowAdmin
          - Instance-specific roles: viewerUsers, viewerGroups, adminUsers, adminGroups [Prerequisite: You are assigned to the WorkflowParticipant global role.]
          - Scope: TASK_GET_FORM_MODEL
      tags:
        - User Task Instances
      parameters:
        - in: path
          name: taskInstanceId
          required: true
          type: string
          minLength: 36
          maxLength: 36
          description: >-
            The ID of the user task instance for which the form model should be
            retrieved. The ID is 36 characters long.
      responses:
        '200':
          $ref: '#/responses/200DeployedFormModel'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404TaskFormNotAssigned'
        '429':
          $ref: '#/responses/429'
        '500':
          $ref: '#/responses/500'
  /v1/task-definitions:
    get:
      summary: Retrieve definitions by query parameters
      operationId: queryDefinitions
      tags:
        - Task Definitions
      description: >-
        Retrieves task definitions by query parameters. 


        A task definition is identified by the ID of the respective activity
        within a workflow definition (for example, usertask1) and the workflow
        definition ID. 

        The workflow definition ID is version independent. That means, this API
        assumes that task definitions are semantically the same if they span
        several 

        workflow versions and therefore have the same identifier. The latest
        workflow definition version is expected to contain the leading property
        values of

        the task definition.


        At the moment, filtering is limited to the $skip and $top parameters for
        paging through the available task definitions.


        The returned task definitions are sorted in descending order of their
        creation time.


        Roles permitted to execute this operation:
          - Global roles: WorkflowViewer, WorkflowAdmin
      parameters:
        - description: "The number of records you want to skip from the beginning.\nYou can skip at most 4000 records. To indicate a result range that starts, for example, at 1001,\_combine the $skip with the $top parameter.\nIf not specified, no records are skipped. You can use this parameter only once.\nRefer also to the $top parameter."
          in: query
          maximum: 4000
          minimum: 0
          name: $skip
          default: 0
          required: false
          type: integer
        - description: "The number of records you want to show.\nYou can get at most 1000 records per API call.\_To indicate a result range that starts, for example, at 1001,\_combine the $top with the $skip parameter.\nIf not specified, 100 records are returned. You can use this parameter only once.\nRefer also to the $skip parameter."
          in: query
          maximum: 1000
          minimum: 0
          name: $top
          default: 100
          required: false
          type: integer
        - description: >-
            Specify whether the total count of the task definitions should be
            returned as a value of the X-Total-Count response header.

            To enable the header, use the 'allpages' setting. To disable the
            header, use the 'none' setting.

            The values are case-sensitive. You can use this parameter only once.
          enum:
            - allpages
            - none
          in: query
          name: $inlinecount
          default: none
          required: false
          type: string
        - description: >-
            You can request custom task attributes to become part of the task
            output by specifying the value 'attributeDefinitions' for the
            '$expand' parameter.

            Otherwise, if the '$expand' parameter is not specified, the
            'attributeDefinitions' field is not included into the output. Note
            that labels as well as the order of the custom task attributes in
            which they are returned, are taken from the latest versions of the
            workflow definitions where the corresponding task definition exists.
          in: query
          name: $expand
          enum:
            - attributeDefinitions
          required: false
          type: string
      responses:
        '200':
          description: Returns a list of task definitions.
          schema:
            $ref: '#/definitions/TaskDefinitionList'
          examples:
            application/json:
              - id: usertask1@myfirstworkflow
                name: Approve Onboarding
                createdAt: '2017-03-08T17:26:51.643Z'
              - id: usertask2@myfirstworkflow
                name: Confirm Equipment of Onboardee
                createdAt: '2017-03-08T17:26:51.643Z'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '429':
          $ref: '#/responses/429'
        '500':
          $ref: '#/responses/500'
schemes:
  - https
securityDefinitions:
  Oauth2_ClientCredentials:
    type: oauth2
    tokenUrl: 'https://{consumersubdomain}.authentication.{landscapehost}/oauth/token'
    flow: application
    scopes: {}
  Oauth2_AuthorizationCode:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://{consumersubdomain}.authentication.{landscapehost}/oauth/authorize'
    tokenUrl: 'https://{consumersubdomain}.authentication.{landscapehost}/oauth/token'
    scopes: {}
security:
  - Oauth2_ClientCredentials: []
    Oauth2_AuthorizationCode: []
swagger: '2.0'

