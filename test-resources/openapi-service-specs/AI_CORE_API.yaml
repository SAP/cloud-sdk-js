openapi: 3.0.0
info:
  title: AI Core
  description: |
    Provides tools to manage your scenarios and workflows in SAP AI Core. Execute pipelines as a batch job, for example to pre-process or train your models, or perform batch inference.  Serve inference requests of trained models. Deploy Ð° trained machine learning model as a web service to serve inference requests with high performance.  Register your own Docker registry, synchronize your AI content from your own git repository, and register your own object store for training data and trained models.
  version: 2.28.0
externalDocs:
  description: Documentation for SAP AI Core
  url: https://help.sap.com/docs/AI_CORE?version=CLOUD
servers:
- url: https://api.ai.{region}.aws.ml.hana.ondemand.com/v2
  description: Production endpoint for SAP AI Core
  variables:
    region:
      default: prod.eu-central-1
      enum:
      - prod.eu-central-1
      - prodeuonly.eu-central-1
      - prod.us-east-1
      - prod.ap-northeast-1
      - prod.ap-southeast-2
security:
- Oauth2: []
tags:
- name: Scenario
  description: Access to scenarios
- name: Executable
  description: Access to executables
- name: Configuration
  description: Access to configurations for executions and deployments
- name: Deployment
  description: Access to deployments
- name: Execution
  description: Access to executions
- name: Artifact
  description: Access to artifacts, e.g. datasets and models
- name: Docker Registry Secret
  description: Access to dockerRegistrySecrets
- name: Metrics
  description: Access metrics of training runs
- name: KPI
  description: Access to usage information for a tenant
- name: Object Store Secret
  description: Access to objectStoreSecrets
- name: Secret
  description: Access to generic secrets
- name: Meta
  description: Metadata about API provider and capabilities
- name: Execution Schedule
  description: Access to executionSchedules
paths:
  /lm/artifacts:
    get:
      tags:
      - Artifact
      summary: Get list of artifacts
      description: |
        Retrieve a list of artifacts that matches the specified filter criteria.
        Filter criteria include scenario ID, execution ID, an artifact name, artifact kind, or artifact labels.
        Use top/skip parameters to paginate the result list.
        Search by substring of artifact name or description, if required.
      operationId: artifact.query
      parameters:
      - name: scenarioId
        in: query
        description: Scenario identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: executionId
        in: query
        description: Execution identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: name
        in: query
        description: Artifact name
        required: false
        schema:
          $ref: '#/components/schemas/name'
        example: inception
      - name: kind
        in: query
        description: Kind of the artifact
        required: false
        schema:
          type: string
          enum:
          - model
          - dataset
          - resultset
          - other
        example: model
      - name: artifactLabelSelector
        in: query
        description: |
          Filter artifact by labels. Pass in expressions in the form of "key=value" or "key!=value" separated by commas and the result will be filtered to only those resources that have labels that match all provided expressions (i.e. logical AND). The maximum number of labels permitted for filtering is 10
        required: false
        style: form
        explode: false
        schema:
          maxItems: 10
          minItems: 1
          type: array
          items:
            maxLength: 5000
            pattern: ^ext\.ai\.sap\.com\/[\w\.-]+!?=[^ =,]+$
            type: string
        example: ext.ai.sap.com/key1=value1,ext.ai.sap.com/key2!=value2
      - name: $top
        in: query
        description: Number of results to display
        required: false
        schema:
          maximum: 100000
          type: integer
          default: 10000
        example: 10
        x-visible: false
      - name: $skip
        in: query
        description: Number of results to be skipped from the ordered list of results
        required: false
        schema:
          type: integer
        example: 10
        x-visible: false
      - name: $search
        in: query
        description: Generic search term to be looked for in various attributes
        required: false
        schema:
          pattern: ^[^~]{1,80}$
          type: string
        example: onfigur
      - name: searchCaseInsensitive
        in: query
        description: indicates whether the search should be case insensitive
        required: false
        schema:
          type: boolean
          default: false
        example: true
      - name: $expand
        in: query
        description: expand detailed information on scenario
        required: false
        schema:
          type: string
          enum:
          - scenario
        example: scenario
        x-visible: false
      responses:
        '200':
          description: A list of artifacts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactList'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    post:
      tags:
      - Artifact
      summary: Register artifact
      description: Register an artifact for use in a configuration, for example a model or a dataset.
      operationId: artifact.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactPostData'
        required: true
      responses:
        '201':
          description: The artifact has been registered successfully
          headers:
            Location:
              description: URL of the registered artifact
              schema:
                $ref: '#/components/schemas/Url'
            Content-Location:
              description: URL of the registered artifact. This header is deprecated. Location header shall be used instead.
              deprecated: true
              schema:
                $ref: '#/components/schemas/Url'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactCreationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
  /lm/artifacts/{artifactId}:
    get:
      tags:
      - Artifact
      summary: Get artifact by ID
      description: Retrieve details for artifact with artifactId.
      operationId: artifact.get
      responses:
        '200':
          description: An artifact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
    - name: artifactId
      in: path
      description: Artifact identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    - name: $expand
      in: query
      description: expand detailed information on scenario
      required: false
      schema:
        type: string
        enum:
        - scenario
      example: scenario
      x-visible: false
  /lm/configurations:
    get:
      tags:
      - Configuration
      summary: Get list of configurations
      description: |
        Retrieve a list of configurations. Filter results by scenario ID or a list of executable IDs.
        Search for configurations containing the search string as substring in the configuration name.
      operationId: configuration.query
      parameters:
      - name: scenarioId
        in: query
        description: Scenario identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: $top
        in: query
        description: Number of results to display
        required: false
        schema:
          maximum: 100000
          type: integer
          default: 10000
        example: 10
        x-visible: false
      - name: $skip
        in: query
        description: Number of results to be skipped from the ordered list of results
        required: false
        schema:
          type: integer
        example: 10
        x-visible: false
      - name: executableIds
        in: query
        description: Limit query to only these executable IDs
        style: form
        explode: false
        schema:
          maxItems: 1000
          type: array
          items:
            pattern: ^[\w.-]{4,64}$
            type: string
      - name: $search
        in: query
        description: Generic search term to be looked for in various attributes
        required: false
        schema:
          pattern: ^[^~]{1,80}$
          type: string
        example: onfigur
      - name: searchCaseInsensitive
        in: query
        description: indicates whether the search should be case insensitive
        required: false
        schema:
          type: boolean
          default: false
        example: true
      - name: $expand
        in: query
        description: expand detailed information on scenario
        required: false
        schema:
          type: string
          enum:
          - scenario
        example: scenario
        x-visible: false
      responses:
        '200':
          description: A list of configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationList'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    post:
      tags:
      - Configuration
      summary: Create configuration
      description: |
        Create a new configuration linked to a specific scenario and executable for use in an execution
        or deployment.
      operationId: configuration.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationBaseData'
        required: true
      responses:
        '201':
          description: The created configuration
          headers:
            Location:
              description: URL of the created configuration
              schema:
                $ref: '#/components/schemas/Url'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationCreationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
  /lm/configurations/{configurationId}:
    get:
      tags:
      - Configuration
      summary: Get configuration by ID
      description: Retrieve details for configuration with configurationId.
      operationId: configuration.get
      responses:
        '200':
          description: A configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
    - name: configurationId
      in: path
      description: Configuration identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    - name: $expand
      in: query
      description: expand detailed information on scenario
      required: false
      schema:
        type: string
        enum:
        - scenario
      example: scenario
      x-visible: false
  /lm/configurations/{configurationId}/deployments:
    post:
      tags:
      - Deployment
      summary: Create deployment
      description: Create deployment. Deprecated, use POST /deployments instead
      operationId: deployment.create_deprecated
      responses:
        '202':
          description: The deployment has been scheduled successfully
          headers:
            Location:
              description: URL of the scheduled deployment
              schema:
                $ref: '#/components/schemas/Url'
            Content-Location:
              description: URL of the scheduled deployment. This header is deprecated. Location header shall be used instead.
              deprecated: true
              schema:
                $ref: '#/components/schemas/Url'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentCreationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      deprecated: true
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
    - name: configurationId
      in: path
      description: Configuration identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
  /lm/configurations/{configurationId}/executions:
    post:
      tags:
      - Execution
      summary: Trigger execution
      description: Trigger execution. Deprecated. Use POST /executions instead
      operationId: execution.create_deprecated
      responses:
        '202':
          description: The execution has been scheduled successfully
          headers:
            Location:
              description: URL of the scheduled execution
              schema:
                $ref: '#/components/schemas/Url'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionCreationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
      deprecated: true
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
    - name: configurationId
      in: path
      description: Configuration identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
  /lm/deployments:
    get:
      tags:
      - Deployment
      summary: Get list of deployments
      description: |
        Retrieve a list of deployments that match the specified filter criteria.
        Filter criteria include a list of executableIds, a scenarioId, a configurationId, or a deployment status.
        With top/skip parameters it is possible to paginate the result list.
        With select parameter it is possible to select only status.
      operationId: deployment.query
      parameters:
      - name: executableIds
        in: query
        description: Limit query to only these executable IDs
        style: form
        explode: false
        schema:
          maxItems: 1000
          type: array
          items:
            pattern: ^[\w.-]{4,64}$
            type: string
      - name: configurationId
        in: query
        description: Configuration identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: scenarioId
        in: query
        description: Scenario identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: status
        in: query
        description: Filter by status
        required: false
        schema:
          type: string
          enum:
          - PENDING
          - RUNNING
          - COMPLETED
          - DEAD
          - STOPPING
          - STOPPED
          - UNKNOWN
        example: RUNNING
      - name: $top
        in: query
        description: Number of results to display
        required: false
        schema:
          maximum: 100000
          type: integer
          default: 10000
        example: 10
        x-visible: false
      - name: $skip
        in: query
        description: Number of results to be skipped from the ordered list of results
        required: false
        schema:
          type: integer
        example: 10
        x-visible: false
      - name: $select
        in: query
        description: Allows to request a specified set of properties for each entity
        required: false
        schema:
          type: string
          enum:
          - status
        example: status
        x-visible: false
      responses:
        '200':
          description: A list of deployments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentList'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    post:
      tags:
      - Deployment
      summary: Create deployment
      description: Create a deployment using the configuration specified by configurationId.
      operationId: deployment.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentCreationRequest'
        required: true
      responses:
        '202':
          description: The deployment has been scheduled successfully
          headers:
            Location:
              description: URL of the scheduled deployment
              schema:
                $ref: '#/components/schemas/Url'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentCreationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    patch:
      tags:
      - Deployment
      summary: Patch multiple deployments
      description: Update status of multiple deployments. stop or delete multiple deployments.
      operationId: deployment.batch_modify
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/DeploymentBulkModificationRequest'
        required: true
      responses:
        '202':
          description: The modification of the deployments have been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentBulkModificationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
  /lm/deployments/{deploymentId}:
    get:
      tags:
      - Deployment
      summary: Get information about specific deployment
      description: Retrieve details for execution with deploymentId.
      operationId: deployment.get
      parameters:
      - name: $select
        in: query
        description: Allows to request a specified set of properties for each entity
        required: false
        schema:
          type: string
          enum:
          - status
        example: status
        x-visible: false
      responses:
        '200':
          description: Information about the deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentResponseWithDetails'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    delete:
      tags:
      - Deployment
      summary: Mark deployment as deleted
      description: Mark deployment with deploymentId as deleted.
      operationId: deployment.delete
      responses:
        '202':
          description: The deletion of the deployment has been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentDeletionResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '412':
          description: The service didn't meet the precondition needed to execute this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    patch:
      tags:
      - Deployment
      summary: Update target status or configuration of a deployment
      description: Update target status of a deployment to stop a deployment or change the configuration to be used by the deployment. A change of configuration is only allowed for RUNNING and PENDING deployments.
      operationId: deployment.modify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentModificationRequest'
        required: true
      responses:
        '202':
          description: The modification of the deployment has been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentModificationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '412':
          description: The service didn't meet the precondition needed to execute this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
    - name: deploymentId
      in: path
      description: Deployment identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
  /lm/executions:
    get:
      tags:
      - Execution
      summary: Get list of executions
      description: |
        Retrieve a list of executions that match the specified filter criteria.
        Filter criteria include a list of executableIds, a scenarioId, a configurationId, or a execution status.
        With top/skip parameters it is possible to paginate the result list.
        With select parameter it is possible to select only status.
      operationId: execution.query
      parameters:
      - name: executableIds
        in: query
        description: Limit query to only these executable IDs
        style: form
        explode: false
        schema:
          maxItems: 1000
          type: array
          items:
            pattern: ^[\w.-]{4,64}$
            type: string
      - name: configurationId
        in: query
        description: Configuration identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: scenarioId
        in: query
        description: Scenario identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: executionScheduleId
        in: query
        description: Execution Schedule identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: status
        in: query
        description: Filter by status
        required: false
        schema:
          type: string
          enum:
          - PENDING
          - RUNNING
          - COMPLETED
          - DEAD
          - STOPPING
          - STOPPED
          - UNKNOWN
        example: RUNNING
      - name: $top
        in: query
        description: Number of results to display
        required: false
        schema:
          maximum: 100000
          type: integer
          default: 10000
        example: 10
        x-visible: false
      - name: $skip
        in: query
        description: Number of results to be skipped from the ordered list of results
        required: false
        schema:
          type: integer
        example: 10
        x-visible: false
      - name: $select
        in: query
        description: Allows to request a specified set of properties for each entity
        required: false
        schema:
          type: string
          enum:
          - status
        example: status
        x-visible: false
      responses:
        '200':
          description: A list of executions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionList'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    post:
      tags:
      - Execution
      summary: Create execution
      description: Create an execution using the configuration specified by configurationId.
      operationId: execution.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnactmentCreationRequest'
        required: true
      responses:
        '202':
          description: The execution has been scheduled successfully
          headers:
            Location:
              description: URL of the scheduled execution
              schema:
                $ref: '#/components/schemas/Url'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionCreationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    patch:
      tags:
      - Execution
      summary: Patch multiple executions
      description: Patch multiple executions' status to stopped or deleted.
      operationId: execution.batch_modify
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ExecutionBulkModificationRequest'
        required: true
      responses:
        '202':
          description: The modification of the executions have been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionBulkModificationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
  /lm/executions/{executionId}:
    get:
      tags:
      - Execution
      summary: Get information about a specific execution
      description: Retrieve details for execution with executionId.
      operationId: execution.get
      parameters:
      - name: $select
        in: query
        description: Allows to request a specified set of properties for each entity
        required: false
        schema:
          type: string
          enum:
          - status
        example: status
        x-visible: false
      responses:
        '200':
          description: Information about the execution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionResponseWithDetails'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    delete:
      tags:
      - Execution
      summary: Mark execution as deleted
      description: Mark the execution with executionId as deleted.
      operationId: execution.delete
      responses:
        '202':
          description: The deletion of the execution has been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionDeletionResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '412':
          description: The service didn't meet the precondition needed to execute this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    patch:
      tags:
      - Execution
      summary: Update target status of an execution
      description: Update target status of the execution to stop an execution.
      operationId: execution.modify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionModificationRequest'
        required: true
      responses:
        '202':
          description: The modification of the execution has been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionModificationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '412':
          description: The service didn't meet the precondition needed to execute this operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
    - name: executionId
      in: path
      description: Execution identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
  /lm/executionSchedules:
    get:
      tags:
      - Execution Schedule
      summary: Get list of execution schedules
      description: |
        Retrieve a list of execution schedules that match the specified filter criteria.
        Filter criteria include executionScheduleStatus or a configurationId.
        With top/skip parameters it is possible to paginate the result list.
      operationId: execution_schedule.query
      parameters:
      - name: configurationId
        in: query
        description: Configuration identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: status
        in: query
        description: Execution Schedule status
        required: false
        schema:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
        example: ACTIVE
      - name: $top
        in: query
        description: Number of results to display
        required: false
        schema:
          maximum: 100000
          type: integer
          default: 10000
        example: 10
        x-visible: false
      - name: $skip
        in: query
        description: Number of results to be skipped from the ordered list of results
        required: false
        schema:
          type: integer
        example: 10
        x-visible: false
      responses:
        '200':
          description: A list of execution schedules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionScheduleList'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    post:
      tags:
      - Execution Schedule
      summary: Create execution schedule
      description: Create an execution schedule using the configuration specified by configurationId, and schedule.
      operationId: execution_schedule.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionScheduleCreationData'
        required: true
      responses:
        '202':
          description: The execution schedule has been created successfully
          headers:
            Location:
              description: URL of the execution schedule
              schema:
                $ref: '#/components/schemas/Url'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionScheduleCreationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
  /lm/executionSchedules/{executionScheduleId}:
    get:
      tags:
      - Execution Schedule
      summary: Get information about an execution schedule
      description: Retrieve details for execution schedule with executionScheduleId.
      operationId: execution_schedule.get
      responses:
        '200':
          description: Information about the execution schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionSchedule'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    delete:
      tags:
      - Execution Schedule
      summary: Delete execution schedule
      description: Delete the execution schedule with executionScheduleId.
      operationId: execution_schedule.delete
      responses:
        '202':
          description: The execution schedule has been deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionScheduleDeletionResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    patch:
      tags:
      - Execution Schedule
      summary: Update an execution schedule
      description: Update details of an execution schedule
      operationId: execution_schedule.modify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionScheduleModificationRequest'
        required: true
      responses:
        '202':
          description: The execution schedule has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionScheduleModificationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
    - name: executionScheduleId
      in: path
      description: Execution Schedule identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
  /lm/scenarios:
    get:
      tags:
      - Scenario
      summary: Get list of scenarios
      description: Retrieve a list of all available scenarios.
      operationId: scenario.query
      responses:
        '200':
          description: A list of scenarios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioList'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
  /lm/scenarios/{scenarioId}:
    get:
      tags:
      - Scenario
      summary: Get scenario by id
      description: Retrieve details for a scenario specified by scenarioId.
      operationId: scenario.get
      responses:
        '200':
          description: A scenario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
    - name: scenarioId
      in: path
      description: Scenario identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
  /lm/scenarios/{scenarioId}/executables:
    get:
      tags:
      - Executable
      summary: Get list of executables
      description: |
        Retrieve a list of executables for a scenario. Filter by version ID, if required.
      operationId: executable.query
      parameters:
      - name: versionId
        in: query
        description: Version ID, if defined - returns the specified version
        required: false
        schema:
          type: string
      responses:
        '200':
          description: A list of executables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutableList'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: scenarioId
      in: path
      description: Scenario identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
  /lm/scenarios/{scenarioId}/executables/{executableId}:
    get:
      tags:
      - Executable
      summary: Get details about specific executable
      description: |
        Retrieve details about an executable identified by executableId belonging
        to a scenario identified by scenarioId.
      operationId: executable.get
      responses:
        '200':
          description: An Executable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Executable'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: scenarioId
      in: path
      description: Scenario identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    - name: executableId
      in: path
      description: Executable identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
  /lm/scenarios/{scenarioId}/versions:
    get:
      tags:
      - Scenario
      summary: Get list of versions for scenario
      description: |
        Retrieve a list of scenario versions based on the versions of executables
        available within that scenario.
      operationId: scenario.query_versions
      responses:
        '200':
          description: A list of versions for the scenario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionList'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
    parameters:
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: true
      schema:
        type: string
    - name: scenarioId
      in: path
      description: Scenario identifier
      required: true
      schema:
        pattern: ^[\w.-]{4,64}$
        type: string
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    - name: labelSelector
      in: query
      description: |
        filter by labels. Pass in expressions in the form of "key=value" or "key!=value" separated by commas and the result will be filtered to only those resources that have labels that match all provided expressions (i.e. logical AND)
      required: false
      style: form
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          maxLength: 5000
          pattern: ^ext\.ai\.sap\.com\/[\w\.-]+!?=[^ =,]+$
          type: string
      example: ext.ai.sap.com/key1=value1,ext.ai.sap.com/key2!=value2
  /lm/artifacts/$count:
    get:
      tags:
      - Artifact
      summary: Get number of artifacts
      description: |
        Retrieve  the number of available artifacts that match the specified filter criteria.
        Filter criteria include a scenarioId, executionId, an artifact name, artifact kind, or artifact labels.
        Search by substring of artifact name or description is also possible.
      operationId: artifact.count
      parameters:
      - name: AI-Resource-Group
        in: header
        description: Specify a resource group id
        required: true
        schema:
          type: string
      - name: scenarioId
        in: query
        description: Scenario identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: executionId
        in: query
        description: Execution identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: name
        in: query
        description: Artifact name
        required: false
        schema:
          $ref: '#/components/schemas/name'
        example: inception
      - name: kind
        in: query
        description: Kind of the artifact
        required: false
        schema:
          type: string
          enum:
          - model
          - dataset
          - resultset
          - other
        example: model
      - name: $search
        in: query
        description: Generic search term to be looked for in various attributes
        required: false
        schema:
          pattern: ^[^~]{1,80}$
          type: string
        example: onfigur
      - name: searchCaseInsensitive
        in: query
        description: indicates whether the search should be case insensitive
        required: false
        schema:
          type: boolean
          default: false
        example: true
      - name: artifactLabelSelector
        in: query
        description: |
          Filter artifact by labels. Pass in expressions in the form of "key=value" or "key!=value" separated by commas and the result will be filtered to only those resources that have labels that match all provided expressions (i.e. logical AND). The maximum number of labels permitted for filtering is 10
        required: false
        style: form
        explode: false
        schema:
          maxItems: 10
          minItems: 1
          type: array
          items:
            maxLength: 5000
            pattern: ^ext\.ai\.sap\.com\/[\w\.-]+!?=[^ =,]+$
            type: string
        example: ext.ai.sap.com/key1=value1,ext.ai.sap.com/key2!=value2
      responses:
        '200':
          description: Number of artifacts
          content:
            text/plain:
              schema:
                type: integer
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /lm/configurations/$count:
    get:
      tags:
      - Configuration
      summary: Get number of configurations
      description: |
        Retrieve the number of available configurations that match the specified filter criteria.
        Filter criteria include a scenarioId or executableIdsList. Search by substring of configuration name is also possible.
      operationId: configuration.count
      parameters:
      - name: AI-Resource-Group
        in: header
        description: Specify a resource group id
        required: true
        schema:
          type: string
      - name: scenarioId
        in: query
        description: Scenario identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: $search
        in: query
        description: Generic search term to be looked for in various attributes
        required: false
        schema:
          pattern: ^[^~]{1,80}$
          type: string
        example: onfigur
      - name: searchCaseInsensitive
        in: query
        description: indicates whether the search should be case insensitive
        required: false
        schema:
          type: boolean
          default: false
        example: true
      - name: executableIds
        in: query
        description: Limit query to only these executable IDs
        style: form
        explode: false
        schema:
          maxItems: 1000
          type: array
          items:
            pattern: ^[\w.-]{4,64}$
            type: string
      responses:
        '200':
          description: Number of configurations
          content:
            text/plain:
              schema:
                type: integer
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /lm/executions/$count:
    get:
      tags:
      - Execution
      summary: Get number of executions
      description: |
        Retrieve the number of available executions. The number can be filtered by
        scenarioId, configurationId, executableIdsList or by execution status.
      operationId: execution.count
      parameters:
      - name: AI-Resource-Group
        in: header
        description: Specify a resource group id
        required: true
        schema:
          type: string
      - name: executableIds
        in: query
        description: Limit query to only these executable IDs
        style: form
        explode: false
        schema:
          maxItems: 1000
          type: array
          items:
            pattern: ^[\w.-]{4,64}$
            type: string
      - name: configurationId
        in: query
        description: Configuration identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: scenarioId
        in: query
        description: Scenario identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: executionScheduleId
        in: query
        description: Execution Schedule identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: status
        in: query
        description: Filter by status
        required: false
        schema:
          type: string
          enum:
          - PENDING
          - RUNNING
          - COMPLETED
          - DEAD
          - STOPPING
          - STOPPED
          - UNKNOWN
        example: RUNNING
      responses:
        '200':
          description: Number of executions
          content:
            text/plain:
              schema:
                type: integer
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /lm/deployments/$count:
    get:
      tags:
      - Deployment
      summary: Get number of deployments
      description: |
        Retrieve the number of available deployments. The number can be filtered by
        scenarioId, configurationId, executableIdsList or by deployment status.
      operationId: deployment.count
      parameters:
      - name: AI-Resource-Group
        in: header
        description: Specify a resource group id
        required: true
        schema:
          type: string
      - name: executableIds
        in: query
        description: Limit query to only these executable IDs
        style: form
        explode: false
        schema:
          maxItems: 1000
          type: array
          items:
            pattern: ^[\w.-]{4,64}$
            type: string
      - name: configurationId
        in: query
        description: Configuration identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: scenarioId
        in: query
        description: Scenario identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: status
        in: query
        description: Filter by status
        required: false
        schema:
          type: string
          enum:
          - PENDING
          - RUNNING
          - COMPLETED
          - DEAD
          - STOPPING
          - STOPPED
          - UNKNOWN
        example: RUNNING
      responses:
        '200':
          description: Number of deployments
          content:
            text/plain:
              schema:
                type: integer
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /lm/executionSchedules/$count:
    get:
      tags:
      - Execution Schedule
      summary: Get number of execution schedules
      description: |
        Retrieve the number of scheduled executions. The number can be filtered by
        configurationId or executionScheduleStatus.
      operationId: execution_schedule.count
      parameters:
      - name: AI-Resource-Group
        in: header
        description: Specify a resource group id
        required: true
        schema:
          type: string
      - name: configurationId
        in: query
        description: Configuration identifier
        required: false
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: status
        in: query
        description: Execution Schedule status
        required: false
        schema:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
        example: ACTIVE
      responses:
        '200':
          description: Number of execution schedules
          content:
            text/plain:
              schema:
                type: integer
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /lm/meta:
    get:
      tags:
      - Meta
      summary: Meta information about API
      description: Meta information about an implementation of AI API, describing its capabilities, limits and extensions
      operationId: meta.get
      responses:
        '200':
          description: Description of the implementation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capabilities'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /lm/metrics:
    get:
      tags:
      - Metrics
      summary: |
        Get metrics according to specified filter conditions.
      description: "Retrieve metrics, labels, or tags according to filter conditions. \nOne query parameter is mandatory, either execution ID or filter. \nUse up to 10 execution IDs in a query parameter.\n"
      operationId: metrics.find
      parameters:
      - name: AI-Resource-Group
        in: header
        description: Specify a resource group id
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: Filter parameter allows filtering of metric resource using ExecutionId(s). User can only use in, eq operators in filter expression.
        required: false
        deprecated: true
        schema:
          type: string
        example: executionId eq 'aa97b177-9383-4934-8543-0f91b7a0283a'
      - name: executionIds
        in: query
        description: executionIds parameter allows filtering of metric resource using single or multiple ExecutionId(s).
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/StringArray'
        example: executionIds=aa97b177-9383-4934-8543-0f91b7a0283a,aa97b177-9383-4934-8543-0f91b7a0283b
      - name: $select
        in: query
        description: returns only the resources that the client explicitly requests. User can also pass * as a value for $select,  which will behave same as that of not passing $select query param.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/metricSelectorPermissibleValues'
        examples:
          selectAll:
            value: $select=*
          selectSpecific:
            value: $select=metrics,customInfo
      responses:
        '200':
          description: List of tracking metadata, where each item includes metrics, labels, tags and customInfo. If $select query parameter is specified, each item will include only the resources specified in $select.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetricResourceList'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        '501':
          description: Operation is not Supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
    delete:
      tags:
      - Metrics
      summary: Delete metrics, tags, or labels
      description: Delete metrics, tags, or labels associated with an execution.
      operationId: metrics.delete
      parameters:
      - name: AI-Resource-Group
        in: header
        description: Specify a resource group id
        required: true
        schema:
          type: string
      - name: executionId
        in: query
        description: The Id of an execution
        required: true
        schema:
          $ref: '#/components/schemas/ExecutionId_2'
      responses:
        '200':
          description: Metric Resource was successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMetricsResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
    patch:
      tags:
      - Metrics
      summary: Create or update metrics, tags, or labels
      description: |
        Update or create metrics, tags, or labels associated with an execution.
      operationId: metrics.patch
      parameters:
      - name: AI-Resource-Group
        in: header
        description: Specify a resource group id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/MetricResource'
        required: true
      responses:
        '204':
          description: Metrics was successfully updated/created
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        '413':
          description: request entity is larger than limits defined by server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
  /analytics/kpis:
    get:
      tags:
      - KPI
      summary: Get KPIs
      description: "Retrieve the number of executions, artifacts, and deployments \nfor each resource group, scenario, and executable. The columns to be returned can be specified in a query parameter.\n"
      operationId: kpi.get
      parameters:
      - name: $select
        in: query
        description: Columns to select
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/ArrayOfColumnNames'
      responses:
        '200':
          description: KPIs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSet'
              examples:
                example-1:
                  value:
                    header:
                    - ResourceGroup
                    - Executions
                    - Artifacts
                    - Deployments
                    rows:
                    - - 00112233-4455-6677-8899-aabbccddeeff
                      - 30
                      - 30
                      - 3
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /lm/dataset/files/{path}:
    get:
      tags:
      - File
      summary: Download file
      description: Endpoint for downloading file. The path must point to an individual file.
      operationId: file.download
      responses:
        '200':
          description: OK
          headers:
            X-Content-Type-Options:
              description: as per SEC-228 value should always be "nosniff"
              required: true
              schema:
                type: string
            Content-Security-Policy:
              description: as per SEC-228 value should always be "default-src 'none'; sandbox"
              required: true
              schema:
                type: string
            Content-Disposition:
              description: as per SEC-228 value should always be "attachment"
              required: true
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: '03021655'
                message: Bad request encountered. Please try again with possible-solution-here.
                target: /url/path
                requestId: 9832bf934f3743v3948v3
                details:
                - code: '01041211'
                  message: Optional nested error message.
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: '03021655'
                message: The resource you requested was not found. Please try again with possible-solution-here.
                target: /url/path
                requestId: 9832bf934f3743v3948v3
                details:
                - code: '01041211'
                  message: Optional nested error message.
    put:
      tags:
      - File
      summary: Upload file (size <= 100Mb)
      description: "Endpoint for uploading file. The maximum file size depends on the actual implementation \nbut must not exceed 100MB. The actual file size limit can be obtained by querying \nthe AI API Runtime Capabilities Endpoint and checking the limits in the section of the `fileUpload` extension.\n\nPath cannot be a prefix, it must be a path to an object.\nClients may group the objects in any manner they choose by specifying path prefixes.\n\nAllowed mime-types will be decided by the implementation.\nContent-Type header can be set to \"application/octet-stream\" but the implementation is responsible \nfor detecting the actual mime type and checking against the allowed list of mime types. \nFor security reasons, implementations cannot trust the mime type sent by the client.\n\nExample URLs: \n/files/dar/schemas/schema.json \n/files/icr/datasets/training/20201001/20201001-01.csv \n/files/icr/datasets/training/20201001/20201001-02.csv  \n/files/mask-detection/training/mask-detection-20210301.tar.gz"
      operationId: file.upload
      parameters:
      - name: overwrite
        in: query
        description: If true, then file is overwritten. Default is false.
        required: false
        schema:
          type: boolean
      requestBody:
        description: Body of the file upload request
        content:
          '*/*':
            schema:
              type: string
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: URL of the newly created file. This URL can be passed on to the artifact API to register this file.
              schema:
                $ref: '#/components/schemas/Url'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileCreationResponse'
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: '03021655'
                message: Bad request encountered. Please try again with possible-solution-here.
                target: /url/path
                requestId: 9832bf934f3743v3948v3
                details:
                - code: '01041211'
                  message: Optional nested error message.
        '409':
          description: The specified file already exists and cannot be overwritten.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: '03021655'
                message: The specified file already exists and cannot be overwritten. Please try again with possible-solution-here.
                target: /url/path
                requestId: 9832bf934f3743v3948v3
                details:
                - code: '01041211'
                  message: Optional nested error message.
        '413':
          description: The file size exceeds the supported limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: '03021655'
                message: The file size exceeds the supported limit.
                target: /url/path
                requestId: 9832bf934f3743v3948v3
                details:
                - code: '01041211'
                  message: Optional nested error message.
    delete:
      tags:
      - File
      summary: Delete file
      description: Delete the file specified by the path parameter.
      operationId: file.delete
      responses:
        '204':
          description: The request was processed successfully.
        '400':
          description: The specification of the resource was incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: '03021655'
                message: Bad request encountered. Please try again with possible-solution-here.
                target: /url/path
                requestId: 9832bf934f3743v3948v3
                details:
                - code: '01041211'
                  message: Optional nested error message.
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: '03021655'
                message: The resource you requested was not found. Please try again with possible-solution-here.
                target: /url/path
                requestId: 9832bf934f3743v3948v3
                details:
                - code: '01041211'
                  message: Optional nested error message.
    parameters:
    - name: path
      in: path
      description: path relative to the object store root URL in the secret
      required: true
      schema:
        maxLength: 1024
        pattern: ^(([\w.-]+):([\w.-]+)|([\w.-]+))(/([\w./-]+[\w.-]+)?)?$
        type: string
        format: path
    - name: AI-Resource-Group
      in: header
      description: Specify a resource group id
      required: false
      schema:
        type: string
  /admin/objectStoreSecrets:
    get:
      tags:
      - Object Store Secret
      summary: Get a list of metadata of available secrets.
      description: |
        Retrieve a list of metadata of the stored secrets.
      operationId: kubesubmit.v4.object_store_secrets.query
      parameters:
      - name: $top
        in: query
        description: Number of results to display
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $skip
        in: query
        description: Number of results to be skipped from the ordered list of results
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $count
        in: query
        description: When the $count field is set to false, the response contains a count of the items present in the response. When the $count field is set to true, the response contains a count of all the items present on the server, and not just the ones in the response. When the $count field is not passed, it is false by default.
        required: false
        schema:
          type: boolean
        example: true
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      - name: AI-Resource-Group
        in: header
        description: Specify an existing resource group id to use. Uses "default" if value not provided.
        required: false
        schema:
          type: string
          default: default
      responses:
        '200':
          description: The request was successful and the requested metadata for the secret will be returned. This includes a list of attributes of the stored secret like - creationTimestamp, namespace etc. The secret's data field is not returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objectStoreSecretStatusResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Object Store Secret
      summary: Create a secret
      description: |
        Create a secret based on the configuration in the request body
      operationId: kubesubmit.v4.object_store_secrets.create
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      - name: AI-Resource-Group
        in: header
        description: Specify an existing resource group id to use. Uses "default" if value not provided.
        required: false
        schema:
          type: string
          default: default
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/objectStoreSecretWithSensitiveDataRequestForPostCall'
        required: true
      responses:
        '202':
          description: |
            The request to create a k8s secret based on the given configuration has been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objectStoreSecretCreationResponse'
        '400':
          description: |
            One of the following failure cases has occurred: <ul> <li> Neither JSON nor YAML was able to be parsed. <li> The request was invalidly formatted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/objectStoreSecrets/{objectStoreName}:
    get:
      tags:
      - Object Store Secret
      summary: Returns the of metadata of secrets which match the query parameter.
      description: "This retrieves the metadata of the stored secret which match the parameter objectStoreName. \nThe fetched secret is constructed like objectStoreName-object-store-secret \nThe base64 encoded field for the stored secret is not returned.\n"
      operationId: kubesubmit.v4.object_store_secrets.get
      responses:
        '200':
          description: The request was processed successfully and the metadata of the of stored secrets wil be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objectStoreSecretStatus'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Object Store Secret
      summary: Delete object store secret
      description: Delete a secret with the name of objectStoreName if it exists.
      operationId: kubesubmit.v4.object_store_secrets.delete
      responses:
        '202':
          description: The request to delete the secret has been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objectStoreSecretDeletionResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Object Store Secret
      summary: Update object store secret
      description: |
        Update a secret with name of objectStoreName if it exists.
      operationId: kubesubmit.v4.object_store_secrets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/objectStoreSecretWithSensitiveDataRequest'
        required: true
      responses:
        '202':
          description: |
            The request to update the secret based on the given configuration has been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objectStoreSecretModificationResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: objectStoreName
      in: path
      description: Name of the object store for the secret.
      required: true
      schema:
        pattern: ^[a-zA-Z0-9\.\-_]+$
        type: string
      example: My_objectStore
    - name: Authorization
      in: header
      description: Authorization bearer token containing a JWT token.
      required: false
      schema:
        type: string
    - name: AI-Resource-Group
      in: header
      description: Specify an existing resource group id to use. Uses "default" if value not provided.
      required: false
      schema:
        type: string
        default: default
  /admin/secrets:
    get:
      tags:
      - Secret
      summary: Lists all secrets corresponding to tenant
      description: Lists all secrets corresponding to tenant. This retrieves metadata only, not the secret data itself.
      operationId: kubesubmit.v4.generic_secrets.get
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      - name: $top
        in: query
        description: Number of results to display
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $skip
        in: query
        description: Number of results to be skipped from the ordered list of results
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $count
        in: query
        description: When the $count field is set to false, the response contains a count of the items present in the response. When the $count field is set to true, the response contains a count of all the items present on the server, and not just the ones in the response. When the $count field is not passed, it is false by default.
        required: false
        schema:
          type: boolean
        example: true
      - name: AI-Resource-Group
        in: header
        description: Specify an existing resource group id to use
        required: false
        schema:
          type: string
      - name: AI-Tenant-Scope
        in: header
        description: Specify whether the main tenant scope is to be used
        required: false
        schema:
          type: boolean
        example: true
      responses:
        '200':
          description: The secrets were fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGenericSecretsResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Secret
      summary: Create a new generic secret
      description: Create a new generic secret in the corresponding resource group or at main tenant level.
      operationId: kubesubmit.v4.generic_secrets.create
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      - name: AI-Resource-Group
        in: header
        description: Specify an existing resource group id to use
        required: false
        schema:
          type: string
      - name: AI-Tenant-Scope
        in: header
        description: Specify whether the main tenant scope is to be used
        required: false
        schema:
          type: boolean
        example: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericSecretPostBody'
        required: true
      responses:
        '200':
          description: Secret has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSecretDataResponse'
              example:
                message: secret has been created
                name: my-generic-secret
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/secrets/{secretName}:
    delete:
      tags:
      - Secret
      summary: Deletes the secret
      description: Deletes the secret from provided resource group namespace
      operationId: kubesubmit.v4.generic_secrets.delete
      responses:
        '200':
          description: The secret has been removed
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Secret
      summary: Update secret credentials
      description: Update secret credentials. Replace secret data with the provided data.
      operationId: kubesubmit.v4.generic_secrets.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericSecretPatchBody'
        required: true
      responses:
        '200':
          description: The secret has been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSecretDataResponse'
              example:
                message: The secret has been modified
                name: my-generic-secret
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: Authorization
      in: header
      description: Authorization bearer token containing a JWT token.
      required: false
      schema:
        type: string
    - name: secretName
      in: path
      required: true
      schema:
        maxLength: 252
        minLength: 1
        pattern: ^[a-z0-9\-\.]+$
        type: string
    - name: AI-Resource-Group
      in: header
      description: Specify an existing resource group id to use
      required: false
      schema:
        type: string
    - name: AI-Tenant-Scope
      in: header
      description: Specify whether the main tenant scope is to be used
      required: false
      schema:
        type: boolean
      example: true
  /admin/resourceGroups:
    get:
      tags:
      - Resource Group
      summary: Gets all resource groups of a given tenant
      description: |
        Retrieve a list of resource groups for a given tenant.
      operationId: kubesubmit.v4.resourcegroups.get_all
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      - name: $top
        in: query
        description: Number of results to display
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $skip
        in: query
        description: Number of results to be skipped from the ordered list of results
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $count
        in: query
        description: When the $count field is set to false, the response contains a count of the items present in the response. When the $count field is set to true, the response contains a count of all the items present on the server, and not just the ones in the response. When the $count field is not passed, it is false by default.
        required: false
        schema:
          type: boolean
        example: true
      - name: Prefer
        in: header
        description: |
          <p> One can use the HTTP Prefer header to configure the "maxpagesize" of this endpoint. "maxpagesize" is the maximum number of resourcegroups to return for a request to this endpoint. If more resourcegroups exist, the response will include a "Link" HTTP header. This header will include the URL for getting the next batch of resourcegroups.
          <p> The "maxpagesize" preference and the "continueToken" parameter together enable splitting a large list of resourcegroups to small chunks. This feature can help to reduce the response time of a single list-resourcegroup request when the client has a large number resourcegroups in the system.
          <p> By default, the "maxpagesize" is not set, which means retrieving all resourcegroups in a single request.
          <p> Setting a maxpagesize may return fewer than the requested amount of resourcegroups (up to zero) in the event all requested resourcegroups are filtered out. The client should only use the presence of the Link header in the response to determine whether more resourcegroups are available. If "maxpagesize" is specified and the response does not include a Link header, the client may assume that no more resourcegroups are available.
        required: false
        schema:
          type: string
      - name: continueToken
        in: query
        description: |
          <p> A token for getting more resourcegroups from the service. It is encoded in the URL returned via a "Link" HTTP header of a response of this endpoint if the original request specified "maxpagesize" in a "Prefer" HTTP header and the number of available resourcegroups is larger than the number specified by "maxpagesize". Do <b>NOT</b> use the "continueToken" parameter in other scenarios.
          <p> The server may reject a continue token that it does not recognize. If the specified continue token is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error. In this case, the client must restart their list request without the continue token.
        required: false
        schema:
          type: string
      - name: labelSelector
        in: query
        description: |
          filter by labels. Pass in pairs in the form of 'key=value' and / or 'key!=value' separated by commas and the result will be filtered to only those scenarios containing and / or not containing all given key/values
        required: false
        style: form
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            pattern: ^[^ =,!]+!?=[^ =,!]+$
            type: string
        example: key1=value1,key2!=value2
      responses:
        '200':
          description: A list of resource groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupList'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Resource Group
      summary: Creates a resource group
      description: |
        Create resource group to a given main tenant. The length of resource group id must be between 3 and 253.
      operationId: kubesubmit.v4.resourcegroups.create
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupsPostRequest'
        required: true
      responses:
        '202':
          description: A resource group base object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupBase'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/resourceGroups/{resourceGroupId}:
    get:
      tags:
      - Resource Group
      summary: Get a resource group
      description: |
        Get a resource group of a given main tenant.
      operationId: kubesubmit.v4.resourcegroups.get
      responses:
        '200':
          description: A resource group object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroup'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Resource Group
      summary: Delete a resource group
      description: |
        Delete a resource group of a given main tenant.
      operationId: kubesubmit.v4.resourcegroups.delete
      responses:
        '202':
          description: The deletion of the resource group has been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupDeletionResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Resource Group
      summary: Change some characteristics of the resource group
      description: |
        Replace some characteristics of the resource group, for instance labels.
      operationId: kubesubmit.v4.resourcegroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupPatchRequest'
        required: true
      responses:
        '202':
          description: Resource group changes accepted.
          headers:
            Location:
              description: URL of the scheduled deployment
              schema:
                $ref: '#/components/schemas/Url'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: resourceGroupId
      in: path
      description: Resource group identifier
      required: true
      schema:
        maxLength: 253
        minLength: 3
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9.-]{1,251}[a-zA-Z0-9]$
        type: string
      example: my-test-rg
    - name: Authorization
      in: header
      description: Authorization bearer token containing a JWT token.
      required: false
      schema:
        type: string
  /admin/resources/nodes:
    get:
      tags:
      - Resource
      summary: Get node request status corresponding to tenant
      description: Lists all hot spare nodes, used nodes and total nodes corresponding to tenant.
      operationId: kubesubmit.v4.resources.get
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Reserved resource status were fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGetResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Resource
      summary: Set reserved resources corresponding to tenant
      description: Set hot spare nodes corresponding to tenant at main tenant level.
      operationId: kubesubmit.v4.resources.patch
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatchBody'
        required: true
      responses:
        '200':
          description: Reserved resource has been set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePatchResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /lm/executions/{executionId}/logs:
    get:
      tags:
      - Execution
      summary: Get logs of specific execution
      description: Retrieve logs of an execution for getting insight into the execution results or failures.
      operationId: kubesubmit.v4.executions.get_logs
      parameters:
      - name: executionId
        in: path
        description: Execution identifier
        required: true
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      - name: $top
        in: query
        description: The max number of entries to return. Defaults to 1000. Limited to 5000 max.
        required: false
        schema:
          maximum: 5000
          minimum: 1
          type: integer
          default: 1000
        examples:
          min:
            summary: Min number of entries to return
            value: 1
          max:
            summary: Max number of entries to return
            value: 5000
          default:
            summary: default number of entries to return
            value: 1000
      - name: start
        in: query
        description: The start time for the query as a RFC 3339 datetime format. Defaults to one hour ago. + in timezone need to be encoded to %2B.
        required: false
        schema:
          type: string
          format: date-time
        examples:
          zulu:
            summary: Datetime example use Z as timezone
            value: '2021-05-19T00:00:14.347000Z'
          utc:
            summary: Datetime example use +00:00 as timezone, where + is encoded to %2B
            value: 2021-05-19T00:00:14.347%2B00:00
          local-plus:
            summary: Datetime example use +08:00 as timezone, where + is encoded to %2B
            value: 2021-05-19T08:00:14.347%2B08:00
          local-minus:
            summary: Datetime example use -08:00 as timezone
            value: '2021-05-18T16:00:14.347000-08:00'
      - name: end
        in: query
        description: The end time for the query as a RFC 3339 datetime format. Defaults to now. + in timezone need to be encoded to %2B.
        required: false
        schema:
          type: string
          format: date-time
        examples:
          zulu:
            summary: Datetime example use Z as timezone
            value: '2021-05-19T01:00:14.347000Z'
          utc:
            summary: Datetime example use +00:00 as timezone, where + is encoded to %2B
            value: 2021-05-19T01:00:14.347%2B00:00
          local-plus:
            summary: Datetime example use +08:00 as timezone, where + is encoded to %2B
            value: 2021-05-19T09:00:14.347%2B08:00
          local-minus:
            summary: Datetime example use -08:00 as timezone
            value: '2021-05-18T17:00:14.347000-08:00'
      - name: $order
        in: query
        description: |
          Determines the sort order. Supported values are asc or desc. Defaults to asc. Sort order:
            * `asc` - Ascending, earliest in the order will appear at the top of the list
            * `desc` - Descending, last in the order will appear at the top of the list
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
        examples:
          asc:
            summary: Sort the results in ascending order
            value: asc
          desc:
            summary: Sort the results in descending order
            value: desc
      responses:
        '200':
          description: The query was processed successfully and logs of the requested execution will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogCommonResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Lacks valid authentication credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /lm/deployments/{deploymentId}/logs:
    get:
      tags:
      - Deployment
      summary: Get logs of specific deployment
      description: Retrieve logs of a deployment for getting insight into the deployment results or failures.
      operationId: kubesubmit.v4.deployments.get_logs
      parameters:
      - name: deploymentId
        in: path
        description: Deployment identifier
        required: true
        schema:
          pattern: ^[\w.-]{4,64}$
          type: string
        example: aa97b177-9383-4934-8543-0f91a7a0283a
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      - name: $top
        in: query
        description: The max number of entries to return. Defaults to 1000. Limited to 5000 max.
        required: false
        schema:
          maximum: 5000
          minimum: 1
          type: integer
          default: 1000
        examples:
          min:
            summary: Min number of entries to return
            value: 1
          max:
            summary: Max number of entries to return
            value: 5000
          default:
            summary: default number of entries to return
            value: 1000
      - name: start
        in: query
        description: The start time for the query as a RFC 3339 datetime format. Defaults to one hour ago. + in timezone need to be encoded to %2B.
        required: false
        schema:
          type: string
          format: date-time
        examples:
          zulu:
            summary: Datetime example use Z as timezone
            value: '2021-05-19T00:00:14.347000Z'
          utc:
            summary: Datetime example use +00:00 as timezone, where + is encoded to %2B
            value: 2021-05-19T00:00:14.347%2B00:00
          local-plus:
            summary: Datetime example use +08:00 as timezone, where + is encoded to %2B
            value: 2021-05-19T08:00:14.347%2B08:00
          local-minus:
            summary: Datetime example use -08:00 as timezone
            value: '2021-05-18T16:00:14.347000-08:00'
      - name: end
        in: query
        description: The end time for the query as a RFC 3339 datetime format. Defaults to now. + in timezone need to be encoded to %2B.
        required: false
        schema:
          type: string
          format: date-time
        examples:
          zulu:
            summary: Datetime example use Z as timezone
            value: '2021-05-19T01:00:14.347000Z'
          utc:
            summary: Datetime example use +00:00 as timezone, where + is encoded to %2B
            value: 2021-05-19T01:00:14.347%2B00:00
          local-plus:
            summary: Datetime example use +08:00 as timezone, where + is encoded to %2B
            value: 2021-05-19T09:00:14.347%2B08:00
          local-minus:
            summary: Datetime example use -08:00 as timezone
            value: '2021-05-18T17:00:14.347000-08:00'
      - name: $order
        in: query
        description: |
          Determines the sort order. Supported values are asc or desc. Defaults to asc. Sort order:
            * `asc` - Ascending, earliest in the order will appear at the top of the list
            * `desc` - Descending, last in the order will appear at the top of the list
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
        examples:
          asc:
            summary: Sort the results in ascending order
            value: asc
          desc:
            summary: Sort the results in descending order
            value: desc
      responses:
        '200':
          description: The query was processed successfully and logs of the requested deployment will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogCommonResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Lacks valid authentication credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/repositories:
    get:
      tags:
      - Repository
      summary: List all GitOps repositories for a tenant
      description: Retrieve a list of all GitOps repositories for a tenant.
      operationId: kubesubmit.v4.repositories.get_all
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      - name: $top
        in: query
        description: Number of results to display
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $skip
        in: query
        description: Number of results to be skipped from the ordered list of results
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $count
        in: query
        description: When the $count field is set to false, the response contains a count of the items present in the response. When the $count field is set to true, the response contains a count of all the items present on the server, and not just the ones in the response. When the $count field is not passed, it is false by default.
        required: false
        schema:
          type: boolean
        example: true
      responses:
        '200':
          description: Returns a list of all GitOps repositories for the tenant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgoCDRepositoryDataResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Repository
      summary: On-board a new GitOps repository
      description: On-board a new GitOps repository as specified in the content payload
      operationId: kubesubmit.v4.repositories.create
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArgoCDRepositoryData'
        required: true
      responses:
        '200':
          description: The repository has been on-boarded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgoCDRepositoryCreationResponse'
        '409':
          description: The provided repository already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/repositories/{repositoryName}:
    get:
      tags:
      - Repository
      summary: Get the access details for a repository
      description: Retrieve the access details for a repository if it exists.
      operationId: kubesubmit.v4.repositories.get
      responses:
        '200':
          description: The repository details have been found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgoCDRepositoryDetails'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Repository
      summary: Off-board a repository.
      description: Remove a repository from GitOps.
      operationId: kubesubmit.v4.repositories.delete
      responses:
        '200':
          description: The repository has been off-boarded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgoCDRepositoryDeletionResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Repository
      summary: Update the repository credentials.
      description: |
        Update the referenced repository credentials to synchronize a repository.
      operationId: kubesubmit.v4.repositories.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArgoCDRepositoryCredentials'
        required: true
      responses:
        '200':
          description: The repository credentials have been updated and will eventually be synced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgoCDRepositoryModificationResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: repositoryName
      in: path
      description: Name of the repository
      required: true
      schema:
        maxLength: 51
        minLength: 1
        pattern: ^[a-z0-9\-]+$
        type: string
      example: tenant-application
    - name: Authorization
      in: header
      description: Authorization bearer token containing a JWT token.
      required: false
      schema:
        type: string
  /admin/applications:
    get:
      tags:
      - Application
      summary: Return all applications
      description: |
        Return all Argo CD application data objects.
      operationId: kubesubmit.v4.applications.get_all
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      - name: $top
        in: query
        description: Number of results to display
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $skip
        in: query
        description: Number of results to be skipped from the ordered list of results
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $count
        in: query
        description: When the $count field is set to false, the response contains a count of the items present in the response. When the $count field is set to true, the response contains a count of all the items present on the server, and not just the ones in the response. When the $count field is not passed, it is false by default.
        required: false
        schema:
          type: boolean
        example: true
      responses:
        '200':
          description: All applications have been found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllArgoCDApplicationData'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Application
      summary: Create an application
      description: |
        Create an ArgoCD application to synchronise a repository.
      operationId: kubesubmit.v4.applications.create
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        '200':
          description: The ArgoCD application has been created and will be eventually synchronised with the repository.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgoCDApplicationCreationResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/applications/{applicationName}/status:
    get:
      tags:
      - Application
      summary: Returns the ArgoCD application status
      description: |
        Returns the ArgoCD application health and sync status.
      operationId: kubesubmit.v4.applications.get_status
      responses:
        '200':
          description: The application status has been found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgoCDApplicationStatus'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: applicationName
      in: path
      description: Name of the ArgoCD application
      required: true
      schema:
        maxLength: 54
        minLength: 3
        pattern: ^[a-z0-9\-]+$
        type: string
      example: tenant-application
    - name: Authorization
      in: header
      description: Authorization bearer token containing a JWT token.
      required: false
      schema:
        type: string
  /admin/applications/{applicationName}:
    get:
      tags:
      - Application
      summary: Get ArgoCD application
      description: |
        Retrieve the ArgoCD application details.
      operationId: kubesubmit.v4.applications.get
      responses:
        '200':
          description: The application has been found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgoCDApplicationData'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Application
      summary: Delete application
      description: Delete an ArgoCD application
      operationId: kubesubmit.v4.applications.delete
      responses:
        '200':
          description: The argoCD application has been deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgoCDApplicationDeletionResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Application
      summary: Update the ArgoCD application.
      description: |
        Update the referenced ArgoCD application to synchronize the repository.
      operationId: kubesubmit.v4.applications.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArgoCDApplicationBaseData'
        required: true
      responses:
        '200':
          description: The ArgoCD application has been created and will be eventually synchronised with the repository.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgoCDApplicationModificationResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: applicationName
      in: path
      description: Name of the ArgoCD application
      required: true
      schema:
        maxLength: 54
        minLength: 3
        pattern: ^[a-z0-9\-]+$
        type: string
      example: tenant-application
    - name: Authorization
      in: header
      description: Authorization bearer token containing a JWT token.
      required: false
      schema:
        type: string
  /admin/applications/{applicationName}/refresh:
    post:
      tags:
      - Application
      summary: Makes ArgoDC refresh the specified application
      description: |
        Schedules a refresh of the specified application that will be picked up by ArgoCD asynchronously
      operationId: kubesubmit.v4.applications.refresh
      responses:
        '202':
          description: A refresh of the application has been scheduled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgoCDApplicationRefreshResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: applicationName
      in: path
      description: Name of the ArgoCD application
      required: true
      schema:
        maxLength: 54
        minLength: 3
        pattern: ^[a-z0-9\-]+$
        type: string
      example: tenant-application
    - name: Authorization
      in: header
      description: Authorization bearer token containing a JWT token.
      required: false
      schema:
        type: string
  /admin/dockerRegistrySecrets/{dockerRegistryName}:
    get:
      tags:
      - Docker Registry Secret
      summary: Returns the of metadata of secrets which match the query parameter.
      description: |
        Retrieve the stored secret metadata which matches the parameter dockerRegistryName. The base64 encoded field for the stored secret is not returned.
      operationId: kubesubmit.v4.docker_registry_secrets.get
      responses:
        '200':
          description: The request was processed successfully and the metadata of the of stored secrets wil be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dockerRegistrySecretStatus'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - Docker Registry Secret
      summary: Delete docker registry secret
      description: Delete a secret with the name of dockerRegistryName if it exists.
      operationId: kubesubmit.v4.docker_registry_secrets.delete
      responses:
        '202':
          description: The request to delete the secret has been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dockerRegistrySecretDeletionResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
      - Docker Registry Secret
      summary: Update a secret
      description: |
        Update a secret with name of dockerRegistryName if it exists.
      operationId: kubesubmit.v4.docker_registry_secrets.patch
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/dockerRegistrySecretWithSensitiveDataRequest'
        required: true
      responses:
        '202':
          description: |
            The request to update the secret based on the the given configuration has been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dockerRegistrySecretModificationResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: dockerRegistryName
      in: path
      description: Name of the docker Registry store for the secret.
      required: true
      schema:
        maxLength: 63
        pattern: ^[a-z0-9](?:_?[a-z0-9\.\-]+)*[a-z0-9]$
        type: string
      example: mydockeregistry
    - name: Authorization
      in: header
      description: Authorization bearer token containing a JWT token.
      required: false
      schema:
        type: string
  /admin/dockerRegistrySecrets:
    get:
      tags:
      - Docker Registry Secret
      summary: Get a list of metadata of secrets.
      description: |
        Retrieve a list of metadata of the stored secrets
      operationId: kubesubmit.v4.docker_registry_secrets.query
      parameters:
      - name: $top
        in: query
        description: Number of results to display
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $skip
        in: query
        description: Number of results to be skipped from the ordered list of results
        required: false
        schema:
          minimum: 0
          type: integer
        example: 10
      - name: $count
        in: query
        description: When the $count field is set to false, the response contains a count of the items present in the response. When the $count field is set to true, the response contains a count of all the items present on the server, and not just the ones in the response. When the $count field is not passed, it is false by default.
        required: false
        schema:
          type: boolean
        example: true
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: The request was successful and the requested metadata for the secret will be returned. This includes a list of attributes of the stored secret like - creationTimestamp, namespace etc. The secret's data field is not returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dockerRegistrySecretStatusResponse'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Docker Registry Secret
      summary: Create a secret
      description: |
        Create a secret based on the configuration in the request body.
      operationId: kubesubmit.v4.docker_registry_secrets.create
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
        required: true
      responses:
        '202':
          description: |
            The request to create a k8s secret based on the given configuration has been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dockerRegistrySecretCreationResponse'
        '400':
          description: |
            One of the following failure cases has occurred: <ul> <li> Neither JSON nor YAML was able to be parsed. <li> The request was invalidly formatted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/services:
    get:
      tags:
      - Service
      summary: Gets all services of a given main tenant
      description: |
        Retrieve a list of services for a given main tenant.
      operationId: kubesubmit.v4.aiservices.get_all
      parameters:
      - name: Authorization
        in: header
        description: Authorization bearer token containing a JWT token.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: A list of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceList'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/services/{ServiceName}:
    get:
      tags:
      - Service
      summary: Get a service
      description: |
        Get an service of a given main tenant.
      operationId: kubesubmit.v4.aiservices.get
      responses:
        '200':
          description: A service object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedService'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: HTTP status codes 401, 403 or 500. Response body contains further details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
    - name: Authorization
      in: header
      description: Authorization bearer token containing a JWT token.
      required: false
      schema:
        type: string
    - name: ServiceName
      in: path
      description: Name of the Service
      required: true
      schema:
        maxLength: 32
        minLength: 1
        pattern: ^[a-zA-Z0-9\-_]+$
        type: string
      example: cashapp
components:
  schemas:
    Url:
      type: string
      format: url
      example: https://download.example.com/test/file.bin
    ApiErrorWithId:
      required:
      - error
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        error:
          $ref: '#/components/schemas/ApiError'
    ArtifactList:
      type: object
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            $ref: '#/components/schemas/ArtifactArray'
    ResourceList:
      required:
      - count
      - resources
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            type: object
    ArtifactArray:
      type: array
      items:
        $ref: '#/components/schemas/Artifact'
    Artifact:
      description: Artifact
      allOf:
      - $ref: '#/components/schemas/ArtifactBaseData'
      - $ref: '#/components/schemas/ArtifactDetailData'
      - $ref: '#/components/schemas/CreationData'
      - $ref: '#/components/schemas/ModificationData'
      - $ref: '#/components/schemas/ExpandedScenario'
    ArtifactBaseData:
      allOf:
      - $ref: '#/components/schemas/Labeled'
      - required:
        - kind
        - name
        - url
        type: object
        properties:
          name:
            $ref: '#/components/schemas/ArtifactName'
          kind:
            type: string
            description: Kind of the artifact, i.e. model or dataset
            enum:
            - model
            - dataset
            - resultset
            - other
          url:
            $ref: '#/components/schemas/ArtifactUrl'
          description:
            $ref: '#/components/schemas/ArtifactDescription'
        description: |
          Base data of the artifact; this is the data that can be provided when the artifact is created; `name` and `kind` are required because they constitute important semantic filtering criteria for use in training / inference executables (`name` is a semantic handle of the artifact within a scenario and `kind` specifies the type of usage, e.g. you would only want to allow models in the model operator).
    Labeled:
      type: object
      properties:
        labels:
          $ref: '#/components/schemas/LabelList'
    LabelList:
      type: array
      description: Arbitrary labels as meta information
      items:
        $ref: '#/components/schemas/Label'
    Label:
      required:
      - key
      - value
      type: object
      properties:
        key:
          $ref: '#/components/schemas/LabelKey'
        value:
          $ref: '#/components/schemas/LabelValue'
    LabelKey:
      maxLength: 256
      pattern: ^ext\.ai\.sap\.com\/[\w\.-]+$
      type: string
      example: ext.ai.sap.com/s4hana-version
    LabelValue:
      maxLength: 5000
      type: string
    ArtifactName:
      allOf:
      - $ref: '#/components/schemas/GenericName'
      - description: Name of the artifact
    GenericName:
      allOf:
      - $ref: '#/components/schemas/GenericNaturalLanguageTerm'
      - maxLength: 256
    GenericNaturalLanguageTerm:
      pattern: ^[\w\s.!?,;:\[\](){}<>"'=+*/\\^&%@~$#|-]*$
      type: string
    ArtifactUrl:
      maxLength: 1024
      pattern: ([a-z0-9-]+):\/\/.+
      type: string
      description: |
        Reference to the location of the artifact.
      example: https://example.com/some_path
    ArtifactDescription:
      maxLength: 5000
      type: string
      description: Description of the artifact
    ArtifactDetailData:
      required:
      - id
      - scenarioId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ArtifactId'
        scenarioId:
          $ref: '#/components/schemas/ScenarioId'
        configurationId:
          $ref: '#/components/schemas/ConfigurationId'
        executionId:
          $ref: '#/components/schemas/ExecutionId'
    ArtifactId:
      allOf:
      - $ref: '#/components/schemas/Id'
      - description: ID of the artifact
    Id:
      pattern: ^[\w.-]{4,64}$
      type: string
      description: Generic ID
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    ScenarioId:
      allOf:
      - $ref: '#/components/schemas/Id'
      - description: ID of the scenario
    ConfigurationId:
      allOf:
      - $ref: '#/components/schemas/Id'
      - description: ID of the configuration
    ExecutionId:
      allOf:
      - $ref: '#/components/schemas/Id'
      - description: ID of the execution
    CreationData:
      required:
      - createdAt
      type: object
      properties:
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
    ModificationData:
      required:
      - modifiedAt
      type: object
      properties:
        modifiedAt:
          type: string
          description: Timestamp of latest resource modification
          format: date-time
    ExpandedScenario:
      properties:
        scenario:
          type: object
          nullable: true
          anyOf:
          - $ref: '#/components/schemas/Scenario'
          - {}
    Scenario:
      type: object
      description: |
        An ML Scenario consists of a number of executables. E.g., there can be one or several training executables, an inference (deployment) executable. An ML Scenario is versioned.
      allOf:
      - $ref: '#/components/schemas/ScenarioBaseData'
      - $ref: '#/components/schemas/ScenarioDetailData'
      - $ref: '#/components/schemas/CreationData'
      - $ref: '#/components/schemas/ModificationData'
    ScenarioBaseData:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 256
          type: string
          description: Name of the scenario
        description:
          maxLength: 5000
          type: string
          description: Description of the scenario
        labels:
          $ref: '#/components/schemas/ScenarioLabelList'
    ScenarioLabelList:
      type: array
      description: Arbitrary labels as meta information
      items:
        $ref: '#/components/schemas/ScenarioLabel'
    ScenarioLabel:
      required:
      - key
      - value
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ScenarioLabelKey'
        value:
          $ref: '#/components/schemas/LabelValue'
    ScenarioLabelKey:
      maxLength: 256
      pattern: ^(scenarios|ext)\.ai\.sap\.com\/[\w\.-]+$
      type: string
      example: scenarios.ai.sap.com/s4hana-version
    ScenarioDetailData:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ScenarioId'
    ArtifactCreationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse'
      - required:
        - url
        type: object
        properties:
          url:
            $ref: '#/components/schemas/ArtifactUrl'
          message:
            $ref: '#/components/schemas/ArtifactCreationResponseMessage'
    CreationResponse:
      required:
      - id
      - message
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        message:
          $ref: '#/components/schemas/CreationResponseMessage'
    CreationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - example: Created
    Message:
      type: string
      description: Message
    ArtifactCreationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Artifact acknowledged
    ArtifactPostData:
      allOf:
      - $ref: '#/components/schemas/ArtifactBaseData'
      - required:
        - scenarioId
        type: object
        properties:
          scenarioId:
            $ref: '#/components/schemas/ScenarioId'
    ApiError:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: Descriptive error code (not http status code)
        message:
          type: string
          description: Plaintext error description
        requestId:
          type: string
          description: ID of the individual request
        target:
          type: string
          description: Invoked URL
        details:
          type: object
          description: Optional details of the error message
    ConfigurationList:
      type: object
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/Configuration'
    Configuration:
      allOf:
      - $ref: '#/components/schemas/ConfigurationBaseData'
      - $ref: '#/components/schemas/ConfigurationDetailData'
      - $ref: '#/components/schemas/CreationData'
      - $ref: '#/components/schemas/ExpandedScenario'
    ConfigurationBaseData:
      required:
      - executableId
      - name
      - scenarioId
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ConfigurationName'
        executableId:
          $ref: '#/components/schemas/ExecutableId'
        scenarioId:
          $ref: '#/components/schemas/ScenarioId'
        parameterBindings:
          $ref: '#/components/schemas/ParameterArgumentBindingList'
        inputArtifactBindings:
          $ref: '#/components/schemas/ArtifactArgumentBindingList'
    ConfigurationName:
      allOf:
      - $ref: '#/components/schemas/GenericName'
      - description: Name of the configuration
    ExecutableId:
      allOf:
      - $ref: '#/components/schemas/Id'
      - description: ID of the executable
    ParameterArgumentBindingList:
      maxItems: 1000
      type: array
      items:
        $ref: '#/components/schemas/ParameterArgumentBinding'
    ParameterArgumentBinding:
      required:
      - key
      - value
      type: object
      properties:
        key:
          maxLength: 256
          type: string
        value:
          maxLength: 5000
          type: string
      description: |
        Required for execution
        Result of activation
    ArtifactArgumentBindingList:
      maxItems: 1000
      type: array
      items:
        $ref: '#/components/schemas/ArtifactArgumentBinding'
    ArtifactArgumentBinding:
      required:
      - artifactId
      - key
      type: object
      properties:
        key:
          maxLength: 256
          type: string
        artifactId:
          $ref: '#/components/schemas/ArtifactId'
      description: |
        Required for execution
        Result of activation
    ConfigurationDetailData:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConfigurationId'
    ConfigurationCreationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ConfigurationCreationResponseMessage'
    ConfigurationCreationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Configuration created
    DeploymentCreationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse'
      - type: object
        properties:
          deploymentUrl:
            $ref: '#/components/schemas/DeploymentUrl'
          status:
            $ref: '#/components/schemas/ExecutionStatus'
          message:
            $ref: '#/components/schemas/DeploymentCreationResponseMessage'
          ttl:
            $ref: '#/components/schemas/DeploymentTimeToLive'
    DeploymentUrl:
      type: string
      description: Consumption URL of the deployment
      format: url
    ExecutionStatus:
      allOf:
      - $ref: '#/components/schemas/Status'
      - description: Execution status
    Status:
      type: string
      description: Status
      example: COMPLETED
      enum:
      - PENDING
      - RUNNING
      - COMPLETED
      - DEAD
      - STOPPING
      - STOPPED
      - UNKNOWN
    DeploymentCreationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Deployment scheduled
    DeploymentTimeToLive:
      pattern: ^[0-9]+[m,M,h,H,d,D]$
      type: string
      description: Time to live for a deployment. Its value can be either null or a number followed by the unit (any of following values, minutes(m|M), hours(h|H) or days(d|D))
      nullable: true
      example: 24H
    ExecutionCreationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse'
      - type: object
        properties:
          status:
            $ref: '#/components/schemas/ExecutionStatus'
          message:
            $ref: '#/components/schemas/ExecutionCreationResponseMessage'
    ExecutionCreationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Execution scheduled
    DeploymentList:
      type: object
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/Deployment'
    Deployment:
      allOf:
      - $ref: '#/components/schemas/DeploymentDetailData'
      - $ref: '#/components/schemas/CreationData'
      - $ref: '#/components/schemas/ModificationData'
      - $ref: '#/components/schemas/StatusTransitionTime'
    DeploymentDetailData:
      required:
      - configurationId
      - id
      - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DeploymentId'
        deploymentUrl:
          $ref: '#/components/schemas/DeploymentUrl'
        configurationId:
          $ref: '#/components/schemas/ConfigurationId'
        configurationName:
          $ref: '#/components/schemas/ConfigurationName'
        scenarioId:
          $ref: '#/components/schemas/ScenarioId'
        status:
          $ref: '#/components/schemas/DeploymentStatus'
        statusMessage:
          $ref: '#/components/schemas/DeploymentStatusMessage'
        targetStatus:
          type: string
          description: Deployment target status
          enum:
          - RUNNING
          - STOPPED
          - DELETED
        lastOperation:
          type: string
          description: Last operation applied to this deployment.
          anyOf:
          - type: string
            enum:
            - CREATE
            - UPDATE
            - DELETE
            - CASCADE-UPDATE
          - {}
        latestRunningConfigurationId:
          allOf:
          - $ref: '#/components/schemas/ConfigurationId'
          - description: configurationId that was running before a PATCH operation has modified the configurationId of the deployment. This can be used for a manual rollback in case the new configurationId results in a DEAD deployment
        ttl:
          $ref: '#/components/schemas/DeploymentTimeToLive'
      description: Detailed data about a deployment
    DeploymentId:
      allOf:
      - $ref: '#/components/schemas/Id'
      - description: ID of the deployment
    DeploymentStatus:
      allOf:
      - $ref: '#/components/schemas/Status'
      - description: Deployment status
    DeploymentStatusMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - description: Deployment status message
      - maxLength: 256
    StatusTransitionTime:
      type: object
      properties:
        submissionTime:
          type: string
          description: Timestamp of job submitted
          format: date-time
        startTime:
          type: string
          description: Timestamp of job status changed to RUNNING
          format: date-time
        completionTime:
          type: string
          description: Timestamp of job status changed to COMPLETED/DEAD/STOPPED
          format: date-time
    DeploymentCreationRequest:
      type: object
      properties:
        ttl:
          $ref: '#/components/schemas/DeploymentTimeToLive'
      description: Time to live for deployment
      allOf:
      - $ref: '#/components/schemas/EnactmentCreationRequest'
    EnactmentCreationRequest:
      required:
      - configurationId
      type: object
      properties:
        configurationId:
          $ref: '#/components/schemas/ConfigurationId'
      description: Request object for creating an execution or an deployment
    DeploymentBulkModificationResponse:
      type: object
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentModificationResponseList'
      description: Response object with array of deployments
    DeploymentModificationResponseList:
      type: array
      items:
        oneOf:
        - $ref: '#/components/schemas/DeploymentModificationResponse'
        - $ref: '#/components/schemas/ApiErrorWithId'
    DeploymentBulkModificationRequest:
      type: object
      properties:
        deployments:
          $ref: '#/components/schemas/DeploymentModificationRequestList'
      description: Request object for changing the target status of multiple deployments
    DeploymentModificationRequestList:
      maxItems: 100
      minItems: 1
      uniqueItems: true
      type: array
      example:
      - id: aa97b177-9383-4934-8543-0f91a7a0283a
        targetStatus: STOPPED
      - id: qweq32131-qwee-1231-8543-0f91a7a2e2e
        targetStatus: DELETED
      items:
        $ref: '#/components/schemas/DeploymentModificationRequestWithIdentifier'
    DeploymentModificationRequestWithIdentifier:
      required:
      - id
      - targetStatus
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DeploymentId'
        targetStatus:
          type: string
          description: Deployment target status
          enum:
          - STOPPED
          - DELETED
      description: Request object for changing the target status of a deployment ( STOPPED and DELETED are supported)
    DeploymentResponseWithDetails:
      allOf:
      - $ref: '#/components/schemas/Deployment'
      - $ref: '#/components/schemas/DeploymentDetailProperties'
    DeploymentDetailProperties:
      type: object
      properties:
        statusDetails:
          $ref: '#/components/schemas/DeploymentStatusDetails'
        details:
          $ref: '#/components/schemas/DeploymentDetails'
      description: Detail properties of the deployment
    DeploymentStatusDetails:
      type: object
      description: Current status details of the deployment
    DeploymentDetails:
      type: object
      properties:
        scaling:
          $ref: '#/components/schemas/ScalingDetails'
        resources:
          $ref: '#/components/schemas/ResourcesDetails'
      description: |
        Detail information about a deployment (including predefined sections: `scaling` and `resources`).
        JSON String representation of this object is limited to 5000 characters
    ScalingDetails:
      type: object
      properties:
        backendDetails:
          $ref: '#/components/schemas/BackendDetails'
      description: Scaling details of a deployment
      example:
        backendDetails:
          predictor:
            minReplicas: 0
            maxReplicas: 2
            runningReplicas: 1
    BackendDetails:
      type: object
      description: backend-specific details of the deployment
    ResourcesDetails:
      type: object
      properties:
        backendDetails:
          $ref: '#/components/schemas/BackendDetails'
      description: Resources details of a deployment
      example:
        backendDetails:
          predictor:
            resourcePlan: starter
    DeploymentDeletionResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/DeploymentDeletionResponseMessage'
    DeploymentDeletionResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Deployment deletion scheduled
    DeploymentModificationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/DeploymentModificationResponseMessage'
    DeploymentModificationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Deployment modification scheduled
    DeploymentModificationRequest:
      type: object
      properties:
        targetStatus:
          $ref: '#/components/schemas/DeploymentTargetStatus'
        configurationId:
          $ref: '#/components/schemas/ConfigurationId'
      description: Request object for changing the target status of a deployment (currently only STOPPED is supported)
    DeploymentTargetStatus:
      allOf:
      - $ref: '#/components/schemas/Status'
      - type: string
        example: STOPPED
        enum:
        - STOPPED
    ExecutionList:
      type: object
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/Execution'
    Execution:
      allOf:
      - $ref: '#/components/schemas/ExecutionData'
      - $ref: '#/components/schemas/CreationData'
      - $ref: '#/components/schemas/ModificationData'
      - $ref: '#/components/schemas/StatusTransitionTime'
    ExecutionData:
      required:
      - configurationId
      - id
      - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ExecutionId'
        configurationId:
          $ref: '#/components/schemas/ConfigurationId'
        configurationName:
          $ref: '#/components/schemas/ConfigurationName'
        scenarioId:
          $ref: '#/components/schemas/ScenarioId'
        targetStatus:
          type: string
          description: Target status of the execution
          example: STOPPED
          enum:
          - COMPLETED
          - RUNNING
          - STOPPED
          - DELETED
        status:
          $ref: '#/components/schemas/ExecutionStatus'
        statusMessage:
          $ref: '#/components/schemas/ExecutionStatusMessage'
        outputArtifacts:
          $ref: '#/components/schemas/ArtifactArray'
        executionScheduleId:
          $ref: '#/components/schemas/ExecutionScheduleId'
      description: Execution that may generate artifacts
    ExecutionStatusMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - description: Execution status message
      - maxLength: 256
    ExecutionScheduleId:
      allOf:
      - $ref: '#/components/schemas/Id'
      - description: ID of the execution schedule
    ExecutionBulkModificationResponse:
      type: object
      properties:
        executions:
          $ref: '#/components/schemas/ExecutionModificationResponseList'
      description: Response object with array of executions and its status
    ExecutionModificationResponseList:
      type: array
      items:
        oneOf:
        - $ref: '#/components/schemas/ExecutionModificationResponse'
        - $ref: '#/components/schemas/ApiErrorWithId'
    ExecutionBulkModificationRequest:
      type: object
      properties:
        executions:
          $ref: '#/components/schemas/ExecutionModificationRequestList'
      description: Request object to change status of multiple executions
    ExecutionModificationRequestList:
      maxItems: 100
      minItems: 1
      uniqueItems: true
      type: array
      example:
      - id: aa97b177-9383-4934-8543-0f91a7a0283a
        targetStatus: STOPPED
      - id: qweq32131-qwee-1231-8543-0f91a7a2e2e
        targetStatus: DELETED
      items:
        $ref: '#/components/schemas/ExecutionModificationRequestWithIdentifier'
    ExecutionModificationRequestWithIdentifier:
      required:
      - id
      - targetStatus
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ExecutionId'
        targetStatus:
          type: string
          description: Desired target status of the execution (currently STOPPED and DELETED are supported)
          enum:
          - STOPPED
          - DELETED
      description: Request object for changing the target status of an execution (currently STOPPED and DELETED are supported)
    ExecutionResponseWithDetails:
      allOf:
      - $ref: '#/components/schemas/Execution'
      - type: object
        properties:
          statusDetails:
            $ref: '#/components/schemas/ExecutionStatusDetails'
    ExecutionStatusDetails:
      type: object
      description: Current status details of the execution
    ExecutionDeletionResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ExecutionDeletionResponseMessage'
    ExecutionDeletionResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Execution deletion scheduled
    ExecutionModificationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ExecutionModificationResponseMessage'
    ExecutionModificationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Execution modification scheduled
    ExecutionModificationRequest:
      required:
      - targetStatus
      type: object
      properties:
        targetStatus:
          type: string
          description: Desired target status of the execution (currently only STOPPED is supported)
          enum:
          - STOPPED
      description: Request object for changing the target status of an execution (currently only STOPPED is supported)
    ExecutionScheduleList:
      type: object
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/ExecutionSchedule'
    ExecutionSchedule:
      allOf:
      - $ref: '#/components/schemas/ExecutionScheduleData'
      - $ref: '#/components/schemas/CreationData'
      - $ref: '#/components/schemas/ModificationData'
    ExecutionScheduleData:
      allOf:
      - $ref: '#/components/schemas/ExecutionScheduleCreationData'
      - type: object
        properties:
          id:
            $ref: '#/components/schemas/ExecutionScheduleId'
          status:
            $ref: '#/components/schemas/ExecutionScheduleStatus'
        description: Data about execution schedule
    ExecutionScheduleCreationData:
      allOf:
      - required:
        - configurationId
        - cron
        - name
        type: object
        properties:
          cron:
            $ref: '#/components/schemas/Cron'
          name:
            maxLength: 256
            type: string
            description: Name of the execution schedule
          configurationId:
            $ref: '#/components/schemas/ConfigurationId'
        description: Data needed to create an execution schedule
      - $ref: '#/components/schemas/ScheduleStartEnd'
    Cron:
      type: string
      description: Cron defining the schedule to run the executions.
      example: 0 0 0 1 *
    ScheduleStartEnd:
      type: object
      properties:
        start:
          type: string
          description: Timestamp, defining when the executions should start running periodically, defaults to now
          format: date-time
        end:
          type: string
          description: Timestamp, defining when the executions should stop running
          format: date-time
      description: Start and end an execution schedule.
    ExecutionScheduleStatus:
      type: string
      description: Execution Schedule Status
      example: ACTIVE
      enum:
      - ACTIVE
      - INACTIVE
    ExecutionScheduleCreationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ExecutionScheduleCreationResponseMessage'
    ExecutionScheduleCreationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Execution Schedule created
    ExecutionScheduleDeletionResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ExecutionScheduleDeletionResponseMessage'
    ExecutionScheduleDeletionResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Execution Schedule deleted
    ExecutionScheduleModificationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ExecutionScheduleModificationResponseMessage'
    ExecutionScheduleModificationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Execution Schedule modified
    ExecutionScheduleModificationRequest:
      allOf:
      - $ref: '#/components/schemas/Schedule'
      - type: object
        properties:
          configurationId:
            $ref: '#/components/schemas/ConfigurationId'
          status:
            $ref: '#/components/schemas/ExecutionScheduleStatus'
        description: Request object for changing the execution schedule
    Schedule:
      allOf:
      - type: object
        properties:
          cron:
            $ref: '#/components/schemas/Cron'
        description: Schedule of an execution schedule.
      - $ref: '#/components/schemas/ScheduleStartEnd'
    ScenarioList:
      type: object
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/Scenario'
    ExecutableList:
      type: object
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/Executable'
    Executable:
      description: |
        An ML executable consists of a set of ML tasks, flows between tasks, dependencies between tasks, models (or model versions?).
      allOf:
      - $ref: '#/components/schemas/ExecutableBaseData'
      - $ref: '#/components/schemas/ExecutableDetailData'
      - $ref: '#/components/schemas/CreationData'
      - $ref: '#/components/schemas/ModificationData'
    ExecutableBaseData:
      allOf:
      - $ref: '#/components/schemas/Labeled'
      - required:
        - name
        type: object
        properties:
          name:
            type: string
            description: Name of the executable
          description:
            type: string
            description: Description of the executable
    ExecutableDetailData:
      required:
      - deployable
      - id
      - versionId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ExecutableId'
        scenarioId:
          $ref: '#/components/schemas/ScenarioId'
        versionId:
          $ref: '#/components/schemas/VersionId'
        parameters:
          $ref: '#/components/schemas/ExecutableParameterList'
        inputArtifacts:
          $ref: '#/components/schemas/ExecutableArtifactList'
        outputArtifacts:
          $ref: '#/components/schemas/ExecutableArtifactList'
        deployable:
          type: boolean
          description: Whether this executable is deployable
          example: false
    VersionId:
      type: string
      description: Version ID
    ExecutableParameterList:
      type: array
      description: Executable parameters
      items:
        $ref: '#/components/schemas/ExecutableParameter'
    ExecutableParameter:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the executable parameter
        description:
          type: string
          description: Description of the signature argument
        default:
          type: string
          description: Default value of the signature argument
        type:
          type: string
          description: Type of the executable parameter
          enum:
          - string
    ExecutableArtifactList:
      type: array
      description: Executable parameters
      items:
        $ref: '#/components/schemas/ExecutableArtifact'
    ExecutableArtifact:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the executable input artifacts
        kind:
          type: string
          description: Artifact kind (model, dataset, other)
        description:
          type: string
          description: Description of the signature argument
        labels:
          $ref: '#/components/schemas/LabelList'
    VersionList:
      type: object
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/Version'
    Version:
      allOf:
      - $ref: '#/components/schemas/VersionBaseData'
      - $ref: '#/components/schemas/VersionDetailData'
      - $ref: '#/components/schemas/CreationData'
      - $ref: '#/components/schemas/ModificationData'
    VersionBaseData:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/VersionDescription'
    VersionDescription:
      maxLength: 5000
      type: string
      description: Version description
      example: This is version v1
    VersionDetailData:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/VersionId'
        scenarioId:
          $ref: '#/components/schemas/ScenarioId'
    Capabilities:
      required:
      - aiApi
      type: object
      properties:
        runtimeIdentifier:
          type: string
          description: The name of the runtime
          example: aicore
        runtimeApiVersion:
          $ref: '#/components/schemas/Version_2'
        description:
          type: string
        aiApi:
          $ref: '#/components/schemas/AiApi'
        extensions:
          $ref: '#/components/schemas/Extensions'
    Version_2:
      pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
      type: string
      example: 1.2.3
    AiApi:
      description: There are (currently) the following types of execution engines  1) complete runtimes that offer executions and deployments, 2) runtimes that do only batch inference and therefore don't support deployments 3) runtimes that allow deployments, but with predefined models and therefore don't need executions 4) runtimes that have fixed endpoints and therefore only need listing deployments
      allOf:
      - $ref: '#/components/schemas/Spec'
      - type: object
        properties:
          capabilities:
            $ref: '#/components/schemas/AiApi_capabilities'
          limits:
            $ref: '#/components/schemas/AiApi_limits'
    Spec:
      required:
      - version
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Version_2'
    Extensions:
      type: object
      properties:
        analytics:
          allOf:
          - $ref: '#/components/schemas/Spec'
          - type: object
        resourceGroups:
          allOf:
          - $ref: '#/components/schemas/Spec'
          - type: object
        dataset:
          allOf:
          - $ref: '#/components/schemas/Spec'
          - type: object
            properties:
              capabilities:
                type: object
                properties:
                  upload:
                    type: boolean
                    description: Support for uploading of files
                    default: true
                  download:
                    type: boolean
                    description: Support for downloading of files
                    default: true
                  delete:
                    type: boolean
                    description: Support for deletion of files
                    default: true
                description: List of Dataset extension capabilities
              limits:
                type: object
                properties:
                  maxUploadFileSize:
                    type: integer
                    description: Max size (in bytes) of a single uploaded file allowed by this runtime per resource group.
                    default: 104857600
                  maxFilesPerDataset:
                    type: integer
                    description: Max number of files per dataset. <0 means unlimited.
                    default: -1
                  acceptedContentTypes:
                    type: array
                    items:
                      pattern: ^\w+\/([\w+-]\.)?[\w.-]+(\+[\w-]+)*$
                      type: string
        metrics:
          allOf:
          - $ref: '#/components/schemas/Spec'
          - type: object
            properties:
              capabilities:
                type: object
                properties:
                  extendedResults:
                    type: boolean
                    description: Support for returning extended results
                    default: false
                description: List of Metrics extension capabilities
    GetMetricResourceList:
      type: object
      allOf:
      - $ref: '#/components/schemas/ResourceCount'
      - required:
        - resources
        type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/GetMetricResource'
    ResourceCount:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
    GetMetricResource:
      allOf:
      - $ref: '#/components/schemas/MetricResource'
      - type: object
        properties:
          metrics:
            $ref: '#/components/schemas/GetMetricList'
    MetricResource:
      required:
      - executionId
      type: object
      properties:
        executionId:
          $ref: '#/components/schemas/ExecutionId_2'
        metrics:
          $ref: '#/components/schemas/MetricList'
        tags:
          $ref: '#/components/schemas/TagList'
        customInfo:
          $ref: '#/components/schemas/CustomInfoObjectList'
      description: Collection of various metrics/tags/labels associated against some execution/deployment
    ExecutionId_2:
      type: string
      description: ID of the deployment/execution
      example: aa97b177-9383-4934-8543-0f91b7a0283a
      oneOf:
      - $ref: '#/components/schemas/MlapiExecutionId'
    MlapiExecutionId:
      pattern: ^[\w.-]{4,64}$
      type: string
      description: Generic ID
      example: aa97b177-9383-4934-8543-0f91b7a0283a
    MetricList:
      type: array
      description: Array of Metric items
      items:
        $ref: '#/components/schemas/Metric'
    Metric:
      required:
      - name
      - value
      type: object
      properties:
        name:
          $ref: '#/components/schemas/MetricName'
        value:
          $ref: '#/components/schemas/MetricValue'
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        step:
          minimum: 0
          type: integer
          description: step is an optional integer that represents any measurement of training progress (number of training iterations, number of epochs, and so on) for the metric
          example: 2
        labels:
          $ref: '#/components/schemas/LabelList_2'
      description: Key-value metrics, where the value is numeric. Metric can also have optional step and label fields.
    MetricName:
      maxLength: 256
      pattern: '[\w-]{1,64}'
      type: string
      description: Name of the metric
      example: Error Rate
    MetricValue:
      type: number
      description: Numeric Value of the metric
      example: 0.98
    Timestamp:
      type: string
      description: Time when the metric was created or logged in RFC3339 format
      format: date-time
    LabelList_2:
      type: array
      description: a list of name-value object pairs associated with some metric.
      example:
      - name: group
        value: tree-82
      - name: metrics.ai.sap.com/Artifact.name
        value: sk_learn_rf_classifier_model
      items:
        $ref: '#/components/schemas/Label_2'
    Label_2:
      required:
      - name
      - value
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LabelName'
        value:
          maxLength: 256
          minLength: 1
          type: string
          description: Metric Label Value
          example: sk_learn_random_forest_model
      description: a classifying phrase/name applied to a metric
      example:
        name: group
        value: tree-82
    LabelName:
      maxLength: 256
      minLength: 1
      type: string
      description: Label name to label one or more metrics. "metrics.ai.sap.com/Artifact.name" is a reserved label to associate an artifact with the metrics
      example: metrics.ai.sap.com/Artifact.name
    TagList:
      type: array
      description: a list of name-value object pairs associated with the execution/deployment. Tags are queryable.
      items:
        $ref: '#/components/schemas/Tag'
    Tag:
      required:
      - name
      - value
      type: object
      properties:
        name:
          oneOf:
          - $ref: '#/components/schemas/GenericName_2'
        value:
          maxLength: 256
          minLength: 1
          type: string
          description: tag value
          example: RFC-1
      description: A dictionary of name-value pairs to support segregation at execution level.
      example:
        name: Artifact Group
        value: RFC-1
    GenericName_2:
      maxLength: 256
      minLength: 1
      type: string
      description: Generic name which can belong to a tag,label,metric or customInfo Object
      example: sample name
    CustomInfoObjectList:
      type: array
      items:
        $ref: '#/components/schemas/CustomInfoObject'
    CustomInfoObject:
      required:
      - name
      - value
      type: object
      properties:
        name:
          oneOf:
          - $ref: '#/components/schemas/GenericName_2'
        value:
          $ref: '#/components/schemas/CustomInfoObjectData'
      description: large object which provides rendering/semantic information regarding certain metric for consuming application or can be complex metrics in JSON format
      example:
        name: Confusion Matrix
        value: '[{''Predicted'': ''False'',  ''Actual'': ''False'',''value'': 34},{''Predicted'': ''False'',''Actual'': ''True'',  ''value'': 124}, {''Predicted'': ''True'',''Actual'': ''False'',''value'': 165},{  ''Predicted'': ''True'',''Actual'': ''True'',''value'': 36}]'
    CustomInfoObjectData:
      minLength: 1
      type: string
      description: Message
      example: "[{'Predicted': 'False',\t'Actual': 'False','value': 34},{'Predicted': 'False','Actual': 'True',\t'value': 124}, {'Predicted': 'True','Actual': 'False','value': 165},{\t'Predicted': 'True','Actual': 'True','value': 36}]"
    GetMetricList:
      type: array
      description: Array of Metric items
      items:
        $ref: '#/components/schemas/GetMetric'
    GetMetric:
      allOf:
      - $ref: '#/components/schemas/Metric'
      - required:
        - timestamp
        type: object
        properties:
          timestamp:
            $ref: '#/components/schemas/Timestamp'
    DeleteMetricsResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ExecutionId_2'
        message:
          type: string
          example: Metric Resource was successfully deleted
    StringArray:
      type: array
      example:
      - value1
      - value2
      items:
        type: string
    metricSelectorPermissibleValues:
      type: array
      description: Permissible value for $select could be either * or one or many of the values from metrics, tags, custominfo
      items:
        type: string
        enum:
        - metrics
        - tags
        - customInfo
        - '*'
    ApiError_2:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: Descriptive error code (not http status code).
        message:
          type: string
          description: plaintext error description
        requestId:
          type: string
          description: id of individual request
        target:
          type: string
          description: url that has been called
        details:
          type: array
          items:
            $ref: '#/components/schemas/DetailsErrorResponse'
    DetailsErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Descriptive error code (not http status code)
        message:
          type: string
          description: Plaintext error description
    ResultSet:
      title: ResultSet
      maxProperties: 2
      minProperties: 2
      type: object
      properties:
        header:
          $ref: '#/components/schemas/ArrayOfColumnNames'
        rows:
          $ref: '#/components/schemas/ResultRowList'
      additionalProperties: false
      readOnly: true
      x-examples:
        example-1:
          header:
          - ResourceGroup
          - Executions
          - Artifacts
          - Deployments
          rows:
          - - 00112233-4455-6677-8899-aabbccddeeff
            - 30
            - 30
            - 3
    ArrayOfColumnNames:
      uniqueItems: true
      type: array
      readOnly: true
      items:
        $ref: '#/components/schemas/ColumnName'
    ColumnName:
      type: string
      description: Name of the Column
      readOnly: true
      anyOf:
      - type: string
        enum:
        - ResourceGroup
        - Scenario
        - Executable
        - Executions
        - Artifacts
        - Deployments
      - {}
    ResultRowList:
      title: ResultRowList
      type: array
      items:
        $ref: '#/components/schemas/ResultRow'
    ResultRow:
      title: ResultRow
      uniqueItems: false
      type: array
      readOnly: true
      items:
        $ref: '#/components/schemas/ResultRowItem'
      x-examples: {}
    ResultRowItem:
      title: ResultRowItem
      anyOf:
      - $ref: '#/components/schemas/AggregationAttribute'
      - $ref: '#/components/schemas/CountAggregate'
      x-examples: {}
    AggregationAttribute:
      title: Aggregation Attribute
      type: string
      readOnly: true
    CountAggregate:
      title: CountAggregate
      minimum: 0
      type: integer
      format: int64
      readOnly: true
      x-examples: {}
    Error:
      required:
      - code
      - details
      - message
      - requestId
      - target
      type: object
      properties:
        code:
          minLength: 1
          type: string
        message:
          minLength: 1
          type: string
        target:
          minLength: 1
          type: string
        requestId:
          type: string
        details:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Error_details'
      description: Error Response
      x-examples:
        example-1:
          code: '03021655'
          message: Bad request encountered. Please try again with possible-solution-here.
          target: /url/path
          requestId: 9832bf934f3743v3948v3
          details:
          - code: '01041211'
            message: Optional nested error message.
    FileCreationResponse:
      required:
      - message
      - url
      type: object
      properties:
        message:
          type: string
          description: File creation response message
          example: File creation acknowledged
        url:
          $ref: '#/components/schemas/Url'
      description: Response for successful file creation
    objectStoreSecretStatusResponse:
      type: object
      description: This represents a list of meta-data of a stored secret. The 'data' field of the secret is never retrieved.
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/objectStoreSecretStatus'
    objectStoreSecretStatus:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/objectStoreSecretStatus_metadata'
        name:
          type: string
          description: Name of objectstore
          example: myobjectstore-object-store-secret
      description: This represents the meta-data of a stored secret. The 'data' field of the secret is never retrieved.
    objectStoreSecretCreationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/objectStoreSecretCreationResponseMessage'
    objectStoreSecretCreationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Secret has been created
    ErrorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error_2'
    Error_2:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: Descriptive error code (not http status code)
        message:
          type: string
          description: Plaintext error description
          example: something went wrong
        requestId:
          type: string
          description: ID of the individual request
        target:
          type: string
          description: Invoked URL
        details:
          type: object
          description: Optional details of the error message
    objectStoreSecretWithSensitiveDataRequestForPostCall:
      required:
      - data
      - name
      - type
      type: object
      properties:
        name:
          maxLength: 233
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
          type: string
          description: Name of the object store for the secret object to be created. Can be used later on check for existence of the secret.
          example: myobjectstore
        type:
          type: string
          description: Storage type e.g. S3, GCS,...
          example: S3
        bucket:
          type: string
          description: Bucket to be used
          example: mybucket1
        endpoint:
          type: string
          description: Optional parameter - URL of the storage server (S3 only)
          example: www.example.com
        region:
          type: string
          description: Optional parameter - Region of the storage server (S3 only)
          example: eu
        pathPrefix:
          type: string
          description: prefix folder to be added to storage path
          example: mp-api
        verifyssl:
          type: string
          description: 0, 1 flag for the KF-serving annotation - serving.kubeflow.org/s3-verifyssl
          example: '0'
        usehttps:
          type: string
          description: 0, 1 flag for KF-serving annotations - serving.kubeflow.org/s3-usehttps
          example: '1'
          default: '1'
        data:
          type: object
          description: key:value pairs of data
          writeOnly: true
      description: This represents all the meta-data and extra information to be stored as a k8-secret
    objectStoreSecretDeletionResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/objectStoreSecretDeletionResponseMessage'
    CreationResponse_2:
      required:
      - id
      - message
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        message:
          $ref: '#/components/schemas/CreationResponseMessage'
    objectStoreSecretDeletionResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Object Store Secret has been deleted
    objectStoreSecretModificationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/objectStoreSecretModificationResponseMessage'
    objectStoreSecretModificationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Secret has been modified
    objectStoreSecretWithSensitiveDataRequest:
      required:
      - data
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: Name of the object store for the secret object to be created. Can be used later on check for existence of the secret.
          example: myobjectstore
        type:
          type: string
          description: Storage type e.g. S3, GCS,...
          example: S3
        bucket:
          type: string
          description: Bucket to be used
          example: mybucket1
        endpoint:
          type: string
          description: Optional parameter - URL of the storage server (S3 only)
          example: www.example.com
        region:
          type: string
          description: Optional parameter - Region of the storage server (S3 only)
          example: eu
        pathPrefix:
          type: string
          description: prefix folder to be added to storage path
          example: mp-api
        verifyssl:
          type: string
          description: 0, 1 flag for the KF-serving annotation - serving.kubeflow.org/s3-verifyssl
          example: '0'
        usehttps:
          type: string
          description: 0, 1 flag for KF-serving annotations - serving.kubeflow.org/s3-usehttps
          example: '1'
          default: '1'
        data:
          type: object
          description: key:value pairs of data
          writeOnly: true
      description: This represents all the meta-data and extra information to be stored as a k8-secret
    ListGenericSecretsResponse:
      type: object
      description: This represents a list of meta-data of the secret. The 'data' field of the secret is never retrieved.
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/GenericSecretDetails'
    GenericSecretDetails:
      type: object
      properties:
        name:
          type: string
          description: Name of the secret
        createdAt:
          type: string
          description: Timestamp at which secret was created
    GenericSecretDataResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
        name:
          $ref: '#/components/schemas/Name'
    Name:
      type: string
      description: Name
    GenericSecretPostBody:
      required:
      - data
      - name
      type: object
      properties:
        name:
          maxLength: 252
          minLength: 1
          pattern: ^[a-z0-9\-\.]+$
          type: string
          description: The name of the secret
        data:
          $ref: '#/components/schemas/GenericSecretData'
    GenericSecretData:
      type: object
      additionalProperties:
        type: string
      description: Base64 encoded secret data
    GenericSecretPatchBody:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GenericSecretData'
    ResourceGroupList:
      type: object
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/ResourceGroup'
    ResourceGroup:
      required:
      - createdAt
      - resourceGroupId
      - status
      allOf:
      - $ref: '#/components/schemas/ResourceGroupBase'
      - type: object
        properties:
          createdAt:
            type: string
            description: Timestamp of resource group creation
            format: date-time
          labels:
            $ref: '#/components/schemas/ResourceGroupLabels'
          status:
            type: string
            description: aggregated status of the onboarding process
            enum:
            - PROVISIONED
            - ERROR
            - PROVISIONING
          statusMessage:
            type: string
            description: status message
    ResourceGroupBase:
      type: object
      properties:
        resourceGroupId:
          type: string
          description: resource group id
        tenantId:
          type: string
          description: tenant id
        zoneId:
          type: string
          description: zone id
    ResourceGroupLabels:
      type: array
      description: Arbitrary labels as meta information
      items:
        $ref: '#/components/schemas/ResourceGroupLabel'
    ResourceGroupLabel:
      required:
      - key
      - value
      type: object
      properties:
        key:
          maxLength: 63
          pattern: ^ext.ai.sap.com/(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]){1,48}$
          type: string
          example: ext.ai.sap.com/my-label
        value:
          maxLength: 5000
          type: string
    ResourceGroupsPostRequest:
      type: object
      properties:
        resourceGroupId:
          maxLength: 253
          minLength: 3
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9.-]{1,251}[a-zA-Z0-9]$
          type: string
          description: resource group id
        labels:
          $ref: '#/components/schemas/ResourceGroupLabels'
    ResourceGroupDeletionResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ResourceGroupDeletionResponseMessage'
    ResourceGroupDeletionResponseMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - example: Resource Group deletion scheduled
    ResourceGroupPatchRequest:
      type: object
      properties:
        labels:
          $ref: '#/components/schemas/ResourceGroupLabels'
    ResourceGetResponse:
      required:
      - resourcePlans
      type: object
      properties:
        resourcePlans:
          $ref: '#/components/schemas/ResourceGetResourcePlans'
    ResourceGetResourcePlans:
      type: object
      additionalProperties:
        required:
        - provisioned
        - requested
        type: object
        properties:
          provisioned:
            type: integer
          requested:
            type: integer
    ResourcePatchResponse:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    ResourcePatchBody:
      required:
      - resourcePlans
      type: object
      properties:
        resourcePlans:
          $ref: '#/components/schemas/ResourcePatchResourcePlans'
    ResourcePatchResourcePlans:
      type: array
      items:
        $ref: '#/components/schemas/ResourcePatchNodes'
    ResourcePatchNodes:
      required:
      - name
      - request
      type: object
      properties:
        name:
          type: string
        request:
          type: integer
    LogCommonResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LogCommonData'
      description: |
        A common log query response.
    LogCommonData:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/LogCommonResult'
    LogCommonResult:
      type: array
      items:
        $ref: '#/components/schemas/LogCommonResultItem'
    LogCommonResultItem:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/timestamp'
        msg:
          $ref: '#/components/schemas/message'
      description: Common log record.
    timestamp:
      type: string
      description: Datetime in RFC 3339.
      format: date-time
      example: '2021-05-19T00:00:14.347000Z'
    message:
      type: string
      description: message content.
    ErrorResponse_2:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error_2'
    ArgoCDRepositoryDataResponse:
      type: object
      description: This represents a list of GitOps repositories for the tenant.
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/ArgoCDRepositoryDetails'
    ArgoCDRepositoryDetails:
      type: object
      properties:
        name:
          type: string
          description: The name of the repository
        url:
          type: string
          description: The repository URL
        status:
          type: string
          description: The status of the repository's on-boarding
          example: COMPLETED
          enum:
          - ERROR
          - IN-PROGRESS
          - COMPLETED
      description: Repository details
    ArgoCDRepositoryCreationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ArgoCDRepositoryCreationResponseMessage'
    ArgoCDRepositoryCreationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Repository has been on-boarded
    ArgoCDRepositoryData:
      required:
      - password
      - url
      - username
      type: object
      properties:
        name:
          maxLength: 51
          minLength: 1
          pattern: ^[a-z0-9\-]+$
          type: string
          description: Name of the repository
        url:
          type: string
          description: URL of the repository to synchronise
        username:
          type: string
          description: Username for read-access to the repository
        password:
          type: string
          description: Password for read-access to the repository
    ArgoCDRepositoryDeletionResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ArgoCDRepositoryDeletionResponseMessage'
    ArgoCDRepositoryDeletionResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: The repository has been off-boarded.
    ArgoCDRepositoryModificationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ArgoCDRepositoryModificationResponseMessage'
    ArgoCDRepositoryModificationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: ArgoCD application has been updated
    ArgoCDRepositoryCredentials:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: Username for read-access to the repository
        password:
          type: string
          description: Password for read-access to the repository
    AllArgoCDApplicationData:
      type: object
      description: list of applications
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/ArgoCDApplicationData'
    ArgoCDApplicationData:
      type: object
      allOf:
      - $ref: '#/components/schemas/ArgoCDApplicationBaseData'
      - type: object
        properties:
          applicationName:
            maxLength: 54
            minLength: 3
            pattern: ^[a-z0-9\-]+$
            type: string
            description: ArgoCD application name
    ArgoCDApplicationBaseData:
      required:
      - path
      - repositoryUrl
      - revision
      type: object
      properties:
        repositoryUrl:
          type: string
          description: URL of the repository to synchronise
        revision:
          type: string
          description: revision to synchronise
        path:
          type: string
          description: path within the repository to synchronise
    ArgoCDApplicationCreationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ArgoCDApplicationCreationResponseMessage'
    ArgoCDApplicationCreationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: ArgoCD application has been created
    ArgoCDApplicationDataRepoName:
      required:
      - path
      - repositoryName
      - revision
      type: object
      properties:
        repositoryName:
          type: string
          description: Name of the repository to synchronise
        revision:
          type: string
          description: revision to synchronise
        path:
          type: string
          description: path within the repository to synchronise
        applicationName:
          maxLength: 54
          minLength: 3
          pattern: ^[a-z0-9\-]+$
          type: string
          description: ArgoCD application name
    ArgoCDApplicationStatus:
      type: object
      properties:
        healthStatus:
          type: string
          description: ArgoCD application health status
        syncStatus:
          type: string
          description: ArgoCD application sync status
        message:
          type: string
          description: ArgoCD application health status message
        source:
          $ref: '#/components/schemas/ArgoCDApplicationStatus_source'
        syncFinishedAt:
          type: string
          description: Gets the timestamp information related to the sync state of the ArgoCD application
        syncStartedAt:
          type: string
          description: Get timestamp information related to the sync state of the ArgoCD application
        reconciledAt:
          type: string
          description: Get timestamp information related to the sync state of the ArgoCD application
        syncResourcesStatus:
          type: array
          description: Status of all resources that need to be synchronized with the gitops repo
          items:
            $ref: '#/components/schemas/ArgoCDApplicationStatus_syncResourcesStatus'
        syncRessourcesStatus:
          type: array
          description: Status of all resources that need to be synchronized with the gitops repo. Misspelled and deprecated, use syncResourcesStatus instead.
          deprecated: true
          items:
            $ref: '#/components/schemas/ArgoCDApplicationStatus_syncResourcesStatus'
      description: ArgoCD application definition and status
    ArgoCDApplicationDeletionResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ArgoCDApplicationDeletionResponseMessage'
    ArgoCDApplicationDeletionResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: ArgoCD application has been deleted
    ArgoCDApplicationModificationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ArgoCDApplicationModificationResponseMessage'
    ArgoCDApplicationModificationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: ArgoCD application has been updated
    ArgoCDApplicationRefreshResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/ArgoCDApplicationRefreshResponseMessage'
    ArgoCDApplicationRefreshResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Refresh of ArgoCD application has been scheduled
    dockerRegistrySecretStatus:
      type: object
      properties:
        name:
          type: string
          description: Name of dockerRegistryStore
          example: mydockeregistry
      description: This represents the meta-data of a stored secret. The 'data' field of the secret is never retrieved.
    dockerRegistrySecretDeletionResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/dockerRegistrySecretDeletionResponseMessage'
    dockerRegistrySecretDeletionResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Docker Registry Secret has been deleted
    dockerRegistrySecretModificationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponse_2'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/dockerRegistrySecretModificationResponseMessage'
    dockerRegistrySecretModificationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Secret has been modified
    dockerRegistrySecretWithSensitiveDataRequest:
      required:
      - data
      type: object
      properties:
        data:
          type: object
          description: key:value pairs of data
          writeOnly: true
      description: This represents all the meta-data and extra information to be stored as a k8-secret
    dockerRegistrySecretStatusResponse:
      type: object
      description: This represents a list of meta-data of a stored secret. The 'data' field of the secret is never retrieved.
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/dockerRegistrySecretStatus'
    dockerRegistrySecretCreationResponse:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - type: object
        properties:
          message:
            $ref: '#/components/schemas/dockerRegistrySecretCreationResponseMessage'
    dockerRegistrySecretCreationResponseMessage:
      allOf:
      - $ref: '#/components/schemas/CreationResponseMessage'
      - example: Secret has been created
    dockerRegistryNameComponent:
      maxLength: 63
      pattern: ^[a-z0-9](?:_?[a-z0-9\.\-]+)*[a-z0-9]$
      type: string
      description: Name of the docker Registry store for the secret.
      example: mydockeregistry
    ServiceList:
      type: object
      allOf:
      - $ref: '#/components/schemas/ResourceList'
      - type: object
        properties:
          resources:
            type: array
            items:
              $ref: '#/components/schemas/Service'
    Service:
      type: object
      allOf:
      - $ref: '#/components/schemas/ServiceBase'
      - type: object
        properties:
          status:
            type: string
            description: aggregated status of the service
            enum:
            - PROVISIONED
            - ERROR
            - PROVISIONING
            - DEPROVISIONING
          statusMessage:
            type: string
            description: status message
    ServiceBase:
      type: object
      properties:
        name:
          type: string
          description: service name
        description:
          type: string
          description: service description
        url:
          type: string
          description: service broker url
    ExtendedService:
      type: object
      allOf:
      - $ref: '#/components/schemas/ServiceBase'
      - $ref: '#/components/schemas/ServiceDetails'
      - type: object
        properties:
          status:
            type: string
            description: aggregated status of the service
            enum:
            - PROVISIONED
            - ERROR
            - PROVISIONING
            - DEPROVISIONING
          statusMessage:
            type: string
            description: status message
    ServiceDetails:
      type: object
      properties:
        brokerSecret:
          $ref: '#/components/schemas/ServiceBrokerSecret'
        capabilities:
          $ref: '#/components/schemas/ServiceCapabilities'
        serviceCatalog:
          $ref: '#/components/schemas/ServiceServiceCatalog'
    ServiceBrokerSecret:
      type: object
      properties:
        name:
          type: string
          description: broker secret name
        passwordKeyRef:
          type: string
          description: username key reference in broker secret
        usernameKeyRef:
          type: string
          description: password key reference in broker secret
    ServiceCapabilities:
      type: object
      properties:
        logs:
          $ref: '#/components/schemas/ServiceCapabilities_logs'
        basic:
          $ref: '#/components/schemas/ServiceCapabilities_basic'
    ServiceServiceCatalog:
      type: array
      items:
        $ref: '#/components/schemas/ServiceServiceCatalogItem'
    ServiceServiceCatalogItem:
      type: object
      properties:
        extendCatalog:
          $ref: '#/components/schemas/ServiceServiceCatalogItemExtendCatalog'
        extendCredentials:
          $ref: '#/components/schemas/ServiceServiceCatalogItemExtendCredentials'
    ServiceServiceCatalogItemExtendCatalog:
      type: object
      properties:
        bindable:
          type: boolean
          description: if the service is bindable
        description:
          type: string
          description: description of the service
        id:
          type: string
          description: id of the service
        name:
          type: string
          description: name of the service
        plans:
          type: array
          items:
            $ref: '#/components/schemas/ServiceServicePlanItem'
    ServiceServicePlanItem:
      type: object
      properties:
        description:
          type: string
          description: description of the service plan
        free:
          type: boolean
          description: if the service plan free
        id:
          type: string
          description: id of the service plan
        name:
          type: string
          description: name of the service plan
        metadata:
          $ref: '#/components/schemas/ServiceServicePlanItemMetadata'
    ServiceServicePlanItemMetadata:
      type: object
      properties:
        supportedPlatforms:
          type: array
          description: supported platforms of the service plan
          items:
            type: string
            enum:
            - cloudfoundry
            - kubernetes
            - sapbtp
    ServiceServiceCatalogItemExtendCredentials:
      type: object
      properties:
        shared:
          $ref: '#/components/schemas/ServiceServiceCatalogItemExtendCredentials_shared'
    name:
      type: string
      allOf:
      - $ref: '#/components/schemas/ArtifactName'
    inline_response_400:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ApiError'
    inline_response_400_1:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ApiError_2'
    body:
      oneOf:
      - $ref: '#/components/schemas/ArgoCDApplicationData'
      - $ref: '#/components/schemas/ArgoCDApplicationDataRepoName'
    body_1:
      allOf:
      - $ref: '#/components/schemas/dockerRegistrySecretWithSensitiveDataRequest'
      - required:
        - name
        type: object
        properties:
          name:
            $ref: '#/components/schemas/dockerRegistryNameComponent'
    AiApi_capabilities_logs:
      type: object
      properties:
        executions:
          type: boolean
          default: true
        deployments:
          type: boolean
          default: true
    AiApi_capabilities_bulkUpdates:
      type: object
      properties:
        executions:
          type: boolean
          default: false
        deployments:
          type: boolean
          default: false
      description: Services that support patch on /executions and /deployments to change targetStatus of multiple executions and deployments.
    AiApi_capabilities:
      type: object
      properties:
        multitenant:
          type: boolean
          description: true-> AI API implementation supports resource groups (Main Tenant scenario), false-> implementation does not support resource groups (Service Tenant scenario)
          default: true
        shareable:
          type: boolean
          description: true-> clients can use just one instance (global static models), false-> clients should avoid sharing an instance
          default: true
        staticDeployments:
          type: boolean
          description: There are static always running endpoints that can be used for inference without the need to do user deployments.
          default: true
        userDeployments:
          type: boolean
          description: Services that only support batch inference typically neither allow listing nor creation of deployments. For these, userDeployments == false
          default: true
        userExecutions:
          type: boolean
          default: true
        timeToLiveDeployments:
          type: boolean
          default: false
        executionSchedules:
          type: boolean
          default: false
        logs:
          $ref: '#/components/schemas/AiApi_capabilities_logs'
        bulkUpdates:
          $ref: '#/components/schemas/AiApi_capabilities_bulkUpdates'
    AiApi_limits_executions:
      type: object
      properties:
        maxRunningCount:
          type: integer
          description: Max nr of executions allowed by this runtime per resource group. <0 means unlimited.
          default: -1
    AiApi_limits_deployments:
      type: object
      properties:
        maxRunningCount:
          type: integer
          description: Max nr of deployments allowed by this runtime per resource group. <0 means unlimited.
          default: -1
    AiApi_limits_timeToLiveDeployments:
      type: object
      properties:
        minimum:
          type: string
          default: 10m
        maximum:
          type: string
          default: -1
    AiApi_limits:
      type: object
      properties:
        executions:
          $ref: '#/components/schemas/AiApi_limits_executions'
        deployments:
          $ref: '#/components/schemas/AiApi_limits_deployments'
        timeToLiveDeployments:
          $ref: '#/components/schemas/AiApi_limits_timeToLiveDeployments'
    Error_details:
      required:
      - code
      - message
      properties:
        code:
          minLength: 1
          type: string
        message:
          minLength: 1
          type: string
    objectStoreSecretStatus_metadata:
      type: object
      properties:
        serving.kubeflow.org/s3-usehttps:
          type: string
          description: 0 and 1 values for setting the flag
          example: '1'
        serving.kubeflow.org/s3-verifyssl:
          type: string
          description: 0 and 1 values for setting the flag
          example: '0'
        serving.kubeflow.org/s3-endpoint:
          type: string
          description: Annotation for endpoint required by KF_Serving
          example: some_endpoint
        serving.kubeflow.org/s3-region:
          type: string
          description: Annotation for region required by KF_Serving
          example: EU
        storage.ai.sap.com/type:
          type: string
          description: Storage type of the secret
          example: S3
        storage.ai.sap.com/bucket:
          type: string
          description: bucket assigned to the secret on creation
          example: my_bucket
        storage.ai.sap.com/endpoint:
          type: string
          description: Endpoint assigned to the secret on creation
          example: some_endpoint
        storage.ai.sap.com/region:
          type: string
          description: Region of the storage server
          example: EU
        storage.ai.sap.com/pathPrefix:
          type: string
          description: Pathprefix type assigned to the secret on creation.
          example: mnist_folder
        storage.ai.sap.com/hdfsNameNode:
          type: string
          description: name node of the HDFS file system
          example: https://c3272xxxxxfa8f.files.hdl.canary-eu10.hanacloud.ondemand.com
        storage.ai.sap.com/headers:
          type: string
          description: headers for webHDFS and other protocols
          example: '{"x-sap-filecontainer": "c32727xxxxxxx322dcfa8f"}'
        storage.ai.sap.com/containerUri:
          type: string
          description: container uri of azure storage
          example: https://sapcv842awjkfb2.blob.core.windows.net/sapcp-osaas-xxx-xxxx-xxxx-xxxx-xxxx-zrs
        storage.ai.sap.com/subscriptionId:
          type: string
          description: subscription id
          example: dgewg2-gkrwnegiw
        storage.ai.sap.com/tenantId:
          type: string
          description: tenant id
          example: dawd2120-dadwad2
      description: Key value paris of meta-data assigned to the secret when the secret was being created.
    ArgoCDApplicationStatus_source:
      type: object
      properties:
        repoURL:
          type: string
          description: URL of the repository
        path:
          type: string
          description: Path of the repository
        revision:
          type: string
          description: Revision number of the ArgoCD application
      description: Information about the ArgoCD application itself
    ArgoCDApplicationStatus_syncResourcesStatus:
      type: object
      properties:
        name:
          type: string
          description: ArgoCD application object name
        kind:
          type: string
          description: ArgoCD application object kind
        status:
          type: string
          description: ArgoCD application object sync status
        message:
          type: string
          description: ArgoCD application object message
    ServiceCapabilities_logs:
      type: object
      properties:
        deployments:
          type: boolean
        executions:
          type: boolean
      description: Capabilities to read logs from deployments and executions.
    ServiceCapabilities_basic:
      type: object
      properties:
        staticDeployments:
          type: boolean
          description: There are static always running endpoints that can be used for inference without the need to do user deployments.
        userDeployments:
          type: boolean
          description: Services that only support batch inference typically neither allow listing nor creation of deployments. For these, userDeployments == false
        createExecutions:
          type: boolean
          description: Services that only support deployment typically neither allow create executions. For these, createExecutions == false
        multitenant:
          type: boolean
          description: true-> AI API implementation supports resource groups (Main Tenant scenario), false-> implementation does not support resource groups (Service Tenant scenario)
      description: Basic capabilities like creating deployments and executions.
    ServiceServiceCatalogItemExtendCredentials_shared_serviceUrls:
      type: object
      properties:
        AI_API_URL:
          type: string
    ServiceServiceCatalogItemExtendCredentials_shared:
      type: object
      properties:
        serviceUrls:
          $ref: '#/components/schemas/ServiceServiceCatalogItemExtendCredentials_shared_serviceUrls'
  securitySchemes:
    Oauth2:
      type: oauth2
      description: OAuth client credentials (client ID and secret) are required. These can be requested from SAP BTP cloud cockpit.
      flows:
        clientCredentials:
          tokenUrl: https://(subdomain_identity_zone).authentication.(host)/oauth/token
          scopes: {}
x-sap-shortText: Create and manage AI scenarios, trainings, deployments, and artifacts in SAP AI Core.
